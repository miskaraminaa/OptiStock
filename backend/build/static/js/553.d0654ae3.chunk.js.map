{"version":3,"file":"static/js/553.d0654ae3.chunk.js","mappings":"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","sources":["components/Typography/Subtitle.js","components/Cards/TitleCard.js","pages/protected/Controle.js"],"sourcesContent":[" function Subtitle({styleClass, children}){\r\n    return(\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","import Subtitle from \"../Typography/Subtitle\"\r\n\r\n  \r\n  function TitleCard({title, children, topMargin, TopSideButtons}){\r\n      return(\r\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\r\n\r\n            {/* Title for Card */}\r\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n                {title}\r\n\r\n                {/* Top side button, show only if present */}\r\n                {\r\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n                }\r\n              </Subtitle>\r\n              \r\n              <div className=\"divider mt-2\"></div>\r\n          \r\n              {/** Card Body */}\r\n              <div className='h-full w-full pb-6 bg-base-100'>\r\n                  {children}\r\n              </div>\r\n          </div>\r\n          \r\n      )\r\n  }\r\n  \r\n  \r\n  export default TitleCard","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { motion } from 'framer-motion';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport { FaTrash } from 'react-icons/fa';\r\nimport moment from 'moment';\r\nimport * as XLSX from 'xlsx';\r\nimport { setPageTitle } from '../../features/common/headerSlice';\r\nimport TitleCard from '../../components/Cards/TitleCard';\r\n\r\nconst Controle = () => {\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        nOt: '',\r\n        bs: '',\r\n        typeSortie: '',\r\n        dateLivraison: '',\r\n    });\r\n    const [selectedItems, setSelectedItems] = useState(new Set());\r\n    const [isLoadingData, setIsLoadingData] = useState(false);\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [showAddForm, setShowAddForm] = useState(false);\r\n    const [newItem, setNewItem] = useState({\r\n        type_sortie: 'OT',\r\n        nature_sortie: 'normal',\r\n        magasin: 'Magasin',\r\n        articles: [],\r\n        date_livraison: moment().format('YYYY-MM-DD'),\r\n    });\r\n    const [mb51Articles, setMb51Articles] = useState([]);\r\n    const [articleFilter, setArticleFilter] = useState('');\r\n    const BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n    const COLUMNS = [\r\n        { header: 'Date Livraison', key: 'date_livraison' },\r\n        { header: 'N° OT', key: 'n_ot' },\r\n        { header: 'N° BS', key: 'bs' },\r\n        { header: 'N° LE', key: 'le' },\r\n        { header: 'N° STO', key: 'commande_achat' },\r\n        { header: 'Nature de sortie', key: 'nature_sortie' },\r\n        { header: 'Type de sortie', key: 'type_sortie' },\r\n        { header: 'N° Réservation', key: 'n_reservation' },\r\n        { header: 'Magasin', key: 'magasin' },\r\n        { header: 'Local', key: 'local' },\r\n        { header: 'Demandeur', key: 'demandeur' },\r\n        { header: 'Préparateur', key: 'preparateur' },\r\n        { header: 'Responsable local', key: 'responsable_local' },\r\n        { header: 'Articles', key: 'articles' },\r\n    ];\r\n\r\n    const STOCK_COLUMNS = [\r\n        { header: 'Article', key: 'article' },\r\n        { header: 'Désignation', key: 'designation_article' },\r\n        { header: 'Stock Initial', key: 'stock_initial' },\r\n        { header: 'Sorties', key: 'sorties' },\r\n        { header: 'Entrées', key: 'entrees' },\r\n        { header: 'Quantité Contrôle', key: 'stock_quantite_controle' },\r\n        { header: 'Quantité IAM', key: 'quantite_iam' },\r\n        { header: 'Validation', key: 'validation' },\r\n    ];\r\n\r\n    const TYPE_SORTIE_OPTIONS = [\r\n        { value: 'OT', label: 'OT' },\r\n        { value: 'BS', label: 'BS' },\r\n        { value: 'LE', label: 'LE' },\r\n        { value: 'STO', label: 'STO' },\r\n    ];\r\n\r\n    const NATURE_SORTIE_OPTIONS = [\r\n        { value: 'urgent', label: 'Urgent' },\r\n        { value: 'normal', label: 'Normal' },\r\n        { value: 'session', label: 'Session' },\r\n    ];\r\n\r\n    const MAGASIN_OPTIONS = [\r\n        { value: 'Magasin', label: 'Magasin' },\r\n        { value: 'Magasin EPI', label: 'Magasin EPI' },\r\n        { value: 'Parc Exterieur', label: 'Parc Exterieur' },\r\n    ];\r\n\r\n    const LOCAL_OPTIONS = {\r\n        Magasin: [\r\n            { value: 'MSLE', label: 'MSLE/MSLT - BOUZIT LAHSSAN', responsable: 'BOUZIT LAHSSAN' },\r\n            { value: 'MSLV', label: 'MSLV/MSRL/MSGP/MSLL/MSPC/DSED - BENDADA MOHAMMED', responsable: 'BENDADA MOHAMMED' },\r\n        ],\r\n        'Magasin EPI': [{ value: 'MSFE', label: 'MSFE - BOUALLAK NOURDINE', responsable: 'BOUALLAK NOURDINE' }],\r\n        'Parc Exterieur': [{ value: 'PEXT', label: 'PEXT/el kouhail abdelmajid', responsable: 'el kouhail abdelmajid' }],\r\n    };\r\n\r\n    const RESPONSABLE_MAGASIN = {\r\n        Magasin: 'JAMAL RHENNAOUI',\r\n        'Magasin EPI': 'ELBAHI AMINE',\r\n        'Parc Exterieur': 'SARGALI YOUSSEF',\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title: 'Contrôle Livraison' }));\r\n    }, [dispatch]);\r\n\r\n    const fetchMb51Articles = async () => {\r\n        setIsLoadingData(true);\r\n        setError(null);\r\n        try {\r\n            const res = await fetch(`${BASE_URL}/controle/mb51/articles`);\r\n            if (!res.ok) {\r\n                throw new Error(`Erreur HTTP ! Statut : ${res.status}`);\r\n            }\r\n            const articles = await res.json();\r\n            setMb51Articles(articles.map(article => ({\r\n                ...article,\r\n                stock_quantite_controle: parseFloat(article.stock_quantite_controle) || 0,\r\n            })));\r\n            if (articles.length === 0) {\r\n                setError('Aucun article trouvé dans la réponse de l\\'API.');\r\n            }\r\n        } catch (err) {\r\n            setError(`Échec du chargement des articles : ${err.message}`);\r\n            console.error('[Controle] Erreur articles:', err);\r\n        } finally {\r\n            setIsLoadingData(false);\r\n        }\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        setIsLoadingData(true);\r\n        setError(null);\r\n        try {\r\n            const res = await fetch(`${BASE_URL}/controle/data`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(filters),\r\n            });\r\n            if (!res.ok) throw new Error(`Erreur HTTP ! Statut : ${res.status}`);\r\n            const data = await res.json();\r\n            const normalizedData = data.map((item) => ({\r\n                ...item,\r\n                n_ot: item.n_ot ? item.n_ot.trim().toLowerCase() : '',\r\n                bs: item.bs ? item.bs.trim().toLowerCase() : '',\r\n                le: item.le ? item.le.trim().toLowerCase() : '',\r\n                commande_achat: item.commande_achat ? item.commande_achat.trim() : '',\r\n                nature_sortie: item.nature_sortie ? item.nature_sortie.trim() : '',\r\n                type_sortie: item.type_sortie ? item.type_sortie.trim() : '',\r\n                n_reservation: item.n_reservation ? item.n_reservation.trim() : '',\r\n                magasin: item.magasin ? item.magasin.trim() : '',\r\n                local: item.local ? item.local.trim() : '',\r\n                demandeur: item.demandeur ? item.demandeur.trim() : '',\r\n                preparateur: item.preparateur ? item.preparateur.trim() : '',\r\n                responsable_local: item.responsable_local ? item.responsable_local.trim() : '',\r\n                articles: Array.isArray(item.articles) ? item.articles : (typeof item.articles === 'string' ? JSON.parse(item.articles || '[]') : []),\r\n                date_livraison: item.date_livraison || 'N/V',\r\n            }));\r\n            setData(normalizedData);\r\n            applyFilters(normalizedData);\r\n        } catch (err) {\r\n            setError(`Échec du chargement des données : ${err.message}`);\r\n            console.error('[Controle] Erreur data:', err);\r\n        } finally {\r\n            setIsLoadingData(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        fetchMb51Articles();\r\n    }, [filters]);\r\n\r\n    const applyFilters = (data) => {\r\n        let filtered = [...data];\r\n        if (filters.nOt) {\r\n            filtered = filtered.filter((item) => item.n_ot?.toLowerCase().includes(filters.nOt.toLowerCase()));\r\n        }\r\n        if (filters.bs) {\r\n            filtered = filtered.filter((item) => item.bs?.toLowerCase().includes(filters.bs.toLowerCase()));\r\n        }\r\n        if (filters.typeSortie) {\r\n            filtered = filtered.filter((item) => item.type_sortie === filters.typeSortie);\r\n        }\r\n        if (filters.dateLivraison) {\r\n            filtered = filtered.filter((item) => item.date_livraison === filters.dateLivraison);\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const toggleItem = (index) => {\r\n        const newSelected = new Set(selectedItems);\r\n        if (newSelected.has(index)) {\r\n            newSelected.delete(index);\r\n        } else {\r\n            newSelected.add(index);\r\n        }\r\n        setSelectedItems(newSelected);\r\n    };\r\n\r\n    const addArticle = (article, designation_article) => {\r\n        if (!mb51Articles.length) {\r\n            setError('Les articles ne sont pas encore chargés. Veuillez réessayer.');\r\n            return;\r\n        }\r\n        if (!newItem.articles.some((a) => a.article === article)) {\r\n            setNewItem((prev) => ({\r\n                ...prev,\r\n                articles: [...prev.articles, { article, designation_article, quantity: 0, quantite_mise_a_jour: 0 }],\r\n            }));\r\n            setError(null);\r\n        }\r\n    };\r\n\r\n    const updateQuantity = (index, value) => {\r\n        const updatedArticles = [...newItem.articles];\r\n        const quantity = parseFloat(value) || 0;\r\n        if (quantity < 0) {\r\n            setError('La quantité ne peut pas être négative.');\r\n            return;\r\n        }\r\n        const mb51Article = mb51Articles.find((a) => a.article === updatedArticles[index].article);\r\n        if (mb51Article && quantity > mb51Article.stock_quantite_controle) {\r\n            setError(`Quantité pour ${updatedArticles[index].article} dépasse la quantité contrôle (${mb51Article.stock_quantite_controle})`);\r\n            return;\r\n        }\r\n        updatedArticles[index].quantity = quantity;\r\n        updatedArticles[index].quantite_mise_a_jour = (mb51Article?.stock_quantite_controle || 0) - quantity;\r\n        setNewItem((prev) => ({ ...prev, articles: updatedArticles }));\r\n        setError(null);\r\n    };\r\n\r\n    const removeArticle = (index) => {\r\n        const updatedArticles = [...newItem.articles];\r\n        updatedArticles.splice(index, 1);\r\n        setNewItem((prev) => ({ ...prev, articles: updatedArticles }));\r\n        setError(null);\r\n    };\r\n\r\n    const updateItems = async (action) => {\r\n        try {\r\n            if (action === 'add' && newItem) {\r\n                if (!newItem.articles || newItem.articles.length === 0) {\r\n                    throw new Error('Au moins un article doit être fourni.');\r\n                }\r\n                if (!newItem.date_livraison) {\r\n                    throw new Error('La date de livraison est requise.');\r\n                }\r\n                for (const article of newItem.articles) {\r\n                    if (!article.article || article.quantity <= 0) {\r\n                        throw new Error(`L'article ${article.article || 'inconnu'} doit avoir une quantité positive.`);\r\n                    }\r\n                    const mb51Article = mb51Articles.find((a) => a.article === article.article);\r\n                    if (!mb51Article) {\r\n                        throw new Error(`L'article ${article.article} n'est pas disponible dans le stock.`);\r\n                    }\r\n                    if (article.quantity > mb51Article.stock_quantite_controle) {\r\n                        throw new Error(`Quantité pour ${article.article} dépasse la quantité contrôle (${mb51Article.stock_quantite_controle}).`);\r\n                    }\r\n                }\r\n\r\n                const selectedLocal = LOCAL_OPTIONS[newItem.magasin]?.find((loc) => loc.value === newItem.local);\r\n                let { n_ot = '', bs = '', le = '', commande_achat = '' } = newItem;\r\n\r\n                if (newItem.type_sortie === 'OT' && (!n_ot || n_ot.trim() === '')) {\r\n                    n_ot = `OT${moment().format('YYYYMMDDHHmmss')}`;\r\n                }\r\n                if (newItem.type_sortie === 'BS' && (!bs || bs.trim() === '')) {\r\n                    bs = `BS${moment().format('YYYYMMDDHHmmss')}`;\r\n                }\r\n                if (newItem.type_sortie === 'LE' && (!le || le.trim() === '')) {\r\n                    le = `LE${moment().format('YYYYMMDDHHmmss')}`;\r\n                }\r\n                if (newItem.type_sortie === 'STO' && (!commande_achat || commande_achat.trim() === '')) {\r\n                    commande_achat = `STO${moment().format('YYYYMMDDHHmmss')}`;\r\n                }\r\n\r\n                if (newItem.type_sortie === 'OT' && !n_ot) throw new Error('Le N° OT est requis pour un type de sortie OT.');\r\n                if (newItem.type_sortie === 'BS' && !bs) throw new Error('Le BS est requis pour un type de sortie BS.');\r\n                if (newItem.type_sortie === 'LE' && !le) throw new Error('Le LE est requis pour un type de sortie LE.');\r\n                if (newItem.type_sortie === 'STO' && !commande_achat) throw new Error(\"La commande d'achat est requise pour un type de sortie STO.\");\r\n\r\n                const itemToAdd = {\r\n                    ...newItem,\r\n                    n_ot,\r\n                    bs,\r\n                    le,\r\n                    commande_achat,\r\n                    responsable_local: selectedLocal?.responsable || newItem.responsable_local || '',\r\n                    magasin: newItem.magasin || 'Magasin',\r\n                    date_livraison: newItem.date_livraison,\r\n                    articles: newItem.articles.map((a) => ({\r\n                        article: a.article,\r\n                        designation_article: a.designation_article,\r\n                        quantity: parseFloat(a.quantity) || 0,\r\n                        quantite_mise_a_jour: a.quantite_mise_a_jour || 0,\r\n                    })),\r\n                };\r\n                setIsLoadingData(true);\r\n                const res = await fetch(`${BASE_URL}/controle/update`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ action: 'add', data: itemToAdd }),\r\n                });\r\n                if (!res.ok) {\r\n                    const errorData = await res.json();\r\n                    throw new Error(errorData.error || \"Erreur lors de l'ajout\");\r\n                }\r\n                setShowAddForm(false);\r\n                setNewItem({ type_sortie: 'OT', nature_sortie: 'normal', magasin: 'Magasin', articles: [], date_livraison: moment().format('YYYY-MM-DD') });\r\n                setArticleFilter('');\r\n                setError(null);\r\n                await fetchData();\r\n            } else if (action === 'remove' && selectedItems.size > 0) {\r\n                const recordsToRemove = Array.from(selectedItems)\r\n                    .map((index) => {\r\n                        const row = filteredData[index];\r\n                        if (!row) return null;\r\n\r\n                        let identifier;\r\n                        switch (row.type_sortie) {\r\n                            case 'OT':\r\n                                identifier = row.n_ot;\r\n                                break;\r\n                            case 'BS':\r\n                                identifier = row.bs;\r\n                                break;\r\n                            case 'LE':\r\n                                identifier = row.le;\r\n                                break;\r\n                            case 'STO':\r\n                                identifier = row.commande_achat;\r\n                                break;\r\n                            default:\r\n                                return null;\r\n                        }\r\n\r\n                        if (!identifier || identifier.trim() === '') return null;\r\n                        return { type_sortie: row.type_sortie, identifier };\r\n                    })\r\n                    .filter((record) => record !== null);\r\n\r\n                if (recordsToRemove.length === 0) {\r\n                    throw new Error('Aucun identifiant valide sélectionné pour la suppression.');\r\n                }\r\n\r\n                setIsDeleting(true);\r\n                const res = await fetch(`${BASE_URL}/controle/update`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ action: 'remove', data: recordsToRemove }),\r\n                });\r\n\r\n                if (!res.ok) {\r\n                    const errorData = await res.json();\r\n                    throw new Error(errorData.error || 'Erreur lors de la suppression');\r\n                }\r\n\r\n                setSelectedItems(new Set());\r\n                setError(null);\r\n                await fetchData();\r\n            } else {\r\n                throw new Error('Aucune action valide ou aucun élément sélectionné.');\r\n            }\r\n        } catch (err) {\r\n            setError(`Échec de la mise à jour : ${err.message}`);\r\n            console.error('[Controle] Erreur update:', err);\r\n        } finally {\r\n            setIsDeleting(false);\r\n            setIsLoadingData(false);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (index) => {\r\n        try {\r\n            const row = filteredData[index];\r\n            if (!row) {\r\n                throw new Error('Enregistrement invalide pour la suppression.');\r\n            }\r\n\r\n            let identifier;\r\n            let identifierField;\r\n            switch (row.type_sortie) {\r\n                case 'OT':\r\n                    identifier = row.n_ot;\r\n                    identifierField = 'n_ot';\r\n                    break;\r\n                case 'BS':\r\n                    identifier = row.bs;\r\n                    identifierField = 'bs';\r\n                    break;\r\n                case 'LE':\r\n                    identifier = row.le;\r\n                    identifierField = 'le';\r\n                    break;\r\n                case 'STO':\r\n                    identifier = row.commande_achat;\r\n                    identifierField = 'commande_achat';\r\n                    break;\r\n                default:\r\n                    throw new Error(`Type de sortie non reconnu: ${row.type_sortie}`);\r\n            }\r\n\r\n            if (!identifier || identifier.trim() === '') {\r\n                throw new Error(`Identifiant ${identifierField} invalide pour la suppression.`);\r\n            }\r\n\r\n            setIsDeleting(true);\r\n            const res = await fetch(`${BASE_URL}/controle/update`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    action: 'remove',\r\n                    data: [{ type_sortie: row.type_sortie, identifier }],\r\n                }),\r\n            });\r\n\r\n            if (!res.ok) {\r\n                const errorData = await res.json();\r\n                throw new Error(errorData.error || 'Erreur lors de la suppression');\r\n            }\r\n\r\n            setError(null);\r\n            await fetchData();\r\n        } catch (err) {\r\n            setError(`Échec de la suppression : ${err.message}`);\r\n            console.error('[Controle] Erreur delete:', err);\r\n        } finally {\r\n            setIsDeleting(false);\r\n        }\r\n    };\r\n\r\n    const exportLivraisonsToExcel = () => {\r\n        const livraisonsSheet = XLSX.utils.json_to_sheet(\r\n            filteredData.map((row) => ({\r\n                ...row,\r\n                articles: Array.isArray(row.articles) ? row.articles.map((a) => `${a.article} (${a.quantity})`).join(', ') : '',\r\n                date_livraison: row.date_livraison && row.date_livraison !== 'N/V' ? moment(row.date_livraison).format('DD/MM/YYYY') : 'N/V',\r\n            }))\r\n        );\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, livraisonsSheet, 'Controle Livraisons');\r\n        XLSX.writeFile(wb, `controle_livraisons_${filters.dateLivraison || moment().format('YYYYMMDD')}.xlsx`);\r\n    };\r\n\r\n    const exportStockToExcel = () => {\r\n        const stockSheet = XLSX.utils.json_to_sheet(mb51Articles);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, stockSheet, 'Stock Control');\r\n        XLSX.writeFile(wb, `stock_control_${moment().format('YYYYMMDD')}.xlsx`);\r\n    };\r\n\r\n    const handlePrintLivraisons = () => {\r\n        const printWindow = window.open('', '_blank');\r\n        const printContent = `\r\n            <html>\r\n                <head>\r\n                    <title>Contrôle Livraisons - ${filters.dateLivraison || moment().format('DD/MM/YYYY')}</title>\r\n                    <style>\r\n                        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');\r\n                        body { font-family: 'Inter', sans-serif; margin: 20px; color: #1f2937; }\r\n                        h1 { text-align: center; font-size: 1.5rem; font-weight: 700; margin-bottom: 0.5rem; }\r\n                        h2 { font-size: 1.125rem; font-weight: 600; margin: 1.5rem 0 0.5rem; }\r\n                        p { text-align: center; font-size: 0.875rem; color: #6b7280; margin-bottom: 1.25rem; }\r\n                        table { width: 100%; border-collapse: collapse; font-size: 0.75rem; margin-bottom: 1.25rem; }\r\n                        th, td { border: 1px solid #e5e7eb; padding: 0.5rem; text-align: left; }\r\n                        th { background-color: #f3f4f6; font-weight: 600; text-transform: uppercase; }\r\n                        tr:nth-child(even) { background-color: #f9fafb; }\r\n                        .no-data { text-align: center; padding: 1.25rem; font-style: italic; color: #6b7280; }\r\n                    </style>\r\n                </head>\r\n                <body>\r\n                    <h1>Contrôle Livraisons</h1>\r\n                    <p>Imprimé le ${moment().format('DD/MM/YYYY HH:mm')} pour la date ${filters.dateLivraison ? moment(filters.dateLivraison).format('DD/MM/YYYY') : 'Toutes'}</p>\r\n                    <h2>Livraisons</h2>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>${COLUMNS.map((col) => `<th>${col.header}</th>`).join('')}</tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            ${filteredData.length === 0\r\n                ? `<tr><td colspan=\"${COLUMNS.length}\" class=\"no-data\">Aucune donnée disponible pour les filtres sélectionnés.</td></tr>`\r\n                : filteredData.map(\r\n                    (row) => `\r\n                                        <tr>\r\n                                            ${COLUMNS.map(\r\n                        (col) => `\r\n                                                <td>\r\n                                                    ${col.key === 'articles' && row[col.key]\r\n                                ? Array.isArray(row.articles)\r\n                                    ? row.articles.map((a) => `${a.article} (${a.quantity})`).join(', ')\r\n                                    : ''\r\n                                : col.key === 'date_livraison' && row[col.key] !== 'N/V'\r\n                                    ? moment(row[col.key]).format('DD/MM/YYYY')\r\n                                    : row[col.key] || ''}\r\n                                                </td>\r\n                                            `\r\n                    ).join('')}\r\n                                        </tr>\r\n                                    `\r\n                ).join('')}\r\n                        </tbody>\r\n                    </table>\r\n                </body>\r\n            </html>\r\n        `;\r\n        printWindow.document.write(printContent);\r\n        printWindow.document.close();\r\n        printWindow.print();\r\n    };\r\n\r\n    const handlePrintStock = () => {\r\n        const printWindow = window.open('', '_blank');\r\n        const printContent = `\r\n            <html>\r\n                <head>\r\n                    <title>Stock Control - ${moment().format('DD/MM/YYYY')}</title>\r\n                    <style>\r\n                        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');\r\n                        body { font-family: 'Inter', sans-serif; margin: 20px; color: #1f2937; }\r\n                        h1 { text-align: center; font-size: 1.5rem; font-weight: 700; margin-bottom: 0.5rem; }\r\n                        h2 { font-size: 1.125rem; font-weight: 600; margin: 1.5rem 0 0.5rem; }\r\n                        p { text-align: center; font-size: 0.875rem; color: #6b7280; margin-bottom: 1.25rem; }\r\n                        table { width: 100%; border-collapse: collapse; font-size: 0.75rem; margin-bottom: 1.25rem; }\r\n                        th, td { border: 1px solid #e5e7eb; padding: 0.5rem; text-align: left; }\r\n                        th { background-color: #f3f4f6; font-weight: 600; text-transform: uppercase; }\r\n                        tr:nth-child(even) { background-color: #f9fafb; }\r\n                        .no-data { text-align: center; padding: 1.25rem; font-style: italic; color: #6b7280; }\r\n                        .validation-non-valide { color: #dc2626; font-weight: 600; }\r\n                    </style>\r\n                </head>\r\n                <body>\r\n                    <h1>Stock Control</h1>\r\n                    <p>Imprimé le ${moment().format('DD/MM/YYYY HH:mm')}</p>\r\n                    <h2>Stock Control</h2>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>${STOCK_COLUMNS.map((col) => `<th>${col.header}</th>`).join('')}</tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            ${mb51Articles.length === 0\r\n                ? `<tr><td colspan=\"${STOCK_COLUMNS.length}\" class=\"no-data\">Aucun article disponible.</td></tr>`\r\n                : mb51Articles.map(\r\n                    (row) => `\r\n                                        <tr>\r\n                                            ${STOCK_COLUMNS.map(\r\n                        (col) => `\r\n                                                <td class=\"${col.key === 'validation' && row[col.key] !== 'Validé' ? 'validation-non-valide' : ''}\">\r\n                                                    ${row[col.key] !== undefined && row[col.key] !== null ? row[col.key] : ''}\r\n                                                </td>\r\n                                            `\r\n                    ).join('')}\r\n                                        </tr>\r\n                                    `\r\n                ).join('')}\r\n                        </tbody>\r\n                    </table>\r\n                </body>\r\n            </html>\r\n        `;\r\n        printWindow.document.write(printContent);\r\n        printWindow.document.close();\r\n        printWindow.print();\r\n    };\r\n\r\n    const filteredArticles = mb51Articles.filter((article) =>\r\n        article.article?.toLowerCase().includes(articleFilter.toLowerCase()) ||\r\n        article.designation_article?.toLowerCase().includes(articleFilter.toLowerCase())\r\n    );\r\n\r\n    return (\r\n        <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5 }}\r\n            className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-6\"\r\n        >\r\n            <TitleCard title=\"Contrôle Livraison\">\r\n                <div className=\"space-y-6\">\r\n                    <div className=\"flex flex-wrap gap-4\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"N° OT\"\r\n                            value={filters.nOt}\r\n                            onChange={(e) => setFilters({ ...filters, nOt: e.target.value })}\r\n                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full sm:w-48\"\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"N° BS\"\r\n                            value={filters.bs}\r\n                            onChange={(e) => setFilters({ ...filters, bs: e.target.value })}\r\n                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full sm:w-48\"\r\n                        />\r\n                        <select\r\n                            value={filters.typeSortie}\r\n                            onChange={(e) => setFilters({ ...filters, typeSortie: e.target.value })}\r\n                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full sm:w-48\"\r\n                        >\r\n                            <option value=\"\">Tous les types</option>\r\n                            {TYPE_SORTIE_OPTIONS.map((option) => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <input\r\n                            type=\"date\"\r\n                            value={filters.dateLivraison}\r\n                            onChange={(e) => setFilters({ ...filters, dateLivraison: e.target.value })}\r\n                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full sm:w-48\"\r\n                        />\r\n                    </div>\r\n                    {(isLoadingData || isDeleting || error) && (\r\n                        <div className=\"flex items-center gap-2 text-sm\">\r\n                            {(isLoadingData || isDeleting) && <ClipLoader color=\"#3b82f6\" size={20} />}\r\n                            {(isLoadingData || isDeleting) && <span className=\"text-gray-600\">{isDeleting ? 'Suppression en cours...' : 'Chargement des données...'}</span>}\r\n                            {error && <span className=\"text-red-600\">⚠️ {error}</span>}\r\n                        </div>\r\n                    )}\r\n                    <div className=\"flex flex-wrap gap-4\">\r\n                        <button\r\n                            onClick={() => setShowAddForm(!showAddForm)}\r\n                            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg shadow hover:bg-blue-700 transition-all duration-200 text-sm font-medium\"\r\n                            disabled={isLoadingData || isDeleting}\r\n                        >\r\n                            {showAddForm ? 'Annuler' : 'Ajouter'}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => updateItems('remove')}\r\n                            className=\"px-4 py-2 bg-red-600 text-white rounded-lg shadow hover:bg-red-700 transition-all duration-200 text-sm font-medium\"\r\n                            disabled={selectedItems.size === 0 || isLoadingData || isDeleting}\r\n                        >\r\n                            Retirer\r\n                        </button>\r\n                        <button\r\n                            onClick={exportLivraisonsToExcel}\r\n                            className=\"px-4 py-2 bg-green-600 text-white rounded-lg shadow hover:bg-green-700 transition-all duration-200 text-sm font-medium\"\r\n                            disabled={isLoadingData || isDeleting}\r\n                        >\r\n                            Exporter Livraisons\r\n                        </button>\r\n                        <button\r\n                            onClick={exportStockToExcel}\r\n                            className=\"px-4 py-2 bg-green-600 text-white rounded-lg shadow hover:bg-green-700 transition-all duration-200 text-sm font-medium\"\r\n                            disabled={isLoadingData || isDeleting}\r\n                        >\r\n                            Exporter Stock\r\n                        </button>\r\n                        <button\r\n                            onClick={handlePrintLivraisons}\r\n                            className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg shadow hover:bg-yellow-700 transition-all duration-200 text-sm font-medium\"\r\n                            disabled={isLoadingData || isDeleting}\r\n                        >\r\n                            Imprimer Livraisons\r\n                        </button>\r\n                        <button\r\n                            onClick={handlePrintStock}\r\n                            className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg shadow hover:bg-yellow-700 transition-all duration-200 text-sm font-medium\"\r\n                            disabled={isLoadingData || isDeleting}\r\n                        >\r\n                            Imprimer Stock\r\n                        </button>\r\n                    </div>\r\n                    {showAddForm && (\r\n                        <motion.div\r\n                            initial={{ opacity: 0, height: 0 }}\r\n                            animate={{ opacity: 1, height: 'auto' }}\r\n                            transition={{ duration: 0.3 }}\r\n                            className=\"p-6 bg-white shadow-lg rounded-lg\"\r\n                        >\r\n                            <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Ajouter une nouvelle livraison</h3>\r\n                            <form\r\n                                onSubmit={(e) => {\r\n                                    e.preventDefault();\r\n                                    updateItems('add');\r\n                                }}\r\n                                className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\"\r\n                            >\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date de livraison</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        value={newItem.date_livraison}\r\n                                        onChange={(e) => setNewItem({ ...newItem, date_livraison: e.target.value })}\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Type de sortie</label>\r\n                                    <select\r\n                                        value={newItem.type_sortie}\r\n                                        onChange={(e) =>\r\n                                            setNewItem({ ...newItem, type_sortie: e.target.value, n_ot: '', bs: '', le: '', commande_achat: '' })\r\n                                        }\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                    >\r\n                                        {TYPE_SORTIE_OPTIONS.map((option) => (\r\n                                            <option key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                {newItem.type_sortie === 'OT' && (\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">N° OT</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"N° OT\"\r\n                                            value={newItem.n_ot || ''}\r\n                                            onChange={(e) => setNewItem({ ...newItem, n_ot: e.target.value })}\r\n                                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                                {newItem.type_sortie === 'BS' && (\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">N° BS</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"N° BS\"\r\n                                            value={newItem.bs || ''}\r\n                                            onChange={(e) => setNewItem({ ...newItem, bs: e.target.value })}\r\n                                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                                {newItem.type_sortie === 'LE' && (\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">N° LE</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"N° LE\"\r\n                                            value={newItem.le || ''}\r\n                                            onChange={(e) => setNewItem({ ...newItem, le: e.target.value })}\r\n                                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                                {newItem.type_sortie === 'STO' && (\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">N° STO</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"N° STO\"\r\n                                            value={newItem.commande_achat || ''}\r\n                                            onChange={(e) => setNewItem({ ...newItem, commande_achat: e.target.value })}\r\n                                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Nature de sortie</label>\r\n                                    <select\r\n                                        value={newItem.nature_sortie}\r\n                                        onChange={(e) => setNewItem({ ...newItem, nature_sortie: e.target.value })}\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                    >\r\n                                        {NATURE_SORTIE_OPTIONS.map((option) => (\r\n                                            <option key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">N° Réservation</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"N° Réservation\"\r\n                                        value={newItem.n_reservation || ''}\r\n                                        onChange={(e) => setNewItem({ ...newItem, n_reservation: e.target.value })}\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Magasin</label>\r\n                                    <select\r\n                                        value={newItem.magasin}\r\n                                        onChange={(e) => setNewItem({ ...newItem, magasin: e.target.value, local: '', responsable_local: '' })}\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                    >\r\n                                        {MAGASIN_OPTIONS.map((option) => (\r\n                                            <option key={option.value} value={option.value}>\r\n                                                {option.label} - {RESPONSABLE_MAGASIN[option.value]}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Local</label>\r\n                                    <select\r\n                                        value={newItem.local}\r\n                                        onChange={(e) => {\r\n                                            const selectedLocal = LOCAL_OPTIONS[newItem.magasin]?.find((loc) => loc.value === e.target.value);\r\n                                            setNewItem({\r\n                                                ...newItem,\r\n                                                local: e.target.value,\r\n                                                responsable_local: selectedLocal?.responsable || '',\r\n                                            });\r\n                                        }}\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                        disabled={!newItem.magasin}\r\n                                    >\r\n                                        <option value=\"\">Sélectionner un local</option>\r\n                                        {newItem.magasin &&\r\n                                            LOCAL_OPTIONS[newItem.magasin]?.map((option) => (\r\n                                                <option key={option.value} value={option.value}>\r\n                                                    {option.label}\r\n                                                </option>\r\n                                            ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Demandeur</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Demandeur\"\r\n                                        value={newItem.demandeur || ''}\r\n                                        onChange={(e) => setNewItem({ ...newItem, demandeur: e.target.value })}\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Préparateur</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Préparateur\"\r\n                                        value={newItem.preparateur || ''}\r\n                                        onChange={(e) => setNewItem({ ...newItem, preparateur: e.target.value })}\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Responsable local</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Responsable local\"\r\n                                        value={newItem.responsable_local || ''}\r\n                                        readOnly\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm bg-gray-100 text-sm w-full\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-span-1 sm:col-span-2\">\r\n                                    <h4 className=\"text-md font-semibold text-gray-800 mb-2\">Ajouter des articles</h4>\r\n                                    <div className=\"flex flex-col gap-2 mb-2\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Filtrer par code ou désignation\"\r\n                                            value={articleFilter}\r\n                                            onChange={(e) => setArticleFilter(e.target.value)}\r\n                                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                        />\r\n                                        <select\r\n                                            onChange={(e) => {\r\n                                                const [article, designation_article] = e.target.value.split(' - ');\r\n                                                if (article && designation_article) {\r\n                                                    addArticle(article, designation_article);\r\n                                                }\r\n                                                e.target.value = '';\r\n                                            }}\r\n                                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                            disabled={mb51Articles.length === 0}\r\n                                        >\r\n                                            <option value=\"\">Sélectionner un article</option>\r\n                                            {filteredArticles.length > 0 ? (\r\n                                                filteredArticles.map((mb51Article) => (\r\n                                                    <option key={mb51Article.article} value={`${mb51Article.article} - ${mb51Article.designation_article}`}>\r\n                                                        {mb51Article.article} - {mb51Article.designation_article} (Quantité Contrôle: {mb51Article.stock_quantite_controle || 0})\r\n                                                    </option>\r\n                                                ))\r\n                                            ) : (\r\n                                                <option disabled>Aucun article correspondant</option>\r\n                                            )}\r\n                                        </select>\r\n                                    </div>\r\n                                    {newItem.articles.length > 0 && (\r\n                                        <div className=\"mt-2 overflow-x-auto\">\r\n                                            <table className=\"w-full text-sm border-collapse bg-white shadow-lg rounded-lg\">\r\n                                                <thead>\r\n                                                    <tr className=\"bg-gray-100\">\r\n                                                        <th className=\"border border-gray-200 p-2 text-left text-gray-700\">Code</th>\r\n                                                        <th className=\"border border-gray-200 p-2 text-left text-gray-700\">Désignation</th>\r\n                                                        <th className=\"border border-gray-200 p-2 text-left text-gray-700\">Quantité Contrôle</th>\r\n                                                        <th className=\"border border-gray-200 p-2 text-left text-gray-700\">Quantité</th>\r\n                                                        <th className=\"border border-gray-200 p-2 text-left text-gray-700\">Quantité Mise à Jour</th>\r\n                                                        <th className=\"border border-gray-200 p-2 text-left text-gray-700\">Actions</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {newItem.articles.map((article, index) => {\r\n                                                        const mb51Article = mb51Articles.find((a) => a.article === article.article);\r\n                                                        return (\r\n                                                            <tr key={article.article} className=\"hover:bg-gray-50\">\r\n                                                                <td className=\"border border-gray-200 p-2\">{article.article}</td>\r\n                                                                <td className=\"border border-gray-200 p-2\">{article.designation_article}</td>\r\n                                                                <td className=\"border border-gray-200 p-2\">{mb51Article?.stock_quantite_controle || 0}</td>\r\n                                                                <td className=\"border border-gray-200 p-2\">\r\n                                                                    <input\r\n                                                                        type=\"number\"\r\n                                                                        min=\"0\"\r\n                                                                        step=\"1\"\r\n                                                                        value={article.quantity}\r\n                                                                        onChange={(e) => updateQuantity(index, e.target.value)}\r\n                                                                        className=\"p-1.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-20\"\r\n                                                                        placeholder=\"Quantité\"\r\n                                                                    />\r\n                                                                </td>\r\n                                                                <td className=\"border border-gray-200 p-2\">{article.quantite_mise_a_jour !== undefined ? article.quantite_mise_a_jour : 0}</td>\r\n                                                                <td className=\"border border-gray-200 p-2\">\r\n                                                                    <button\r\n                                                                        type=\"button\"\r\n                                                                        onClick={() => removeArticle(index)}\r\n                                                                        className=\"text-red-600 hover:text-red-700 transition-colors duration-200\"\r\n                                                                    >\r\n                                                                        <FaTrash className=\"h-4 w-4\" />\r\n                                                                    </button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        );\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    )}\r\n                                    {newItem.articles.length === 0 && <p className=\"text-gray-600 text-sm italic\">Aucun article sélectionné.</p>}\r\n                                </div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"col-span-1 sm:col-span-2 px-4 py-2 bg-blue-600 text-white rounded-lg shadow hover:bg-blue-700 transition-all duration-200 text-sm font-medium\"\r\n                                    disabled={isLoadingData || isDeleting || newItem.articles.length === 0}\r\n                                >\r\n                                    Ajouter la livraison\r\n                                </button>\r\n                            </form>\r\n                        </motion.div>\r\n                    )}\r\n                    <div className=\"mt-6\">\r\n                        <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">Livraisons</h3>\r\n                        <div className=\"overflow-x-auto bg-white shadow-lg rounded-lg\">\r\n                            <table className=\"w-full text-sm border-collapse\">\r\n                                <thead>\r\n                                    <tr className=\"bg-gray-100\">\r\n                                        <th className=\"border border-gray-200 p-2\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                onChange={(e) => setSelectedItems(e.target.checked ? new Set(filteredData.map((_, i) => i)) : new Set())}\r\n                                                disabled={isLoadingData || isDeleting}\r\n                                            />\r\n                                        </th>\r\n                                        {COLUMNS.map((col) => (\r\n                                            <th key={col.key} className=\"border border-gray-200 p-2 text-left text-gray-700\">\r\n                                                {col.header}\r\n                                            </th>\r\n                                        ))}\r\n                                        <th className=\"border border-gray-200 p-2 text-left text-gray-700\">Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {filteredData.length === 0 ? (\r\n                                        <tr>\r\n                                            <td colSpan={COLUMNS.length + 2} className=\"border border-gray-200 p-2 text-center text-gray-600\">\r\n                                                Aucune donnée disponible pour les filtres sélectionnés.\r\n                                            </td>\r\n                                        </tr>\r\n                                    ) : (\r\n                                        filteredData.map((row, index) => (\r\n                                            <tr key={index} className={`${selectedItems.has(index) ? 'bg-gray-50' : ''} hover:bg-gray-50`}>\r\n                                                <td className=\"border border-gray-200 p-2\">\r\n                                                    <input\r\n                                                        type=\"checkbox\"\r\n                                                        checked={selectedItems.has(index)}\r\n                                                        onChange={() => toggleItem(index)}\r\n                                                        disabled={isLoadingData || isDeleting}\r\n                                                    />\r\n                                                </td>\r\n                                                {COLUMNS.map((col) => (\r\n                                                    <td key={col.key} className=\"border border-gray-200 p-2\">\r\n                                                        {col.key === 'articles' && row[col.key]\r\n                                                            ? Array.isArray(row.articles)\r\n                                                                ? row.articles.map((a) => `${a.article} (${a.quantity})`).join(', ')\r\n                                                                : ''\r\n                                                            : col.key === 'date_livraison' && row[col.key] !== 'N/V'\r\n                                                                ? moment(row[col.key]).format('DD/MM/YYYY')\r\n                                                                : row[col.key] || ''}\r\n                                                    </td>\r\n                                                ))}\r\n                                                <td className=\"border border-gray-200 p-2\">\r\n                                                    <button\r\n                                                        onClick={() => handleDelete(index)}\r\n                                                        className=\"text-red-600 hover:text-red-700 transition-colors duration-200\"\r\n                                                        disabled={isLoadingData || isDeleting}\r\n                                                    >\r\n                                                        <FaTrash className=\"h-4 w-4\" />\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-6\">\r\n                        <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">Stock Control</h3>\r\n                        <div className=\"overflow-x-auto bg-white shadow-lg rounded-lg\">\r\n                            <table className=\"w-full text-sm border-collapse\">\r\n                                <thead>\r\n                                    <tr className=\"bg-gray-100\">\r\n                                        {STOCK_COLUMNS.map((col) => (\r\n                                            <th key={col.key} className=\"border border-gray-200 p-2 text-left text-gray-700\">\r\n                                                {col.header}\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {mb51Articles.length === 0 ? (\r\n                                        <tr>\r\n                                            <td colSpan={STOCK_COLUMNS.length} className=\"border border-gray-200 p-2 text-center text-gray-600\">\r\n                                                Aucun article disponible.\r\n                                            </td>\r\n                                        </tr>\r\n                                    ) : (\r\n                                        mb51Articles.map((row, index) => (\r\n                                            <tr key={index} className=\"hover:bg-gray-50\">\r\n                                                {STOCK_COLUMNS.map((col) => (\r\n                                                    <td\r\n                                                        key={col.key}\r\n                                                        className={`border border-gray-200 p-2 ${col.key === 'validation' && row[col.key] !== 'Validé' ? 'text-red-600 font-semibold' : ''}`}\r\n                                                    >\r\n                                                        {row[col.key] !== undefined && row[col.key] !== null ? row[col.key] : ''}\r\n                                                    </td>\r\n                                                ))}\r\n                                            </tr>\r\n                                        ))\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </TitleCard>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default Controle;"],"names":["styleClass","children","className","title","topMargin","TopSideButtons","dispatch","useDispatch","data","setData","useState","filteredData","setFilteredData","filters","setFilters","nOt","bs","typeSortie","dateLivraison","selectedItems","setSelectedItems","Set","isLoadingData","setIsLoadingData","isDeleting","setIsDeleting","error","setError","showAddForm","setShowAddForm","newItem","setNewItem","type_sortie","nature_sortie","magasin","articles","date_livraison","moment","format","mb51Articles","setMb51Articles","articleFilter","setArticleFilter","BASE_URL","process","COLUMNS","header","key","STOCK_COLUMNS","TYPE_SORTIE_OPTIONS","value","label","LOCAL_OPTIONS","Magasin","responsable","RESPONSABLE_MAGASIN","useEffect","setPageTitle","fetchData","async","res","fetch","method","headers","body","JSON","stringify","ok","Error","status","normalizedData","json","map","item","n_ot","trim","toLowerCase","le","commande_achat","n_reservation","local","demandeur","preparateur","responsable_local","Array","isArray","parse","applyFilters","err","message","console","article","stock_quantite_controle","parseFloat","length","fetchMb51Articles","filtered","filter","includes","updateItems","action","quantity","mb51Article","find","a","selectedLocal","loc","itemToAdd","designation_article","quantite_mise_a_jour","errorData","size","recordsToRemove","from","index","row","identifier","record","filteredArticles","initial","opacity","y","animate","transition","duration","type","placeholder","onChange","e","target","option","color","onClick","disabled","livraisonsSheet","XLSX","join","wb","stockSheet","printWindow","window","open","printContent","col","document","write","close","print","undefined","height","onSubmit","preventDefault","required","readOnly","split","some","prev","addArticle","min","step","updatedArticles","updateQuantity","splice","removeArticle","checked","_","i","colSpan","has","newSelected","delete","add","toggleItem","identifierField","handleDelete"],"sourceRoot":""}