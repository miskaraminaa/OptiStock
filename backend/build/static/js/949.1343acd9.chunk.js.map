{"version":3,"file":"static/js/949.1343acd9.chunk.js","mappings":"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","sources":["pages/protected/Dimensions.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { FaWarehouse, FaFileExport, FaPrint, FaPlus, FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { useDispatch } from \"react-redux\"; // Importation ajoutée\r\nimport { setPageTitle } from '../../features/common/headerSlice';\r\n\r\nconst Dimensions = () => {\r\n    const [ids, setIds] = useState([]);\r\n    const [dimensions, setDimensions] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(\"\");\r\n    const [longueur, setLongueur] = useState(\"\");\r\n    const [largeur, setLargeur] = useState(\"\");\r\n    const [hauteur, setHauteur] = useState(\"\");\r\n    const [poids, setPoids] = useState(\"\");\r\n    const [qte, setQte] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [data, setData] = useState(null);\r\n    const [isLoadingIds, setIsLoadingIds] = useState(false);\r\n    const [isLoadingDimensions, setIsLoadingDimensions] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 25;\r\n\r\n    const dispatch = useDispatch(); // Initialisation de useDispatch\r\n    const BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n    const tableRef = useRef(null);\r\n\r\n    // Définir le titre de la page au montage\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title: \"Gestion des Dimensions\" }));\r\n    }, [dispatch]);\r\n\r\n    // Fetch article IDs\r\n    useEffect(() => {\r\n        const fetchIds = async () => {\r\n            setIsLoadingIds(true);\r\n            setMessage(\"\");\r\n            try {\r\n                const res = await fetch(`${BASE_URL}/dimensions/ids`, {\r\n                    method: \"GET\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                });\r\n                if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);\r\n                const result = await res.json();\r\n                const sortedIds = result.ids?.map(String).sort((a, b) => a.localeCompare(b)) || [];\r\n                setIds(sortedIds);\r\n            } catch (err) {\r\n                console.error(\"Error fetching IDs:\", err);\r\n                setMessage(`Erreur lors du chargement des IDs: ${err.message}`);\r\n            } finally {\r\n                setIsLoadingIds(false);\r\n            }\r\n        };\r\n        fetchIds();\r\n    }, [BASE_URL]);\r\n\r\n    // Fetch all dimensions\r\n    useEffect(() => {\r\n        const fetchDimensions = async () => {\r\n            setIsLoadingDimensions(true);\r\n            setMessage(\"\");\r\n            try {\r\n                const res = await fetch(`${BASE_URL}/dimensions/`, {\r\n                    method: \"GET\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                });\r\n                if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);\r\n                const result = await res.json();\r\n                setDimensions(result.data || []);\r\n            } catch (err) {\r\n                console.error(\"Error fetching dimensions:\", err);\r\n                setMessage(`Erreur lors du chargement des dimensions: ${err.message}`);\r\n            } finally {\r\n                setIsLoadingDimensions(false);\r\n            }\r\n        };\r\n        fetchDimensions();\r\n    }, [BASE_URL]);\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!selectedId || !longueur || !largeur || !hauteur || !poids || !qte) {\r\n            setMessage(\"Tous les champs sont requis.\");\r\n            return;\r\n        }\r\n\r\n        const longueurNum = parseFloat(longueur);\r\n        const largeurNum = parseFloat(largeur);\r\n        const hauteurNum = parseFloat(hauteur);\r\n        const poidsNum = parseFloat(poids);\r\n        const qteNum = parseInt(qte, 10);\r\n\r\n        if (isNaN(longueurNum) || isNaN(largeurNum) || isNaN(hauteurNum) ||\r\n            isNaN(poidsNum) || isNaN(qteNum) || qteNum < 1) {\r\n            setMessage(\"Veuillez entrer des valeurs numériques valides (quantité ≥ 1).\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const toNum = x => Number(x);\r\n            const body = {\r\n                id_article: selectedId,\r\n                longueur: toNum(longueur),\r\n                largeur: toNum(largeur),\r\n                hauteur: toNum(hauteur),\r\n                poids: toNum(poids),\r\n                qte: toNum(qte)\r\n            };\r\n            const res = await fetch(`${BASE_URL}/dimensions/`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body),\r\n            });\r\n            const result = await res.json();\r\n            if (res.ok) {\r\n                setMessage(\"Dimensions enregistrées avec succès.\");\r\n                setData(result.data[0]);\r\n                const dimensionsRes = await fetch(`${BASE_URL}/dimensions/`);\r\n                const dimensionsResult = await dimensionsRes.json();\r\n                setDimensions(dimensionsResult.data || []);\r\n                setSelectedId(\"\");\r\n                setLongueur(\"\");\r\n                setLargeur(\"\");\r\n                setHauteur(\"\");\r\n                setPoids(\"\");\r\n                setQte(\"\");\r\n            } else {\r\n                setMessage(result.message || \"Erreur lors de l'enregistrement.\");\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error submitting dimensions:\", err);\r\n            setMessage(\"Erreur serveur: \" + err.message);\r\n        }\r\n    };\r\n\r\n    // Handle Excel export\r\n    const handleExportExcel = () => {\r\n        if (dimensions.length === 0) {\r\n            setMessage(\"Aucune donnée à exporter.\");\r\n            return;\r\n        }\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(dimensions);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, \"Dimensions\");\r\n        const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n        const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n        const url = URL.createObjectURL(blob);\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.download = `dimensions_export_${new Date().toISOString().split('T')[0]}.xlsx`;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        URL.revokeObjectURL(url);\r\n    };\r\n\r\n    // Handle print\r\n    const handlePrint = () => {\r\n        const printContent = tableRef.current;\r\n        if (!printContent) {\r\n            console.error(\"Table reference is null. Ensure the table is rendered before printing.\");\r\n            return;\r\n        }\r\n\r\n        const printWindow = window.open('', '', 'height=600,width=800');\r\n        if (printWindow) {\r\n            printWindow.document.write('<html><head><title>Imprimer Dimensions</title>');\r\n            printWindow.document.write('<style>body { margin: 20px; font-family: Arial, sans-serif; } table { width: 100%; border-collapse: collapse; font-size: 14px; } th, td { border: 1px solid #ddd; padding: 8px; text-align: left; } th { background-color: #f2f2f2; font-weight: bold; } tr:nth-child(even) { background-color: #f9f9f9; } @media print { body { margin: 0; } }</style>');\r\n            printWindow.document.write('</head><body>');\r\n            printWindow.document.write(printContent.outerHTML);\r\n            printWindow.document.write('</body></html>');\r\n            printWindow.document.close();\r\n            printWindow.focus();\r\n            printWindow.print();\r\n            printWindow.close();\r\n        } else {\r\n            console.error(\"Failed to open print window. Check browser popup settings.\");\r\n        }\r\n    };\r\n\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = dimensions.slice(indexOfFirstItem, indexOfLastItem);\r\n    const totalPages = Math.ceil(dimensions.length / itemsPerPage);\r\n\r\n    const getPageNumbers = () => {\r\n        const pages = [];\r\n        const maxVisiblePages = 5;\r\n\r\n        if (totalPages <= maxVisiblePages) {\r\n            for (let i = 1; i <= totalPages; i++) {\r\n                pages.push(i);\r\n            }\r\n        } else {\r\n            const startPage = Math.max(1, currentPage - 2);\r\n            const endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);\r\n\r\n            if (startPage > 1) {\r\n                pages.push(1);\r\n                if (startPage > 2) pages.push('...');\r\n            }\r\n\r\n            for (let i = startPage; i <= endPage; i++) {\r\n                pages.push(i);\r\n            }\r\n\r\n            if (endPage < totalPages) {\r\n                if (endPage < totalPages - 1) pages.push('...');\r\n                pages.push(totalPages);\r\n            }\r\n        }\r\n        return pages;\r\n    };\r\n\r\n    if (isLoadingIds || isLoadingDimensions) {\r\n        return (\r\n            <div className=\"mx-auto max-w-7xl p-4 sm:p-6\">\r\n                <div className=\"flex flex-col justify-center items-center my-8\">\r\n                    <ClipLoader color=\"#3b82f6\" size={40} />\r\n                    <p className=\"mt-4 text-gray-600\">\r\n                        {isLoadingIds ? \"Chargement des IDs...\" : \"Chargement des dimensions...\"}\r\n                    </p>\r\n                    <p className=\"mt-2 text-sm text-gray-500\">\r\n                        Page {currentPage} sur {totalPages}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (message && message.includes(\"Erreur\")) {\r\n        return (\r\n            <div className=\"mx-auto max-w-7xl p-4 sm:p-6\">\r\n                <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center\">\r\n                            <div className=\"text-red-600 mr-3\">⚠️</div>\r\n                            <span className=\"text-red-800 text-sm sm:text-base\">{message}</span>\r\n                        </div>\r\n                        <button\r\n                            onClick={() => {\r\n                                setMessage(\"\");\r\n                                setIsLoadingIds(true);\r\n                                setIsLoadingDimensions(true);\r\n                            }}\r\n                            className=\"px-4 py-2 bg-red-600 text-white rounded-lg shadow hover:bg-red-700 transition duration-200 flex items-center text-sm\"\r\n                        >\r\n                            Réessayer\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"mx-auto max-w-7xl p-4 sm:p-6\">\r\n            <div className=\"mb-6\">\r\n                <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800 mb-2 flex items-center\">\r\n                    <FaWarehouse className=\"mr-3 text-blue-600\" />\r\n                    Gestion des Dimensions\r\n                </h1>\r\n                <p className=\"text-gray-600 text-sm sm:text-base\">\r\n                    Ajouter ou explorer les dimensions des articles\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6 no-print\">\r\n                <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">Ajouter/Modifier Dimensions</h2>\r\n                <form onSubmit={handleSubmit} className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">ID Article</label>\r\n                        <select\r\n                            value={selectedId}\r\n                            onChange={(e) => setSelectedId(e.target.value)}\r\n                            className=\"w-full p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200 text-sm\"\r\n                            required\r\n                        >\r\n                            <option value=\"\">Sélectionner un ID</option>\r\n                            {ids.map((id) => <option key={id} value={id}>{id}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">Longueur (m)</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={longueur}\r\n                            onChange={(e) => setLongueur(e.target.value)}\r\n                            className=\"w-full p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200 text-sm\"\r\n                            step=\"0.01\"\r\n                            min=\"0\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">Largeur (m)</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={largeur}\r\n                            onChange={(e) => setLargeur(e.target.value)}\r\n                            className=\"w-full p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200 text-sm\"\r\n                            step=\"0.01\"\r\n                            min=\"0\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">Hauteur (m)</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={hauteur}\r\n                            onChange={(e) => setHauteur(e.target.value)}\r\n                            className=\"w-full p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200 text-sm\"\r\n                            step=\"0.01\"\r\n                            min=\"0\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">Poids (kg)</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={poids}\r\n                            onChange={(e) => setPoids(e.target.value)}\r\n                            className=\"w-full p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200 text-sm\"\r\n                            step=\"0.01\"\r\n                            min=\"0\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">Quantité</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={qte}\r\n                            onChange={(e) => setQte(e.target.value)}\r\n                            className=\"w-full p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200 text-sm\"\r\n                            step=\"1\"\r\n                            min=\"1\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-span-1 sm:col-span-2 lg:col-span-3 flex justify-end\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg shadow hover:bg-blue-700 transition duration-200 flex items-center text-sm\"\r\n                        >\r\n                            <FaPlus className=\"mr-2\" />\r\n                            Enregistrer\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                {message && (\r\n                    <div className={`mt-4 text-sm text-center ${message.includes(\"Erreur\") ? \"text-red-600\" : \"text-green-600\"}`}>\r\n                        {message}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {data && (\r\n                <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6 no-print\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Données enregistrées</h3>\r\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 text-sm\">\r\n                        <p><span className=\"font-semibold text-gray-700\">ID Article:</span> {data.id_article}</p>\r\n                        <p><span className=\"font-semibold text-gray-700\">Longueur:</span> {data.longueur} m</p>\r\n                        <p><span className=\"font-semibold text-gray-700\">Largeur:</span> {data.largeur} m</p>\r\n                        <p><span className=\"font-semibold text-gray-700\">Hauteur:</span> {data.hauteur} m</p>\r\n                        <p><span className=\"font-semibold text-gray-700\">Poids:</span> {data.poids} kg</p>\r\n                        <p><span className=\"font-semibold text-gray-700\">Quantité:</span> {data.quantite}</p>\r\n                        <p><span className=\"font-semibold text-gray-700\">Volume:</span> {data.volume} m³</p>\r\n                        <p><span className=\"font-semibold text-gray-700\">Volume/Quantité:</span> {data.volume_quantite} m³</p>\r\n                        <p><span className=\"font-semibold text-gray-700\">Poids Global:</span> {data.poids_global} kg</p>\r\n                        <p><span className=\"font-semibold text-gray-700\">Type Rayon:</span> {data.Type_Rayon}</p>\r\n                        <p><span className=\"font-semibold text-gray-700\">Manutention:</span> {data.manutention}</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"mb-6\">\r\n                <h2 className=\"text-lg font-semibold text-gray-800 mb-4 flex items-center\">\r\n                    <FaWarehouse className=\"mr-2 text-blue-600\" />\r\n                    Explorer les Dimensions\r\n                </h2>\r\n                <div className=\"flex flex-wrap gap-4 mb-4\">\r\n                    <button\r\n                        onClick={handleExportExcel}\r\n                        className=\"px-4 py-2 bg-green-600 text-white rounded-lg shadow hover:bg-green-700 transition duration-200 flex items-center text-sm\"\r\n                    >\r\n                        <FaFileExport className=\"mr-2\" />\r\n                        Exporter en Excel\r\n                    </button>\r\n                    <button\r\n                        onClick={handlePrint}\r\n                        className=\"px-4 py-2 bg-blue-600 text-white rounded-lg shadow hover:bg-blue-700 transition duration-200 flex items-center text-sm\"\r\n                    >\r\n                        <FaPrint className=\"mr-2\" />\r\n                        Imprimer\r\n                    </button>\r\n                </div>\r\n                {dimensions.length > 0 ? (\r\n                    <>\r\n                        <div className=\"bg-white rounded-lg shadow-lg overflow-hidden print-table\">\r\n                            <div className=\"overflow-x-auto\">\r\n                                <table ref={tableRef} className=\"min-w-full border-collapse\">\r\n                                    <thead className=\"bg-gray-50\">\r\n                                        <tr className=\"text-gray-700 text-sm\">\r\n                                            <th className=\"px-4 py-3 border-b font-semibold text-left\">ID Article</th>\r\n                                            <th className=\"px-4 py-3 border-b font-semibold text-left\">Longueur (m)</th>\r\n                                            <th className=\"px-4 py-3 border-b font-semibold text-left\">Largeur (m)</th>\r\n                                            <th className=\"px-4 py-3 border-b font-semibold text-left\">Hauteur (m)</th>\r\n                                            <th className=\"px-4 py-3 border-b font-semibold text-left\">Poids (kg)</th>\r\n                                            <th className=\"px-4 py-3 border-b font-semibold text-left\">Quantité</th>\r\n                                            <th className=\"px-4 py-3 border-b font-semibold text-left\">Volume (m³)</th>\r\n                                            <th className=\"px-4 py-3 border-b font-semibold text-left\">Volume/Quantité (m³)</th>\r\n                                            <th className=\"px-4 py-3 border-b font-semibold text-left\">Type Rayon</th>\r\n                                            <th className=\"px-4 py-3 border-b font-semibold text-left\">Manutention</th>\r\n                                            <th className=\"px-4 py-3 border-b font-semibold text-left\">Poids Global (kg)</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody className=\"divide-y divide-gray-200\">\r\n                                        {currentItems.map((dim) => (\r\n                                            <tr key={dim.id_article} className=\"hover:bg-gray-50 transition duration-150\">\r\n                                                <td className=\"px-4 py-3 text-gray-800 text-sm\">{dim.id_article}</td>\r\n                                                <td className=\"px-4 py-3 text-gray-800 text-sm\">{dim.longueur}</td>\r\n                                                <td className=\"px-4 py-3 text-gray-800 text-sm\">{dim.largeur}</td>\r\n                                                <td className=\"px-4 py-3 text-gray-800 text-sm\">{dim.hauteur}</td>\r\n                                                <td className=\"px-4 py-3 text-gray-800 text-sm\">{dim.poids}</td>\r\n                                                <td className=\"px-4 py-3 text-gray-800 text-sm\">{dim.quantite}</td>\r\n                                                <td className=\"px-4 py-3 text-gray-800 text-sm\">{dim.volume}</td>\r\n                                                <td className=\"px-4 py-3 text-gray-800 text-sm\">{dim.volume_quantite}</td>\r\n                                                <td className=\"px-4 py-3 text-gray-800 text-sm\">{dim.Type_Rayon}</td>\r\n                                                <td className=\"px-4 py-3 text-gray-800 text-sm\">{dim.manutention}</td>\r\n                                                <td className=\"px-4 py-3 text-gray-800 text-sm\">{dim.poids_global}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        {totalPages > 1 && (\r\n                            <div className=\"flex flex-col sm:flex-row justify-between items-center mt-6 gap-4\">\r\n                                <button\r\n                                    onClick={() => setCurrentPage(currentPage - 1)}\r\n                                    disabled={currentPage === 1}\r\n                                    className=\"px-4 py-2 bg-blue-600 text-white rounded-lg shadow disabled:bg-gray-300 disabled:cursor-not-allowed hover:bg-blue-700 transition duration-200 flex items-center text-sm sm:text-base\"\r\n                                >\r\n                                    <FaChevronLeft className=\"mr-2\" /> Précédent\r\n                                </button>\r\n                                <div className=\"flex items-center gap-2 overflow-x-auto\">\r\n                                    {getPageNumbers().map((pageNum, index) => (\r\n                                        <button\r\n                                            key={index}\r\n                                            onClick={() => typeof pageNum === 'number' && setCurrentPage(pageNum)}\r\n                                            disabled={pageNum === '...' || pageNum === currentPage}\r\n                                            className={`px-3 py-1 rounded-md text-sm transition duration-200 ${pageNum === currentPage\r\n                                                ? 'bg-blue-600 text-white'\r\n                                                : pageNum === '...' ? 'text-gray-400 cursor-default' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n                                                }`}\r\n                                        >\r\n                                            {pageNum}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                                <button\r\n                                    onClick={() => setCurrentPage(currentPage + 1)}\r\n                                    disabled={currentPage === totalPages}\r\n                                    className=\"px-4 py-2 bg-blue-600 text-white rounded-lg shadow disabled:bg-gray-300 disabled:cursor-not-allowed hover:bg-blue-700 transition duration-200 flex items-center text-sm sm:text-base\"\r\n                                >\r\n                                    Suivant <FaChevronRight className=\"ml-2\" />\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                        {dimensions.length > 0 && (\r\n                            <div className=\"mt-4 text-center text-sm text-gray-500\">\r\n                                Affichage {indexOfFirstItem + 1} à {Math.min(indexOfLastItem, dimensions.length)} sur {dimensions.length.toLocaleString()} dimensions\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                ) : (\r\n                    <div className=\"text-center py-12\">\r\n                        <FaWarehouse className=\"mx-auto text-gray-300 text-5xl mb-4\" />\r\n                        <p className=\"text-gray-500 text-lg\">Aucune dimension enregistrée</p>\r\n                        <p className=\"text-gray-400 text-sm mt-2\">\r\n                            Ajoutez des dimensions pour commencer\r\n                        </p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dimensions;"],"names":["ids","setIds","useState","dimensions","setDimensions","selectedId","setSelectedId","longueur","setLongueur","largeur","setLargeur","hauteur","setHauteur","poids","setPoids","qte","setQte","message","setMessage","data","setData","isLoadingIds","setIsLoadingIds","isLoadingDimensions","setIsLoadingDimensions","currentPage","setCurrentPage","dispatch","useDispatch","BASE_URL","process","tableRef","useRef","useEffect","setPageTitle","title","async","res","fetch","method","headers","ok","Error","status","sortedIds","json","map","String","sort","a","b","localeCompare","err","console","error","fetchIds","result","fetchDimensions","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","className","color","size","includes","onClick","onSubmit","e","preventDefault","longueurNum","parseFloat","largeurNum","hauteurNum","poidsNum","qteNum","parseInt","isNaN","toNum","x","Number","body","id_article","JSON","stringify","dimensionsRes","dimensionsResult","value","onChange","target","required","id","type","step","min","quantite","volume","volume_quantite","poids_global","Type_Rayon","manutention","worksheet","XLSX","workbook","excelBuffer","bookType","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","Date","toISOString","split","appendChild","click","removeChild","revokeObjectURL","printContent","current","printWindow","window","open","write","outerHTML","close","focus","print","ref","dim","disabled","pages","i","push","startPage","max","endPage","getPageNumbers","pageNum","index","toLocaleString"],"sourceRoot":""}