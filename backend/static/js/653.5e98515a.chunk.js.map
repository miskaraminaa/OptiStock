{"version":3,"file":"static/js/653.5e98515a.chunk.js","mappings":"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","sources":["components/Typography/Subtitle.js","components/Cards/TitleCard.js","../node_modules/@heroicons/react/24/outline/esm/TrashIcon.js","features/leads/index.js","pages/protected/Leads.js"],"sourcesContent":[" function Subtitle({styleClass, children}){\r\n    return(\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","import Subtitle from \"../Typography/Subtitle\"\r\n\r\n  \r\n  function TitleCard({title, children, topMargin, TopSideButtons}){\r\n      return(\r\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\r\n\r\n            {/* Title for Card */}\r\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n                {title}\r\n\r\n                {/* Top side button, show only if present */}\r\n                {\r\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n                }\r\n              </Subtitle>\r\n              \r\n              <div className=\"divider mt-2\"></div>\r\n          \r\n              {/** Card Body */}\r\n              <div className='h-full w-full pb-6 bg-base-100'>\r\n                  {children}\r\n              </div>\r\n          </div>\r\n          \r\n      )\r\n  }\r\n  \r\n  \r\n  export default TitleCard","import * as React from \"react\";\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(TrashIcon);\nexport default ForwardRef;","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TitleCard from \"../../components/Cards/TitleCard\";\r\nimport TrashIcon from \"@heroicons/react/24/outline/TrashIcon\";\r\nimport moment from \"moment\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst Livraison = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [fileNames, setFileNames] = useState([]);\r\n    const [selectedFile, setSelectedFile] = useState(\"\");\r\n    const [selectedType, setSelectedType] = useState(\"LE\");\r\n    const [data, setData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        status: \"\",\r\n        deliveryCode: \"\",\r\n        articleCode: \"\",\r\n    });\r\n    const [selectedItems, setSelectedItems] = useState(new Set());\r\n    const [isLoadingFiles, setIsLoadingFiles] = useState(false);\r\n    const [isLoadingData, setIsLoadingData] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [showAddForm, setShowAddForm] = useState(false);\r\n    const [newItem, setNewItem] = useState({});\r\n\r\n    const BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\n    const LE_COLUMNS = [\r\n        { header: \"N° LE\", key: \"Document\" },\r\n        { header: \"Statut Tâche Magasin\", key: \"Statut_tache_magasin\" },\r\n        { header: \"Produit\", key: \"Produit\" },\r\n        { header: \"Désignation Article\", key: \"designation_article\" },\r\n        { header: \"Longueur\", key: \"longueur\" },\r\n        { header: \"Largeur\", key: \"largeur\" },\r\n        { header: \"Hauteur\", key: \"hauteur\" },\r\n        { header: \"Volume\", key: \"volume\" },\r\n        { header: \"Poids\", key: \"poids\" },\r\n        { header: \"Quantité\", key: \"Quantite\" },\r\n        { header: \"Poids Global\", key: \"poids_global\" },\r\n        { header: \"Volume/Quantité\", key: \"volume_quantite\" },\r\n        { header: \"Manutention\", key: \"manutention\" },\r\n        { header: \"Type Rayon\", key: \"Type_Rayon\" },\r\n        { header: \"Emplacement Cédant\", key: \"emplacement_cedant\" },\r\n        { header: \"Emplacement Prenant\", key: \"Emplacement_prenant\" },\r\n        { header: \"Qte Théo Céd UQA\", key: \"Qte_theo_ced_UQA\" },\r\n        { header: \"Statut Activité Magasin\", key: \"statut_entree_stock\" },\r\n    ];\r\n\r\n    const LS_COLUMNS = [\r\n        { header: \"N° LS\", key: \"Document\" },\r\n        { header: \"Statut\", key: \"Statut_tache_magasin\" },\r\n        { header: \"Produit\", key: \"Produit\" },\r\n        { header: \"Désignation\", key: \"designation_article\" },\r\n        { header: \"Emplacement Cédant\", key: \"Emplacement_cedant\" },\r\n        { header: \"Emplacement Prenant\", key: \"Emplacement_prenant\" },\r\n        { header: \"Qte Théo Céd UQA\", key: \"Qte_theo_ced_UQA\" },\r\n        { header: \"Quantité\", key: \"quantit\" },\r\n        { header: \"Statut Activité Magasin\", key: \"statut_entree_stock\" },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const fetchFiles = async () => {\r\n            setIsLoadingFiles(true);\r\n            setError(null);\r\n            setFileNames([]);\r\n            setSelectedFile(\"\");\r\n            const url = `${BASE_URL}/livraison/files`;\r\n            console.log(`Récupération des fichiers depuis : ${url} avec le type : ${selectedType}`);\r\n            try {\r\n                const res = await fetch(url, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ type: selectedType }),\r\n                });\r\n                if (!res.ok) {\r\n                    const errorText = await res.text();\r\n                    throw new Error(`Erreur HTTP ! statut : ${res.status}, message : ${errorText}`);\r\n                }\r\n                const data = await res.json();\r\n                setFileNames(data.files || []);\r\n                if (data.files.length === 0) {\r\n                    setError(`Aucun fichier disponible pour le type ${selectedType}.`);\r\n                }\r\n            } catch (err) {\r\n                console.error(\"Erreur lors de la récupération des fichiers :\", err);\r\n                setError(`Échec du chargement des noms de fichiers : ${err.message}`);\r\n            } finally {\r\n                setIsLoadingFiles(false);\r\n            }\r\n        };\r\n        if (selectedType) fetchFiles();\r\n    }, [BASE_URL, selectedType]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoadingData(true);\r\n            setError(null);\r\n            const url = `${BASE_URL}/livraison/process`;\r\n            const payload = {\r\n                type: selectedType,\r\n                fileName: selectedFile,\r\n                value: filters.articleCode || \"\",\r\n                stock: filters.status || \"Tous les statuts\",\r\n            };\r\n            console.log(`Récupération des données depuis : ${url} avec les données :`, payload);\r\n            try {\r\n                const res = await fetch(url, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(payload),\r\n                });\r\n                if (!res.ok) {\r\n                    const errorText = await res.text();\r\n                    throw new Error(`Erreur HTTP ! statut : ${res.status}, message : ${errorText}`);\r\n                }\r\n                const data = await res.json();\r\n                console.log(\"Données brutes reçues du backend :\", data);\r\n                // Normaliser les valeurs de statut_entree_stock\r\n                const normalizedData = data.map(item => ({\r\n                    ...item,\r\n                    statut_entree_stock: item.statut_entree_stock\r\n                        ? item.statut_entree_stock.trim().toLowerCase()\r\n                        : \"non terminée\",\r\n                }));\r\n                setData(normalizedData);\r\n                applyFilters(normalizedData);\r\n            } catch (err) {\r\n                console.error(\"Erreur lors de la récupération des données :\", err);\r\n                setError(`Échec du chargement des données : ${err.message}`);\r\n            } finally {\r\n                setIsLoadingData(false);\r\n            }\r\n        };\r\n\r\n        const applyFilters = (data) => {\r\n            let filtered = [...data];\r\n            if (filters.articleCode) {\r\n                filtered = filtered.filter((item) =>\r\n                    item.Produit?.toString().toLowerCase().includes(filters.articleCode.toLowerCase())\r\n                );\r\n            }\r\n            if (filters.deliveryCode) {\r\n                filtered = filtered.filter((item) =>\r\n                    item.Document?.toString().toLowerCase().includes(filters.deliveryCode.toLowerCase())\r\n                );\r\n            }\r\n            if (filters.status && filters.status !== \"Tous les statuts\") {\r\n                const filterStatus = filters.status.toLowerCase();\r\n                filtered = filtered.filter((item) => {\r\n                    const status = item.statut_entree_stock?.toLowerCase() || \"\";\r\n                    console.log(`Comparaison statut : item=${status}, filtre=${filterStatus}`);\r\n                    // Pour \"Non terminée\", inclure tout sauf \"Terminée\"\r\n                    if (filterStatus === \"non terminée\") {\r\n                        return status !== \"terminée\";\r\n                    }\r\n                    return status === filterStatus;\r\n                });\r\n            }\r\n            console.log(\"Données après filtrage :\", filtered);\r\n            setFilteredData(filtered);\r\n        };\r\n\r\n        if (selectedFile && selectedType) {\r\n            fetchData();\r\n        } else {\r\n            setData([]);\r\n            setFilteredData([]);\r\n            if (!selectedFile && selectedType) {\r\n                setError(\"Veuillez sélectionner un fichier pour charger les données.\");\r\n            }\r\n        }\r\n    }, [selectedFile, filters, BASE_URL, selectedType]);\r\n\r\n    const toggleItem = (index) => {\r\n        const newSelected = new Set(selectedItems);\r\n        if (newSelected.has(index)) {\r\n            newSelected.delete(index);\r\n        } else {\r\n            newSelected.add(index);\r\n        }\r\n        setSelectedItems(newSelected);\r\n    };\r\n\r\n    const updateItems = (action) => {\r\n        if (action === \"add\" && newItem) {\r\n            const itemToAdd = {\r\n                ...newItem,\r\n                Document: newItem.Document || `LIV${moment().format(\"YYYYMMDDHHmmss\")}`,\r\n                Statut_tache_magasin: newItem.Statut_tache_magasin || \"Non terminée\",\r\n                statut_entree_stock: newItem.statut_entree_stock || \"Non terminée\",\r\n            };\r\n            if (selectedType === 'LE') {\r\n                itemToAdd.longueur = newItem.longueur || \"100\";\r\n                itemToAdd.largeur = newItem.largeur || \"50\";\r\n                itemToAdd.hauteur = newItem.hauteur || \"20\";\r\n                itemToAdd.volume = newItem.volume || \"100000\";\r\n                itemToAdd.poids = newItem.poids || \"10\";\r\n                itemToAdd.Quantite = newItem.Quantite || \"100\";\r\n                itemToAdd.poids_global = newItem.poids_global || \"1000\";\r\n                itemToAdd.volume_quantite = newItem.volume_quantite || \"1000\";\r\n                itemToAdd.manutention = newItem.manutention || \"Manuel\";\r\n                itemToAdd.Type_Rayon = newItem.Type_Rayon || \"Standard\";\r\n            }\r\n            if (newItem.Qte_theo_ced_UQA && newItem.quantit) {\r\n                itemToAdd.quantite_ecart = (parseFloat(newItem.Qte_theo_ced_UQA) - parseFloat(newItem.quantit)).toString();\r\n            }\r\n            const newData = [...filteredData, itemToAdd];\r\n            setFilteredData(newData);\r\n            setShowAddForm(false);\r\n            setNewItem({});\r\n        } else if (action === \"remove\" && selectedItems.size > 0) {\r\n            const newData = [...filteredData];\r\n            const indicesToRemove = Array.from(selectedItems).sort((a, b) => b - a);\r\n            indicesToRemove.forEach((index) => newData.splice(index, 1));\r\n            setSelectedItems(new Set());\r\n            setFilteredData(newData);\r\n        }\r\n    };\r\n\r\n    const handleDelete = (index) => {\r\n        const newData = [...filteredData];\r\n        newData.splice(index, 1);\r\n        setFilteredData(newData);\r\n        setSelectedItems(new Set());\r\n    };\r\n\r\n    const exportToExcel = () => {\r\n        const ws = XLSX.utils.json_to_sheet(filteredData);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"Livraisons\");\r\n        XLSX.writeFile(wb, `livraison_${moment().format(\"YYYYMMDD_HHmmss\")}.xlsx`);\r\n    };\r\n\r\n    const handlePrint = () => {\r\n        const printContent = document.getElementById(\"livraison-table\").outerHTML;\r\n        const printWindow = window.open('', '_blank');\r\n        printWindow.document.write(`\r\n            <html>\r\n                <head><title>Imprimer Livraison</title></head>\r\n                <body>${printContent}</body>\r\n            </html>\r\n        `);\r\n        printWindow.document.close();\r\n        printWindow.print();\r\n    };\r\n\r\n    const columns = selectedType === 'LE' ? LE_COLUMNS : LS_COLUMNS;\r\n\r\n    // Liste des statuts pour le menu déroulant\r\n    const STATUS_OPTIONS = [\r\n        { value: \"Tous les statuts\", label: \"Tous les statuts\" },\r\n        { value: \"Terminée\", label: \"Terminée\" },\r\n        { value: \"Non terminée\", label: \"Non terminée\" },\r\n    ];\r\n\r\n    return (\r\n        <TitleCard title=\"Livraison\">\r\n            <div className=\"grid grid-cols-1 gap-4\">\r\n                <div className=\"flex space-x-2 mb-4\">\r\n                    <select\r\n                        value={selectedType}\r\n                        onChange={(e) => {\r\n                            setSelectedType(e.target.value);\r\n                            setSelectedFile(\"\");\r\n                            setFileNames([]);\r\n                            setError(null);\r\n                            setShowAddForm(false);\r\n                            setNewItem({});\r\n                        }}\r\n                        className=\"p-2 border rounded\"\r\n                    >\r\n                        <option value=\"LE\">Livraison Entrante (LE)</option>\r\n                        <option value=\"LS\">Livraison Sortante (LS)</option>\r\n                    </select>\r\n                    <select\r\n                        value={selectedFile}\r\n                        onChange={(e) => {\r\n                            setSelectedFile(e.target.value);\r\n                            setError(null);\r\n                            setShowAddForm(false);\r\n                            setNewItem({});\r\n                        }}\r\n                        className=\"p-2 border rounded\"\r\n                        disabled={isLoadingFiles}\r\n                    >\r\n                        <option value=\"\">{isLoadingFiles ? \"Chargement des fichiers...\" : \"Sélectionner un fichier\"}</option>\r\n                        {fileNames.map((name) => (\r\n                            <option key={name} value={name}>\r\n                                {name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <select\r\n                        value={filters.status}\r\n                        onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n                        className=\"p-2 border rounded\"\r\n                    >\r\n                        {STATUS_OPTIONS.map((option) => (\r\n                            <option key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"N° Livraison (LE/LS)\"\r\n                        value={filters.deliveryCode}\r\n                        onChange={(e) => setFilters({ ...filters, deliveryCode: e.target.value })}\r\n                        className=\"p-2 border rounded\"\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Code article\"\r\n                        value={filters.articleCode}\r\n                        onChange={(e) => setFilters({ ...filters, articleCode: e.target.value })}\r\n                        className=\"p-2 border rounded\"\r\n                    />\r\n                </div>\r\n                {(error || isLoadingFiles || isLoadingData) && (\r\n                    <div className=\"mb-4\">\r\n                        {isLoadingFiles && <div className=\"text-blue-500\">Chargement des fichiers...</div>}\r\n                        {isLoadingData && <div className=\"text-blue-500\">Chargement des données...</div>}\r\n                        {error && <div className=\"text-red-500\">{error}</div>}\r\n                    </div>\r\n                )}\r\n                <div className=\"flex space-x-2 mb-4\">\r\n                    <button\r\n                        onClick={() => setShowAddForm(!showAddForm)}\r\n                        className=\"bg-blue-500 text-white p-2 rounded hover:bg-blue-600\"\r\n                        disabled={!selectedFile || isLoadingData}\r\n                    >\r\n                        {showAddForm ? \"Annuler\" : \"Ajouter\"}\r\n                    </button>\r\n                    <button\r\n                        onClick={() => updateItems(\"remove\")}\r\n                        className=\"bg-red-500 text-white p-2 rounded hover:bg-red-600\"\r\n                        disabled={selectedItems.size === 0 || isLoadingData}\r\n                    >\r\n                        Retirer\r\n                    </button>\r\n                    <button\r\n                        onClick={exportToExcel}\r\n                        className=\"bg-green-500 text-white p-2 rounded hover:bg-green-600\"\r\n                        disabled={isLoadingData}\r\n                    >\r\n                        Exporter Excel\r\n                    </button>\r\n                    <button\r\n                        onClick={handlePrint}\r\n                        className=\"bg-yellow-500 text-white p-2 rounded hover:bg-yellow-600\"\r\n                        disabled={isLoadingData}\r\n                    >\r\n                        Imprimer\r\n                    </button>\r\n                </div>\r\n                {showAddForm && (\r\n                    <div className=\"mb-4 p-4 border rounded bg-gray-50\">\r\n                        <h3 className=\"text-lg font-semibold mb-2\">Ajouter un nouvel article</h3>\r\n                        <form\r\n                            onSubmit={(e) => {\r\n                                e.preventDefault();\r\n                                updateItems(\"add\");\r\n                            }}\r\n                            className=\"grid grid-cols-2 gap-4\"\r\n                        >\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Document\"\r\n                                value={newItem.Document || \"\"}\r\n                                onChange={(e) => setNewItem({ ...newItem, Document: e.target.value })}\r\n                                className=\"p-2 border rounded\"\r\n                                required\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Produit\"\r\n                                value={newItem.Produit || \"\"}\r\n                                onChange={(e) => setNewItem({ ...newItem, Produit: e.target.value })}\r\n                                className=\"p-2 border rounded\"\r\n                                required\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Désignation Article\"\r\n                                value={newItem.designation_article || \"\"}\r\n                                onChange={(e) => setNewItem({ ...newItem, designation_article: e.target.value })}\r\n                                className=\"p-2 border rounded\"\r\n                            />\r\n                            {selectedType === 'LE' && (\r\n                                <>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Longueur\"\r\n                                        value={newItem.longueur || \"\"}\r\n                                        onChange={(e) => setNewItem({ ...newItem, longueur: e.target.value })}\r\n                                        className=\"p-2 border rounded\"\r\n                                    />\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Largeur\"\r\n                                        value={newItem.largeur || \"\"}\r\n                                        onChange={(e) => setNewItem({ ...newItem, largeur: e.target.value })}\r\n                                        className=\"p-2 border rounded\"\r\n                                    />\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Hauteur\"\r\n                                        value={newItem.hauteur || \"\"}\r\n                                        onChange={(e) => setNewItem({ ...newItem, hauteur: e.target.value })}\r\n                                        className=\"p-2 border rounded\"\r\n                                    />\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Volume\"\r\n                                        value={newItem.volume || \"\"}\r\n                                        onChange={(e) => setNewItem({ ...newItem, volume: e.target.value })}\r\n                                        className=\"p-2 border rounded\"\r\n                                    />\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Poids\"\r\n                                        value={newItem.poids || \"\"}\r\n                                        onChange={(e) => setNewItem({ ...newItem, poids: e.target.value })}\r\n                                        className=\"p-2 border rounded\"\r\n                                    />\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Quantité\"\r\n                                        value={newItem.Quantite || \"\"}\r\n                                        onChange={(e) => setNewItem({ ...newItem, Quantite: e.target.value })}\r\n                                        className=\"p-2 border rounded\"\r\n                                    />\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Poids Global\"\r\n                                        value={newItem.poids_global || \"\"}\r\n                                        onChange={(e) => setNewItem({ ...newItem, poids_global: e.target.value })}\r\n                                        className=\"p-2 border rounded\"\r\n                                    />\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Volume/Quantité\"\r\n                                        value={newItem.volume_quantite || \"\"}\r\n                                        onChange={(e) => setNewItem({ ...newItem, volume_quantite: e.target.value })}\r\n                                        className=\"p-2 border rounded\"\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Manutention\"\r\n                                        value={newItem.manutention || \"\"}\r\n                                        onChange={(e) => setNewItem({ ...newItem, manutention: e.target.value })}\r\n                                        className=\"p-2 border rounded\"\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Type Rayon\"\r\n                                        value={newItem.Type_Rayon || \"\"}\r\n                                        onChange={(e) => setNewItem({ ...newItem, Type_Rayon: e.target.value })}\r\n                                        className=\"p-2 border rounded\"\r\n                                    />\r\n                                </>\r\n                            )}\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder={selectedType === 'LE' ? \"Emplacement Cédant\" : \"Emplacement Cédant\"}\r\n                                value={newItem.emplacement_cedant || newItem.Emplacement_cedant || \"\"}\r\n                                onChange={(e) => setNewItem({ ...newItem, [selectedType === 'LE' ? \"emplacement_cedant\" : \"Emplacement_cedant\"]: e.target.value })}\r\n                                className=\"p-2 border rounded\"\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Emplacement Prenant\"\r\n                                value={newItem.Emplacement_prenant || \"\"}\r\n                                onChange={(e) => setNewItem({ ...newItem, Emplacement_prenant: e.target.value })}\r\n                                className=\"p-2 border rounded\"\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Emplacement EWM/Qte\"\r\n                                value={newItem.Emplacement_EWM_Qte || \"\"}\r\n                                onChange={(e) => setNewItem({ ...newItem, Emplacement_EWM_Qte: e.target.value })}\r\n                                className=\"p-2 border rounded\"\r\n                            />\r\n                            <input\r\n                                type=\"number\"\r\n                                placeholder=\"Qte Théo Céd UQA\"\r\n                                value={newItem.Qte_theo_ced_UQA || \"\"}\r\n                                onChange={(e) => setNewItem({ ...newItem, Qte_theo_ced_UQA: e.target.value })}\r\n                                className=\"p-2 border rounded\"\r\n                                required\r\n                            />\r\n                            <input\r\n                                type=\"number\"\r\n                                placeholder=\"Quantité\"\r\n                                value={newItem.quantit || \"\"}\r\n                                onChange={(e) => setNewItem({ ...newItem, quantit: e.target.value })}\r\n                                className=\"p-2 border rounded\"\r\n                                required\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Qté Écart\"\r\n                                value={newItem.quantite_ecart || \"\"}\r\n                                readOnly\r\n                                className=\"p-2 border rounded bg-gray-100\"\r\n                            />\r\n                            <select\r\n                                value={newItem.Statut_tache_magasin || \"Non terminée\"}\r\n                                onChange={(e) => setNewItem({ ...newItem, Statut_tache_magasin: e.target.value })}\r\n                                className=\"p-2 border rounded\"\r\n                            >\r\n                                <option value=\"Non terminée\">Non terminée</option>\r\n                                <option value=\"Terminée\">Terminée</option>\r\n                                <option value=\"Partiellement terminée\">Partiellement terminée</option>\r\n                                <option value=\"Pas commencée\">Pas commencée</option>\r\n                                <option value=\"Pas pertinente\">Pas pertinente</option>\r\n                            </select>\r\n                            <select\r\n                                value={newItem.statut_entree_stock || \"Non terminée\"}\r\n                                onChange={(e) => setNewItem({ ...newItem, statut_entree_stock: e.target.value })}\r\n                                className=\"p-2 border rounded\"\r\n                            >\r\n                                <option value=\"Non terminée\">Non terminée</option>\r\n                                <option value=\"Terminée\">Terminée</option>\r\n                                <option value=\"Partiellement terminée\">Partiellement terminée</option>\r\n                                <option value=\"Pas commencée\">Pas commencée</option>\r\n                                <option value=\"Pas pertinente\">Pas pertinente</option>\r\n                            </select>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"col-span-2 bg-blue-500 text-white p-2 rounded hover:bg-blue-600\"\r\n                                disabled={isLoadingData}\r\n                            >\r\n                                Ajouter l'article\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n                <div className=\"overflow-x-auto\">\r\n                    <table id=\"livraison-table\" className=\"w-full text-sm text-left text-gray-500\">\r\n                        <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\r\n                            <tr>\r\n                                <th className=\"px-4 py-2\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) =>\r\n                                            setSelectedItems(\r\n                                                e.target.checked\r\n                                                    ? new Set(filteredData.map((_, i) => i))\r\n                                                    : new Set()\r\n                                            )\r\n                                        }\r\n                                        disabled={isLoadingData}\r\n                                    />\r\n                                </th>\r\n                                {columns.map((col) => (\r\n                                    <th key={col.key} className=\"px-4 py-2\" style={col.style || {}}>\r\n                                        {col.header}\r\n                                    </th>\r\n                                ))}\r\n                                <th className=\"px-4 py-2\">Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {filteredData.length === 0 ? (\r\n                                <tr>\r\n                                    <td colSpan={columns.length + 2} className=\"px-4 py-2 text-center text-gray-500\">\r\n                                        Aucune donnée disponible pour les filtres sélectionnés.\r\n                                    </td>\r\n                                </tr>\r\n                            ) : (\r\n                                filteredData.map((row, index) => (\r\n                                    <tr\r\n                                        key={index}\r\n                                        className={`${selectedItems.has(index) ? \"bg-gray-100\" : \"\"} border-b hover:bg-gray-50`}\r\n                                    >\r\n                                        <td className=\"px-4 py-2\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={selectedItems.has(index)}\r\n                                                onChange={() => toggleItem(index)}\r\n                                                disabled={isLoadingData}\r\n                                            />\r\n                                        </td>\r\n                                        {columns.map((col) => (\r\n                                            <td key={col.key} className=\"px-4 py-2\" style={col.style || {}}>\r\n                                                {row[col.key] !== undefined && row[col.key] !== null ? row[col.key] : \"\"}\r\n                                            </td>\r\n                                        ))}\r\n                                        <td className=\"px-4 py-2\">\r\n                                            <button\r\n                                                onClick={() => handleDelete(index)}\r\n                                                className=\"text-red-500 hover:text-red-700\"\r\n                                                disabled={isLoadingData}\r\n                                            >\r\n                                                <TrashIcon className=\"h-5 w-5\" />\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </TitleCard>\r\n    );\r\n};\r\n\r\nexport default Livraison;","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPageTitle } from '../../features/common/headerSlice';\r\nimport Leads from '../../features/leads';\r\n\r\nfunction InternalPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title: \"Livraisons LE - LS\" }));\r\n    }, []);\r\n\r\n    return (\r\n        <Leads />\r\n    );\r\n}\r\n\r\nexport default InternalPage;"],"names":["styleClass","children","className","title","topMargin","TopSideButtons","TrashIcon","svgRef","titleId","props","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","useDispatch","fileNames","setFileNames","useState","selectedFile","setSelectedFile","selectedType","setSelectedType","data","setData","filteredData","setFilteredData","filters","setFilters","status","deliveryCode","articleCode","selectedItems","setSelectedItems","Set","isLoadingFiles","setIsLoadingFiles","isLoadingData","setIsLoadingData","error","setError","showAddForm","setShowAddForm","newItem","setNewItem","BASE_URL","process","useEffect","async","url","console","log","res","fetch","method","headers","body","JSON","stringify","type","ok","errorText","text","Error","json","files","length","err","message","fetchFiles","applyFilters","filtered","filter","item","Produit","toString","toLowerCase","includes","Document","filterStatus","statut_entree_stock","payload","fileName","value","stock","normalizedData","map","trim","fetchData","updateItems","action","itemToAdd","moment","format","Statut_tache_magasin","longueur","largeur","hauteur","volume","poids","Quantite","poids_global","volume_quantite","manutention","Type_Rayon","Qte_theo_ced_UQA","quantit","quantite_ecart","parseFloat","newData","size","Array","from","sort","a","b","forEach","index","splice","columns","header","key","TitleCard","onChange","e","target","disabled","name","label","option","placeholder","onClick","ws","XLSX","wb","printContent","document","getElementById","outerHTML","printWindow","window","open","write","close","print","onSubmit","preventDefault","required","designation_article","emplacement_cedant","Emplacement_cedant","Emplacement_prenant","Emplacement_EWM_Qte","readOnly","checked","_","i","col","style","colSpan","row","has","newSelected","delete","add","toggleItem","undefined","handleDelete","dispatch","setPageTitle"],"sourceRoot":""}