{"version":3,"file":"static/js/791.2ee06dcc.chunk.js","mappings":"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","sources":["components/Input/InputText.js","components/Typography/ErrorText.js","containers/Header.js","routes/index.js","containers/PageContent.js","containers/SidebarSubmenu.js","config/routes.js","containers/LeftSidebar.js","containers/RightSidebar.js","features/leads/components/AddLeadModalBody.js","features/common/components/ConfirmationModalBody.js","containers/ModalLayout.js","containers/Layout.js","utils/globalConstantUtil.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\n\r\nfunction InputText({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\r\n\r\n    const [value, setValue] = useState(defaultValue)\r\n\r\n    const updateInputValue = (val) => {\r\n        setValue(val)\r\n        updateFormValue({updateType, value : val})\r\n    }\r\n\r\n    return(\r\n        <div className={`form-control w-full ${containerStyle}`}>\r\n            <label className=\"label\">\r\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\r\n            </label>\r\n            <input type={type || \"text\"} value={value} placeholder={placeholder || \"\"} onChange={(e) => updateInputValue(e.target.value)}className=\"input  input-bordered w-full \" />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default InputText","function ErrorText({styleClass, children}){\r\n    return(\r\n        <p className={`text-center  text-error ${styleClass}`}>{children}</p>\r\n    )\r\n}\r\n\r\nexport default ErrorText","import { themeChange } from 'theme-change'\r\nimport React, {  useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Bars3Icon  from '@heroicons/react/24/outline/Bars3Icon'\r\nimport MoonIcon from '@heroicons/react/24/outline/MoonIcon'\r\nimport SunIcon from '@heroicons/react/24/outline/SunIcon'\r\nimport { openRightDrawer } from '../features/common/rightDrawerSlice';\r\nimport { RIGHT_DRAWER_TYPES } from '../utils/globalConstantUtil'\r\n\r\nimport { NavLink,  Routes, Link , useLocation} from 'react-router-dom'\r\n\r\n\r\nfunction Header(){\r\n\r\n    const dispatch = useDispatch()\r\n    const {noOfNotifications, pageTitle} = useSelector(state => state.header)\r\n    const [currentTheme, setCurrentTheme] = useState(localStorage.getItem(\"theme\"))\r\n\r\n    useEffect(() => {\r\n        themeChange(false)\r\n        if(currentTheme === null){\r\n            if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ) {\r\n                setCurrentTheme(\"dark\")\r\n            }else{\r\n                setCurrentTheme(\"light\")\r\n            }\r\n        }\r\n        // 👆 false parameter is required for react project\r\n      }, [])\r\n\r\n\r\n\r\n\r\n    function logoutUser(){\r\n        localStorage.clear();\r\n        window.location.href = '/'\r\n    }\r\n\r\n    return(\r\n        // navbar fixed  flex-none justify-between bg-base-300  z-10 shadow-md\r\n        \r\n        <>\r\n            <div className=\"navbar sticky top-0 bg-base-100  z-10 shadow-md \">\r\n\r\n\r\n                {/* Menu toogle for mobile view or small screen */}\r\n                <div className=\"flex-1\">\r\n                    <label htmlFor=\"left-sidebar-drawer\" className=\"btn btn-primary drawer-button lg:hidden\">\r\n                    <Bars3Icon className=\"h-5 inline-block w-5\"/></label>\r\n                    <h1 className=\"text-2xl font-semibold ml-2\">{pageTitle}</h1>\r\n                </div>\r\n\r\n                \r\n\r\n            <div className=\"flex-none \">\r\n\r\n                {/* Multiple theme selection, uncomment this if you want to enable multiple themes selection, \r\n                also includes corporate and retro themes in tailwind.config file */}\r\n                \r\n                {/* <select className=\"select select-sm mr-4\" data-choose-theme>\r\n                    <option disabled selected>Theme</option>\r\n                    <option value=\"light\">Default</option>\r\n                    <option value=\"dark\">Dark</option>\r\n                    <option value=\"corporate\">Corporate</option>\r\n                    <option value=\"retro\">Retro</option>\r\n                </select> */}\r\n\r\n\r\n            {/* Light and dark theme selection toogle **/}\r\n            <label className=\"swap \">\r\n                <input type=\"checkbox\"/>\r\n                <SunIcon data-set-theme=\"light\" data-act-class=\"ACTIVECLASS\" className={\"fill-current w-6 h-6 \"+(currentTheme === \"dark\" ? \"swap-on\" : \"swap-off\")}/>\r\n                <MoonIcon data-set-theme=\"dark\" data-act-class=\"ACTIVECLASS\" className={\"fill-current w-6 h-6 \"+(currentTheme === \"light\" ? \"swap-on\" : \"swap-off\")} />\r\n            </label>\r\n\r\n\r\n\r\n                {/* Profile icon, opening menu on click */}\r\n                <div className=\"dropdown dropdown-end ml-4\">\r\n                        <label tabIndex={0} className=\"btn btn-ghost btn-circle avatar\">\r\n                            <div className=\"w-10 rounded-full\">\r\n                                <img src=\"/ocp.png\" alt=\"profile\" />\r\n                            </div>\r\n                        </label>\r\n\r\n                    <ul tabIndex={0} className=\"menu menu-compact dropdown-content mt-3 p-2 shadow bg-base-100 rounded-box w-52\">\r\n                    \r\n                        <div className=\"divider mt-0 mb-0\"></div>\r\n                        <li><a onClick={logoutUser}>Logout</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","// All components mapping with path for internal routes\r\n\r\nimport { lazy } from 'react'\r\n\r\nconst Dashboard = lazy(() => import('../pages/protected/Dashboard'))\r\nconst Welcome = lazy(() => import('../pages/protected/Welcome'))\r\nconst Charts = lazy(() => import('../pages/protected/Charts'))\r\nconst Leads = lazy(() => import('../pages/protected/Leads'))\r\n\r\n\r\nconst routes = [\r\n  {\r\n    path: '/dashboard', // the url\r\n    component: Dashboard, // view rendered\r\n  },\r\n  {\r\n    path: '/welcome', // the url\r\n    component: Welcome, // view rendered\r\n  },\r\n  {\r\n    path: '/leads',\r\n    component: Leads,\r\n  },\r\n\r\n\r\n  {\r\n    path: '/charts',\r\n    component: Charts,\r\n  },\r\n\r\n]\r\n\r\nexport default routes\r\n","import Header from \"./Header\"\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\r\nimport routes from '../routes'\r\nimport { Suspense, lazy } from 'react'\r\nimport SuspenseContent from \"./SuspenseContent\"\r\nimport { useSelector } from 'react-redux'\r\nimport { useEffect, useRef } from \"react\"\r\n\r\nconst Page404 = lazy(() => import('../pages/protected/404'))\r\n\r\n\r\nfunction PageContent(){\r\n    const mainContentRef = useRef(null);\r\n    const {pageTitle} = useSelector(state => state.header)\r\n\r\n\r\n    // Scroll back to top on new page load\r\n    useEffect(() => {\r\n        mainContentRef.current.scroll({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n          });\r\n      }, [pageTitle])\r\n\r\n    return(\r\n        <div className=\"drawer-content flex flex-col \">\r\n            <Header/>\r\n            <main className=\"flex-1 overflow-y-auto md:pt-4 pt-4 px-6  bg-base-200\" ref={mainContentRef}>\r\n                <Suspense fallback={<SuspenseContent />}>\r\n                        <Routes>\r\n                            {\r\n                                routes.map((route, key) => {\r\n                                    return(\r\n                                        <Route\r\n                                            key={key}\r\n                                            exact={true}\r\n                                            path={`${route.path}`}\r\n                                            element={<route.component />}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                            {/* Redirecting unknown url to 404 page */}\r\n                            <Route path=\"*\" element={<Page404 />} />\r\n                        </Routes>\r\n                </Suspense>\r\n                <div className=\"h-16\"></div>\r\n            </main>\r\n        </div> \r\n    )\r\n}\r\n\r\n\r\nexport default PageContent\r\n","import ChevronDownIcon from  '@heroicons/react/24/outline/ChevronDownIcon'\r\nimport {useEffect, useState} from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n\r\nfunction SidebarSubmenu({submenu, name, icon}){\r\n    const location = useLocation()\r\n    const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n\r\n    /** Open Submenu list if path found in routes, this is for directly loading submenu routes  first time */\r\n    useEffect(() => {\r\n        if(submenu.filter(m => {return m.path === location.pathname})[0])setIsExpanded(true)\r\n    }, [])\r\n\r\n    return (\r\n        <div className='flex flex-col'>\r\n\r\n            {/** Route header */}\r\n            <div className='w-full block' onClick={() => setIsExpanded(!isExpanded)}>\r\n                {icon} {name} \r\n                <ChevronDownIcon className={'w-5 h-5 mt-1 float-right delay-400 duration-500 transition-all  ' + (isExpanded ? 'rotate-180' : '')}/>\r\n            </div>\r\n\r\n            {/** Submenu list */}\r\n            <div className={` w-full `+ (isExpanded ? \"\" : \"hidden\")}>\r\n                <ul className={`menu menu-compact`}>\r\n                {\r\n                    submenu.map((m, k) => {\r\n                        return(\r\n                            <li key={k}>\r\n                                <Link to={m.path}>\r\n                                    {m.icon} {m.name}\r\n                                    {\r\n                                            location.pathname == m.path ? (<span className=\"absolute mt-1 mb-1 inset-y-0 left-0 w-1 rounded-tr-md rounded-br-md bg-primary \"\r\n                                                aria-hidden=\"true\"></span>) : null\r\n                                    }\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarSubmenu","import { lazy } from 'react';\r\nimport Squares2X2Icon from '@heroicons/react/24/outline/Squares2X2Icon';\r\nimport DocumentIcon from '@heroicons/react/24/outline/DocumentIcon';\r\nimport ArrowLeftOnRectangleIcon from '@heroicons/react/24/outline/ArrowLeftOnRectangleIcon';\r\nimport Cog6ToothIcon from '@heroicons/react/24/outline/Cog6ToothIcon';\r\nimport ChartBarIcon from '@heroicons/react/24/outline/ChartBarIcon';\r\nimport InboxArrowDownIcon from '@heroicons/react/24/outline/InboxArrowDownIcon';\r\nimport KeyIcon from '@heroicons/react/24/outline/KeyIcon';\r\n\r\n// Lazy-loaded components\r\nconst Dashboard = lazy(() => import('../pages/protected/Dashboard'));\r\nconst Welcome = lazy(() => import('../pages/protected/Welcome'));\r\nconst Charts = lazy(() => import('../pages/protected/Charts'));\r\nconst Leads = lazy(() => import('../pages/protected/Leads'));\r\n\r\nconst ForgotPassword = lazy(() => import('../pages/ForgotPassword'));\r\n\r\nconst iconClasses = `h-6 w-6`;\r\nconst submenuIconClasses = `h-5 w-5`;\r\n\r\nconst logoutUser = () => {\r\n    console.log('Logout triggered');\r\n    localStorage.clear();\r\n    console.log('Local storage cleared:', localStorage);\r\n    window.location.href = '/login'; // Redirect to login\r\n};\r\n\r\nconst routes = [\r\n    {\r\n        path: '/app/dashboard',\r\n        component: Dashboard,\r\n        icon: <Squares2X2Icon className={iconClasses} />,\r\n        name: 'Files Upload',\r\n    },\r\n\r\n    {\r\n        path: '/app/leads',\r\n        component: Leads,\r\n        icon: <InboxArrowDownIcon className={iconClasses} />,\r\n        name: 'Livraison',\r\n    },\r\n    {\r\n        path: '/app/charts',\r\n        component: Charts,\r\n        icon: <ChartBarIcon className={iconClasses} />,\r\n        name: 'Analytics',\r\n    },\r\n   \r\n    {\r\n        path: '',\r\n        icon: <Cog6ToothIcon className={`${iconClasses} inline`} />,\r\n        name: 'Settings',\r\n        submenu: [\r\n        \r\n            {\r\n                path: '/forgot-password',\r\n                component: ForgotPassword,\r\n                icon: <KeyIcon className={submenuIconClasses} />,\r\n                name: 'Forgot Password',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: '/app/welcome',\r\n        component: Welcome,\r\n        icon: <DocumentIcon className={iconClasses} />,\r\n        name: 'Welcome',\r\n    },\r\n    {\r\n        path: null,\r\n        component: 'Logout',\r\n        icon: <ArrowLeftOnRectangleIcon className={iconClasses} />,\r\n        name: 'Logout',\r\n        onClick: logoutUser,\r\n    },\r\n];\r\n\r\nexport default routes;","import React from 'react';\r\nimport { NavLink, Link, useLocation } from 'react-router-dom';\r\nimport SidebarSubmenu from './SidebarSubmenu';\r\nimport XMarkIcon from '@heroicons/react/24/outline/XMarkIcon';\r\nimport routes from '../config/routes'; // Updated to use unified routes\r\n\r\nfunction LeftSidebar() {\r\n    const location = useLocation();\r\n\r\n    const close = () => {\r\n        document.getElementById('left-sidebar-drawer').click();\r\n    };\r\n\r\n    return (\r\n        <div className=\"drawer-side z-30\">\r\n            <label htmlFor=\"left-sidebar-drawer\" className=\"drawer-overlay\"></label>\r\n            <ul className=\"menu pt-2 w-80 bg-base-100 min-h-full text-base-content\">\r\n                <button\r\n                    className=\"btn btn-ghost bg-base-300 btn-circle z-50 top-0 right-0 mt-4 mr-2 absolute lg:hidden\"\r\n                    onClick={close}\r\n                >\r\n                    <XMarkIcon className=\"h-5 inline-block w-5\" />\r\n                </button>\r\n\r\n                <li className=\"mb-2 font-semibold text-xl\">\r\n                    <Link to=\"/app/welcome\">\r\n                        <img className=\"mask mask-squircle w-10\" src=\"/stock-management.png\" alt=\"OptiStock Logo\" />\r\n                        OptiStock\r\n                    </Link>\r\n                </li>\r\n\r\n                {routes.map((route, k) => (\r\n                    <li key={k}>\r\n                        {route.submenu ? (\r\n                            <SidebarSubmenu {...route} />\r\n                        ) : route.onClick ? (\r\n                            <button\r\n                                onClick={route.onClick}\r\n                                className=\"font-normal flex items-center w-full p-2 rounded hover:bg-base-200\"\r\n                            >\r\n                                {route.icon} {route.name}\r\n                            </button>\r\n                        ) : (\r\n                            <NavLink\r\n                                end\r\n                                to={route.path}\r\n                                className={({ isActive }) => `${isActive ? 'font-semibold bg-base-200' : 'font-normal'}`}\r\n                            >\r\n                                {route.icon} {route.name}\r\n                                {location.pathname === route.path ? (\r\n                                    <span\r\n                                        className=\"absolute inset-y-0 left-0 w-1 rounded-tr-md rounded-br-md bg-primary\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></span>\r\n                                ) : null}\r\n                            </NavLink>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftSidebar;","import XMarkIcon from '@heroicons/react/24/solid/XMarkIcon'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport NotificationBodyRightDrawer from '../features/common/components/NotificationBodyRightDrawer'\r\nimport { closeRightDrawer } from '../features/common/rightDrawerSlice'\r\nimport { RIGHT_DRAWER_TYPES } from '../utils/globalConstantUtil'\r\n\r\n\r\nfunction RightSidebar() {\r\n\r\n    const { isOpen, bodyType, extraObject, header } = useSelector(state => state.rightDrawer)\r\n    const dispatch = useDispatch()\r\n\r\n    const close = (e) => {\r\n        dispatch(closeRightDrawer(e))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={\" fixed overflow-hidden z-20 bg-gray-900 bg-opacity-25 inset-0 transform ease-in-out \" + (isOpen ? \" transition-opacity opacity-100 duration-500 translate-x-0  \" : \" transition-all delay-500 opacity-0 translate-x-full  \")}>\r\n\r\n            <section className={\"w-80 md:w-96  right-0 absolute bg-base-100 h-full shadow-xl delay-400 duration-500 ease-in-out transition-all transform  \" + (isOpen ? \" translate-x-0 \" : \" translate-x-full \")}>\r\n\r\n                <div className=\"relative  pb-5 flex flex-col  h-full\">\r\n\r\n                    {/* Header */}\r\n                    <div className=\"navbar   flex pl-4 pr-4   shadow-md \">\r\n                        <button className=\"float-left btn btn-circle btn-outline btn-sm\" onClick={() => close()}>\r\n                            <XMarkIcon className=\"h-5 w-5\" />\r\n                        </button>\r\n                        <span className=\"ml-2 font-bold text-xl\">{header}</span>\r\n                    </div>\r\n\r\n\r\n  \r\n                    {/* ------------------ Content End ------------------ */}\r\n                </div>\r\n\r\n            </section>\r\n\r\n            <section className=\" w-screen h-full cursor-pointer \" onClick={() => close()} ></section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RightSidebar","import { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport InputText from '../../../components/Input/InputText'\r\nimport ErrorText from '../../../components/Typography/ErrorText'\r\nimport { showNotification } from \"../../common/headerSlice\"\r\nimport { addNewLead } from \"../leadSlice\"\r\n\r\nconst INITIAL_LEAD_OBJ = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\"\r\n}\r\n\r\nfunction AddLeadModalBody({ closeModal }) {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n    const [leadObj, setLeadObj] = useState(INITIAL_LEAD_OBJ)\r\n\r\n\r\n    const saveNewLead = () => {\r\n        if (leadObj.first_name.trim() === \"\") return setErrorMessage(\"First Name is required!\")\r\n        else if (leadObj.email.trim() === \"\") return setErrorMessage(\"Email id is required!\")\r\n        else {\r\n            let newLeadObj = {\r\n                \"id\": 7,\r\n                \"email\": leadObj.email,\r\n                \"first_name\": leadObj.first_name,\r\n                \"last_name\": leadObj.last_name,\r\n                \"avatar\": \"https://reqres.in/img/faces/1-image.jpg\"\r\n            }\r\n            dispatch(addNewLead({ newLeadObj }))\r\n            dispatch(showNotification({ message: \"New Lead Added!\", status: 1 }))\r\n            closeModal()\r\n        }\r\n    }\r\n\r\n    const updateFormValue = ({ updateType, value }) => {\r\n        setErrorMessage(\"\")\r\n        setLeadObj({ ...leadObj, [updateType]: value })\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <InputText type=\"text\" defaultValue={leadObj.first_name} updateType=\"first_name\" containerStyle=\"mt-4\" labelTitle=\"First Name\" updateFormValue={updateFormValue} />\r\n\r\n            <InputText type=\"text\" defaultValue={leadObj.last_name} updateType=\"last_name\" containerStyle=\"mt-4\" labelTitle=\"Last Name\" updateFormValue={updateFormValue} />\r\n\r\n            <InputText type=\"email\" defaultValue={leadObj.email} updateType=\"email\" containerStyle=\"mt-4\" labelTitle=\"Email Id\" updateFormValue={updateFormValue} />\r\n\r\n\r\n            <ErrorText styleClass=\"mt-16\">{errorMessage}</ErrorText>\r\n            <div className=\"modal-action\">\r\n                <button className=\"btn btn-ghost\" onClick={() => closeModal()}>Cancel</button>\r\n                <button className=\"btn btn-primary px-6\" onClick={() => saveNewLead()}>Save</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddLeadModalBody","import {useDispatch, useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\nimport { CONFIRMATION_MODAL_CLOSE_TYPES, MODAL_CLOSE_TYPES } from '../../../utils/globalConstantUtil'\r\nimport { deleteLead } from '../../leads/leadSlice'\r\nimport { showNotification } from '../headerSlice'\r\n\r\nfunction ConfirmationModalBody({ extraObject, closeModal}){\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { message, type, _id, index} = extraObject\r\n\r\n\r\n    const proceedWithYes = async() => {\r\n        if(type === CONFIRMATION_MODAL_CLOSE_TYPES.LEAD_DELETE){\r\n            // positive response, call api or dispatch redux function\r\n            dispatch(deleteLead({index}))\r\n            dispatch(showNotification({message : \"Lead Deleted!\", status : 1}))\r\n        }\r\n        closeModal()\r\n    }\r\n\r\n    return(\r\n        <> \r\n        <p className=' text-xl mt-8 text-center'>\r\n            {message}\r\n        </p>\r\n\r\n        <div className=\"modal-action mt-12\">\r\n                \r\n                <button className=\"btn btn-outline   \" onClick={() => closeModal()}>Cancel</button>\r\n\r\n                <button className=\"btn btn-primary w-36\" onClick={() => proceedWithYes()}>Yes</button> \r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConfirmationModalBody","import { useEffect } from 'react'\r\nimport { MODAL_BODY_TYPES } from '../utils/globalConstantUtil'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { closeModal } from '../features/common/modalSlice'\r\nimport AddLeadModalBody from '../features/leads/components/AddLeadModalBody'\r\nimport ConfirmationModalBody from '../features/common/components/ConfirmationModalBody'\r\n\r\n\r\nfunction ModalLayout(){\r\n\r\n\r\n    const {isOpen, bodyType, size, extraObject, title} = useSelector(state => state.modal)\r\n    const dispatch = useDispatch()\r\n\r\n    const close = (e) => {\r\n        dispatch(closeModal(e))\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        {/* The button to open modal */}\r\n\r\n            {/* Put this part before </body> tag */}\r\n            <div className={`modal ${isOpen ? \"modal-open\" : \"\"}`}>\r\n            <div className={`modal-box  ${size === 'lg' ? 'max-w-5xl' : ''}`}>\r\n                <button className=\"btn btn-sm btn-circle absolute right-2 top-2\" onClick={() => close()}>✕</button>\r\n                <h3 className=\"font-semibold text-2xl pb-6 text-center\">{title}</h3>\r\n\r\n\r\n                {/* Loading modal body according to different modal type */}\r\n                {\r\n                    {\r\n                             [MODAL_BODY_TYPES.LEAD_ADD_NEW] : <AddLeadModalBody closeModal={close} extraObject={extraObject}/>,\r\n                             [MODAL_BODY_TYPES.CONFIRMATION] : <ConfirmationModalBody extraObject={extraObject} closeModal={close}/>,\r\n                             [MODAL_BODY_TYPES.DEFAULT] : <div></div>\r\n                    }[bodyType]\r\n                }\r\n            </div>\r\n            </div>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default ModalLayout","import PageContent from \"./PageContent\"\r\nimport LeftSidebar from \"./LeftSidebar\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport RightSidebar from './RightSidebar'\r\nimport { useEffect } from \"react\"\r\nimport  {  removeNotificationMessage } from \"../features/common/headerSlice\"\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport ModalLayout from \"./ModalLayout\"\r\n\r\nfunction Layout(){\r\n  const dispatch = useDispatch()\r\n  const {newNotificationMessage, newNotificationStatus} = useSelector(state => state.header)\r\n\r\n\r\n  useEffect(() => {\r\n      if(newNotificationMessage !== \"\"){\r\n          if(newNotificationStatus === 1)NotificationManager.success(newNotificationMessage, 'Success')\r\n          if(newNotificationStatus === 0)NotificationManager.error( newNotificationMessage, 'Error')\r\n          dispatch(removeNotificationMessage())\r\n      }\r\n  }, [newNotificationMessage])\r\n\r\n    return(\r\n      <>\r\n        { /* Left drawer - containing page content and side bar (always open) */ }\r\n        <div className=\"drawer  lg:drawer-open\">\r\n            <input id=\"left-sidebar-drawer\" type=\"checkbox\" className=\"drawer-toggle\" />\r\n            <PageContent/>\r\n            <LeftSidebar />\r\n        </div>\r\n\r\n        { /* Right drawer - containing secondary content like notifications list etc.. */ }\r\n        <RightSidebar />\r\n\r\n\r\n        {/** Notification layout container */}\r\n        <NotificationContainer />\r\n\r\n      {/* Modal layout container */}\r\n        <ModalLayout />\r\n\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Layout","\r\nmodule.exports = Object.freeze({\r\n    MODAL_BODY_TYPES: {\r\n        USER_DETAIL: \"USER_DETAIL\",\r\n        LEAD_ADD_NEW: \"LEAD_ADD_NEW\",\r\n        CONFIRMATION: \"CONFIRMATION\",\r\n        DEFAULT: \"\",\r\n    },\r\n\r\n    RIGHT_DRAWER_TYPES: {\r\n        NOTIFICATION: \"NOTIFICATION\",\r\n        CALENDAR_EVENTS: \"CALENDAR_EVENTS\",\r\n    },\r\n\r\n    CONFIRMATION_MODAL_CLOSE_TYPES: {\r\n        LEAD_DELETE: \"LEAD_DELETE\",\r\n    },\r\n});"],"names":["labelTitle","labelStyle","type","containerStyle","defaultValue","placeholder","updateFormValue","updateType","value","setValue","useState","className","onChange","e","updateInputValue","val","target","styleClass","children","useDispatch","noOfNotifications","pageTitle","useSelector","state","header","currentTheme","setCurrentTheme","localStorage","getItem","useEffect","themeChange","window","matchMedia","matches","htmlFor","Bars3Icon","SunIcon","MoonIcon","tabIndex","src","alt","onClick","clear","location","href","Dashboard","lazy","Welcome","Charts","path","component","Page404","mainContentRef","useRef","current","scroll","top","behavior","ref","Suspense","fallback","SuspenseContent","routes","route","key","exact","element","submenu","name","icon","useLocation","isExpanded","setIsExpanded","filter","m","pathname","ChevronDownIcon","map","k","to","Leads","ForgotPassword","iconClasses","Squares2X2Icon","InboxArrowDownIcon","ChartBarIcon","Cog6ToothIcon","KeyIcon","DocumentIcon","ArrowLeftOnRectangleIcon","console","log","document","getElementById","click","XMarkIcon","end","isActive","isOpen","bodyType","extraObject","rightDrawer","dispatch","close","closeRightDrawer","INITIAL_LEAD_OBJ","first_name","last_name","email","closeModal","loading","setLoading","errorMessage","setErrorMessage","leadObj","setLeadObj","InputText","ErrorText","trim","newLeadObj","addNewLead","showNotification","message","status","saveNewLead","_id","index","async","CONFIRMATION_MODAL_CLOSE_TYPES","deleteLead","proceedWithYes","size","title","modal","MODAL_BODY_TYPES","newNotificationMessage","newNotificationStatus","NotificationManager","removeNotificationMessage","id","module","exports","Object","freeze","USER_DETAIL","LEAD_ADD_NEW","CONFIRMATION","DEFAULT","RIGHT_DRAWER_TYPES","NOTIFICATION","CALENDAR_EVENTS","LEAD_DELETE"],"sourceRoot":""}