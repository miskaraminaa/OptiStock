{"version":3,"file":"static/js/553.4bcb07a0.chunk.js","mappings":"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","sources":["components/Typography/Subtitle.js","components/Cards/TitleCard.js","pages/protected/Controle.js"],"sourcesContent":[" function Subtitle({styleClass, children}){\r\n    return(\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","import Subtitle from \"../Typography/Subtitle\"\r\n\r\n  \r\n  function TitleCard({title, children, topMargin, TopSideButtons}){\r\n      return(\r\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\r\n\r\n            {/* Title for Card */}\r\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n                {title}\r\n\r\n                {/* Top side button, show only if present */}\r\n                {\r\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n                }\r\n              </Subtitle>\r\n              \r\n              <div className=\"divider mt-2\"></div>\r\n          \r\n              {/** Card Body */}\r\n              <div className='h-full w-full pb-6 bg-base-100'>\r\n                  {children}\r\n              </div>\r\n          </div>\r\n          \r\n      )\r\n  }\r\n  \r\n  \r\n  export default TitleCard","import React, { useState, useEffect } from \"react\"; import { useDispatch } from 'react-redux';\r\nimport { motion } from 'framer-motion';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport { FaTrash } from 'react-icons/fa';\r\nimport moment from 'moment';\r\nimport * as XLSX from 'xlsx';\r\nimport { setPageTitle } from '../../features/common/headerSlice';\r\nimport TitleCard from '../../components/Cards/TitleCard';\r\n\r\nconst Controle = () => {\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        nOt: '',\r\n        bs: '',\r\n        typeSortie: '',\r\n    });\r\n    const [selectedItems, setSelectedItems] = useState(new Set());\r\n    const [isLoadingData, setIsLoadingData] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [showAddForm, setShowAddForm] = useState(false);\r\n    const [newItem, setNewItem] = useState({\r\n        type_sortie: 'OT',\r\n        nature_sortie: 'normal',\r\n        magasin: 'Magasin',\r\n        articles: [],\r\n    });\r\n    const [mb51Articles, setMb51Articles] = useState([]);\r\n    const BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n    const COLUMNS = [\r\n        { header: 'N° OT', key: 'n_ot' },\r\n        { header: 'N° BS', key: 'bs' },\r\n        { header: 'N° LE', key: 'le' },\r\n        { header: 'N° STO', key: 'commande_achat' },\r\n        { header: 'Nature de sortie', key: 'nature_sortie' },\r\n        { header: 'Type de sortie', key: 'type_sortie' },\r\n        { header: 'N° Réservation', key: 'n_reservation' },\r\n        { header: 'Magasin', key: 'magasin' },\r\n        { header: 'Local', key: 'local' },\r\n        { header: 'Demandeur', key: 'demandeur' },\r\n        { header: 'Préparateur', key: 'preparateur' },\r\n        { header: 'Responsable local', key: 'responsable_local' },\r\n        { header: 'Articles', key: 'articles' },\r\n    ];\r\n\r\n    const STOCK_COLUMNS = [\r\n        { header: 'Article', key: 'article' },\r\n        { header: 'Désignation', key: 'designation_article' },\r\n        { header: 'Stock Initial', key: 'stock_initial' },\r\n        { header: 'Sorties', key: 'sorties' },\r\n        { header: 'Entrées', key: 'entrees' },\r\n        { header: 'Quantité Contrôle', key: 'stock_quantite_controle' },\r\n        { header: 'Quantité IAM', key: 'quantite_iam' },\r\n        { header: 'Validation', key: 'validation' },\r\n    ];\r\n\r\n    const TYPE_SORTIE_OPTIONS = [\r\n        { value: 'OT', label: 'OT' },\r\n        { value: 'BS', label: 'BS' },\r\n        { value: 'LE', label: 'LE' },\r\n        { value: 'STO', label: 'STO' },\r\n    ];\r\n\r\n    const NATURE_SORTIE_OPTIONS = [\r\n        { value: 'urgent', label: 'Urgent' },\r\n        { value: 'normal', label: 'Normal' },\r\n        { value: 'session', label: 'Session' },\r\n    ];\r\n\r\n    const MAGASIN_OPTIONS = [\r\n        { value: 'Magasin', label: 'Magasin' },\r\n        { value: 'Magasin EPI', label: 'Magasin EPI' },\r\n        { value: 'Parc Exterieur', label: 'Parc Exterieur' },\r\n    ];\r\n\r\n    const LOCAL_OPTIONS = {\r\n        Magasin: [\r\n            { value: 'MSLE', label: 'MSLE/MSLT - BOUZIT LAHSSAN', responsable: 'BOUZIT LAHSSAN' },\r\n            { value: 'MSLV', label: 'MSLV/MSRL/MSGP/MSLL/MSPC/DSED - BENDADA MOHAMMED', responsable: 'BENDADA MOHAMMED' },\r\n        ],\r\n        'Magasin EPI': [{ value: 'MSFE', label: 'MSFE - BOUALLAK NOURDINE', responsable: 'BOUALLAK NOURDINE' }],\r\n        'Parc Exterieur': [{ value: 'PEXT', label: 'PEXT/el kouhail abdelmajid', responsable: 'el kouhail abdelmajid' }],\r\n    };\r\n\r\n    const RESPONSABLE_MAGASIN = {\r\n        Magasin: 'JAMAL RHENNAOUI',\r\n        'Magasin EPI': 'ELBAHI AMINE',\r\n        'Parc Exterieur': 'SARGALI YOUSSEF',\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title: 'Contrôle Livraison' }));\r\n    }, [dispatch]);\r\n\r\n    const fetchMb51Articles = async () => {\r\n        try {\r\n            const res = await fetch(`${BASE_URL}/controle/mb51/articles`);\r\n            if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`);\r\n            const articles = await res.json();\r\n            setMb51Articles(articles);\r\n        } catch (err) {\r\n            setError(`Échec du chargement des articles : ${err.message}`);\r\n            console.error('[Controle] Erreur articles:', err);\r\n        }\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        setIsLoadingData(true);\r\n        setError(null);\r\n        try {\r\n            const res = await fetch(`${BASE_URL}/controle/data`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(filters),\r\n            });\r\n            if (!res.ok) throw new Error(`Erreur HTTP ! statut : ${res.status}`);\r\n            const data = await res.json();\r\n            const normalizedData = data.map((item) => ({\r\n                ...item,\r\n                n_ot: item.n_ot ? item.n_ot.trim().toLowerCase() : '',\r\n                bs: item.bs ? item.bs.trim().toLowerCase() : '',\r\n                le: item.le ? item.le.trim().toLowerCase() : '',\r\n                commande_achat: item.commande_achat ? item.commande_achat.trim() : '',\r\n                nature_sortie: item.nature_sortie ? item.nature_sortie.trim() : '',\r\n                type_sortie: item.type_sortie ? item.type_sortie.trim().toLowerCase() : '',\r\n                n_reservation: item.n_reservation ? item.n_reservation.trim() : '',\r\n                magasin: item.magasin ? item.magasin.trim() : '',\r\n                local: item.local ? item.local.trim() : '',\r\n                demandeur: item.demandeur ? item.demandeur.trim() : '',\r\n                preparateur: item.preparateur ? item.preparateur.trim() : '',\r\n                responsable_local: item.responsable_local ? item.responsable_local.trim() : '',\r\n                articles: typeof item.articles === 'string' ? JSON.parse(item.articles || '[]') : item.articles || [],\r\n            }));\r\n            setData(normalizedData);\r\n            applyFilters(normalizedData);\r\n        } catch (err) {\r\n            setError(`Échec du chargement des données : ${err.message}`);\r\n            console.error('[Controle] Erreur data:', err);\r\n        } finally {\r\n            setIsLoadingData(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        fetchMb51Articles();\r\n    }, [filters]);\r\n\r\n    const applyFilters = (data) => {\r\n        let filtered = [...data];\r\n        if (filters.nOt) {\r\n            filtered = filtered.filter((item) => item.n_ot?.toLowerCase().includes(filters.nOt.toLowerCase()));\r\n        }\r\n        if (filters.bs) {\r\n            filtered = filtered.filter((item) => item.bs?.toLowerCase().includes(filters.bs.toLowerCase()));\r\n        }\r\n        if (filters.typeSortie) {\r\n            filtered = filtered.filter((item) => item.type_sortie?.toLowerCase() === filters.typeSortie.toLowerCase());\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const toggleItem = (index) => {\r\n        const newSelected = new Set(selectedItems);\r\n        if (newSelected.has(index)) {\r\n            newSelected.delete(index);\r\n        } else {\r\n            newSelected.add(index);\r\n        }\r\n        setSelectedItems(newSelected);\r\n    };\r\n\r\n    const addArticle = (article, designation_article) => {\r\n        if (!newItem.articles.some((a) => a.article === article)) {\r\n            setNewItem((prev) => ({\r\n                ...prev,\r\n                articles: [...prev.articles, { article, designation_article, quantity: 0, quantite_mise_a_jour: 0 }],\r\n            }));\r\n        }\r\n    };\r\n\r\n    const updateQuantity = (index, value) => {\r\n        const updatedArticles = [...newItem.articles];\r\n        const quantity = parseFloat(value) || 0;\r\n        if (quantity < 0) return;\r\n        const mb51Article = mb51Articles.find((a) => a.article === updatedArticles[index].article);\r\n        if (mb51Article && quantity > mb51Article.stock_quantite_controle) {\r\n            setError(`Quantité pour ${updatedArticles[index].article} dépasse la quantité contrôle (${mb51Article.stock_quantite_controle})`);\r\n            return;\r\n        }\r\n        updatedArticles[index].quantity = quantity;\r\n        updatedArticles[index].quantite_mise_a_jour = (mb51Article?.stock_quantite_controle || 0) - quantity;\r\n        setNewItem((prev) => ({ ...prev, articles: updatedArticles }));\r\n    };\r\n\r\n    const removeArticle = (index) => {\r\n        const updatedArticles = [...newItem.articles];\r\n        updatedArticles.splice(index, 1);\r\n        setNewItem((prev) => ({ ...prev, articles: updatedArticles }));\r\n    };\r\n\r\n    const updateItems = async (action) => {\r\n        try {\r\n            if (action === 'add' && newItem) {\r\n                if (!newItem.articles || newItem.articles.length === 0) {\r\n                    throw new Error('Au moins un article doit être fourni.');\r\n                }\r\n                for (const article of newItem.articles) {\r\n                    if (!article.article || article.quantity <= 0) {\r\n                        throw new Error(`L'article ${article.article || 'inconnu'} doit avoir une quantité positive.`);\r\n                    }\r\n                    const mb51Article = mb51Articles.find((a) => a.article === article.article);\r\n                    if (mb51Article && article.quantity > mb51Article.stock_quantite_controle) {\r\n                        throw new Error(`Quantité pour ${article.article} dépasse la quantité contrôle (${mb51Article.stock_quantite_controle}).`);\r\n                    }\r\n                }\r\n\r\n                const selectedLocal = LOCAL_OPTIONS[newItem.magasin]?.find((loc) => loc.value === newItem.local);\r\n                let { n_ot = '', bs = '', le = '', commande_achat = '' } = newItem;\r\n\r\n                if (newItem.type_sortie === 'OT' && (!n_ot || n_ot.trim() === '')) {\r\n                    n_ot = `OT${moment().format('YYYYMMDDHHmmss')}`;\r\n                }\r\n                if (newItem.type_sortie === 'BS' && (!bs || bs.trim() === '')) {\r\n                    bs = `BS${moment().format('YYYYMMDDHHmmss')}`;\r\n                }\r\n                if (newItem.type_sortie === 'LE' && (!le || le.trim() === '')) {\r\n                    le = `LE${moment().format('YYYYMMDDHHmmss')}`;\r\n                }\r\n                if (newItem.type_sortie === 'STO' && (!commande_achat || commande_achat.trim() === '')) {\r\n                    commande_achat = `STO${moment().format('YYYYMMDDHHmmss')}`;\r\n                }\r\n\r\n                if (newItem.type_sortie === 'OT' && !n_ot) throw new Error('Le N° OT est requis pour un type de sortie OT.');\r\n                if (newItem.type_sortie === 'BS' && !bs) throw new Error('Le BS est requis pour un type de sortie BS.');\r\n                if (newItem.type_sortie === 'LE' && !le) throw new Error('Le LE est requis pour un type de sortie LE.');\r\n                if (newItem.type_sortie === 'STO' && !commande_achat) throw new Error(\"La commande d'achat est requise pour un type de sortie STO.\");\r\n\r\n                const itemToAdd = {\r\n                    ...newItem,\r\n                    n_ot,\r\n                    bs,\r\n                    le,\r\n                    commande_achat,\r\n                    responsable_local: selectedLocal?.responsable || newItem.responsable_local || '',\r\n                    magasin: newItem.magasin || 'Magasin',\r\n                    articles: newItem.articles.map((a) => ({\r\n                        article: a.article,\r\n                        designation_article: a.designation_article,\r\n                        quantity: parseFloat(a.quantity) || 0,\r\n                        quantite_mise_a_jour: a.quantite_mise_a_jour || 0,\r\n                    })),\r\n                };\r\n                const res = await fetch(`${BASE_URL}/controle/update`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ action: 'add', data: itemToAdd }),\r\n                });\r\n                if (!res.ok) throw new Error((await res.json()).error || \"Erreur lors de l'ajout\");\r\n                setShowAddForm(false);\r\n                setNewItem({ type_sortie: 'OT', nature_sortie: 'normal', magasin: 'Magasin', articles: [] });\r\n                await fetchData();\r\n            } else if (action === 'remove' && selectedItems.size > 0) {\r\n                const nOtsToRemove = Array.from(selectedItems).map((index) => filteredData[index].n_ot);\r\n                const res = await fetch(`${BASE_URL}/controle/update`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ action: 'remove', data: nOtsToRemove }),\r\n                });\r\n                if (!res.ok) throw new Error((await res.json()).error || 'Erreur lors de la suppression');\r\n                setSelectedItems(new Set());\r\n                await fetchData();\r\n            }\r\n        } catch (err) {\r\n            setError(`Échec de la mise à jour : ${err.message}`);\r\n            console.error('[Controle] Erreur update:', err);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (index) => {\r\n        try {\r\n            const nOtToRemove = filteredData[index].n_ot;\r\n            const res = await fetch(`${BASE_URL}/controle/update`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ action: 'remove', data: [nOtToRemove] }),\r\n            });\r\n            if (!res.ok) throw new Error((await res.json()).error || 'Erreur lors de la suppression');\r\n            setSelectedItems(new Set());\r\n            await fetchData();\r\n        } catch (err) {\r\n            setError(`Échec de la suppression : ${err.message}`);\r\n            console.error('[Controle] Erreur delete:', err);\r\n        }\r\n    };\r\n\r\n    const exportToExcel = () => {\r\n        const livraisonsSheet = XLSX.utils.json_to_sheet(\r\n            filteredData.map((row) => ({\r\n                ...row,\r\n                articles: Array.isArray(row.articles) ? row.articles.map((a) => `${a.article} (${a.quantity})`).join(', ') : '',\r\n            }))\r\n        );\r\n        const stockSheet = XLSX.utils.json_to_sheet(mb51Articles);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, livraisonsSheet, 'Controle Livraisons');\r\n        XLSX.utils.book_append_sheet(wb, stockSheet, 'Stock Control');\r\n        XLSX.writeFile(wb, `controle_livraison_${moment().format('YYYYMMDD_HHmmss')}.xlsx`);\r\n    };\r\n\r\n    const handlePrint = () => {\r\n        const printWindow = window.open('', '_blank');\r\n        const printContent = `\r\n      <html>\r\n        <head>\r\n          <title>Contrôle Livraison - ${moment().format('DD/MM/YYYY HH:mm')}</title>\r\n          <style>\r\n            @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');\r\n            body { font-family: 'Inter', sans-serif; margin: 20px; color: #1f2937; }\r\n            h1 { text-align: center; font-size: 1.5rem; font-weight: 700; margin-bottom: 0.5rem; }\r\n            h2 { font-size: 1.125rem; font-weight: 600; margin: 1.5rem 0 0.5rem; }\r\n            p { text-align: center; font-size: 0.875rem; color: #6b7280; margin-bottom: 1.25rem; }\r\n            table { width: 100%; border-collapse: collapse; font-size: 0.75rem; margin-bottom: 1.25rem; }\r\n            th, td { border: 1px solid #e5e7eb; padding: 0.5rem; text-align: left; }\r\n            th { background-color: #f3f4f6; font-weight: 600; text-transform: uppercase; }\r\n            tr:nth-child(even) { background-color: #f9fafb; }\r\n            .no-data { text-align: center; padding: 1.25rem; font-style: italic; color: #6b7280; }\r\n            .validation-non-valide { color: #dc2626; font-weight: 600; }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <h1>Contrôle Livraison</h1>\r\n          <p>Imprimé le ${moment().format('DD/MM/YYYY HH:mm')}</p>\r\n          <h2>Livraisons</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>${COLUMNS.map((col) => `<th>${col.header}</th>`).join('')}</tr>\r\n            </thead>\r\n            <tbody>\r\n              ${filteredData.length === 0\r\n                ? `<tr><td colspan=\"${COLUMNS.length}\" class=\"no-data\">Aucune donnée disponible pour les filtres sélectionnés.</td></tr>`\r\n                : filteredData.map(\r\n                    (row) => `\r\n                      <tr>\r\n                        ${COLUMNS.map(\r\n                        (col) => `\r\n                            <td>\r\n                              ${col.key === 'articles' && row[col.key]\r\n                                ? Array.isArray(row.articles)\r\n                                    ? row.articles.map((a) => `${a.article} (${a.quantity})`).join(', ')\r\n                                    : ''\r\n                                : row[col.key] !== undefined && row[col.key] !== null\r\n                                    ? row[col.key]\r\n                                    : ''}\r\n                            </td>\r\n                          `\r\n                    ).join('')}\r\n                      </tr>\r\n                    `\r\n                ).join('')}\r\n            </tbody>\r\n          </table>\r\n          <h2>Stock Control</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>${STOCK_COLUMNS.map((col) => `<th>${col.header}</th>`).join('')}</tr>\r\n            </thead>\r\n            <tbody>\r\n              ${mb51Articles.length === 0\r\n                ? `<tr><td colspan=\"${STOCK_COLUMNS.length}\" class=\"no-data\">Aucun article disponible.</td></tr>`\r\n                : mb51Articles.map(\r\n                    (row) => `\r\n                      <tr>\r\n                        ${STOCK_COLUMNS.map(\r\n                        (col) => `\r\n                            <td class=\"${col.key === 'validation' && row[col.key] !== 'Validé' ? 'validation-non-valide' : ''}\">\r\n                              ${row[col.key] !== undefined && row[col.key] !== null ? row[col.key] : ''}\r\n                            </td>\r\n                          `\r\n                    ).join('')}\r\n                      </tr>\r\n                    `\r\n                ).join('')}\r\n            </tbody>\r\n          </table>\r\n        </body>\r\n      </html>\r\n    `;\r\n        printWindow.document.write(printContent);\r\n        printWindow.document.close();\r\n        printWindow.print();\r\n    };\r\n\r\n    return (\r\n        <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5 }}\r\n            className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-6\"\r\n        >\r\n            <TitleCard title=\"Contrôle Livraison\">\r\n                <div className=\"space-y-6\">\r\n                    <div className=\"flex flex-wrap gap-4\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"N° OT\"\r\n                            value={filters.nOt}\r\n                            onChange={(e) => setFilters({ ...filters, nOt: e.target.value })}\r\n                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full sm:w-48\"\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"N° BS\"\r\n                            value={filters.bs}\r\n                            onChange={(e) => setFilters({ ...filters, bs: e.target.value })}\r\n                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full sm:w-48\"\r\n                        />\r\n                        <select\r\n                            value={filters.typeSortie}\r\n                            onChange={(e) => setFilters({ ...filters, typeSortie: e.target.value })}\r\n                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full sm:w-48\"\r\n                        >\r\n                            <option value=\"\">Tous les types</option>\r\n                            {TYPE_SORTIE_OPTIONS.map((option) => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    {isLoadingData || error ? (\r\n                        <div className=\"flex items-center gap-2 text-sm\">\r\n                            {isLoadingData && <ClipLoader color=\"#3b82f6\" size={20} />}\r\n                            {isLoadingData && <span className=\"text-gray-600\">Chargement des données...</span>}\r\n                            {error && <span className=\"text-red-600\">⚠️ {error}</span>}\r\n                        </div>\r\n                    ) : null}\r\n                    <div className=\"flex flex-wrap gap-4\">\r\n                        <button\r\n                            onClick={() => setShowAddForm(!showAddForm)}\r\n                            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg shadow hover:bg-blue-700 transition-all duration-200 text-sm font-medium\"\r\n                            disabled={isLoadingData}\r\n                        >\r\n                            {showAddForm ? 'Annuler' : 'Ajouter'}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => updateItems('remove')}\r\n                            className=\"px-4 py-2 bg-red-600 text-white rounded-lg shadow hover:bg-red-700 transition-all duration-200 text-sm font-medium\"\r\n                            disabled={selectedItems.size === 0 || isLoadingData}\r\n                        >\r\n                            Retirer\r\n                        </button>\r\n                        <button\r\n                            onClick={exportToExcel}\r\n                            className=\"px-4 py-2 bg-green-600 text-white rounded-lg shadow hover:bg-green-700 transition-all duration-200 text-sm font-medium\"\r\n                            disabled={isLoadingData}\r\n                        >\r\n                            Exporter Excel\r\n                        </button>\r\n                        <button\r\n                            onClick={handlePrint}\r\n                            className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg shadow hover:bg-yellow-700 transition-all duration-200 text-sm font-medium\"\r\n                            disabled={isLoadingData}\r\n                        >\r\n                            Imprimer\r\n                        </button>\r\n                    </div>\r\n                    {showAddForm && (\r\n                        <motion.div\r\n                            initial={{ opacity: 0, height: 0 }}\r\n                            animate={{ opacity: 1, height: 'auto' }}\r\n                            transition={{ duration: 0.3 }}\r\n                            className=\"p-6 bg-white shadow-lg rounded-lg\"\r\n                        >\r\n                            <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Ajouter une nouvelle livraison</h3>\r\n                            <form\r\n                                onSubmit={(e) => {\r\n                                    e.preventDefault();\r\n                                    updateItems('add');\r\n                                }}\r\n                                className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\"\r\n                            >\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Type de sortie</label>\r\n                                    <select\r\n                                        value={newItem.type_sortie}\r\n                                        onChange={(e) =>\r\n                                            setNewItem({ ...newItem, type_sortie: e.target.value, n_ot: '', bs: '', le: '', commande_achat: '' })\r\n                                        }\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                    >\r\n                                        {TYPE_SORTIE_OPTIONS.map((option) => (\r\n                                            <option key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                {newItem.type_sortie === 'OT' && (\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">N° OT</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"N° OT\"\r\n                                            value={newItem.n_ot || ''}\r\n                                            onChange={(e) => setNewItem({ ...newItem, n_ot: e.target.value })}\r\n                                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                                {newItem.type_sortie === 'BS' && (\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">N° BS</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"N° BS\"\r\n                                            value={newItem.bs || ''}\r\n                                            onChange={(e) => setNewItem({ ...newItem, bs: e.target.value })}\r\n                                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                                {newItem.type_sortie === 'LE' && (\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">N° LE</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"N° LE\"\r\n                                            value={newItem.le || ''}\r\n                                            onChange={(e) => setNewItem({ ...newItem, le: e.target.value })}\r\n                                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                                {newItem.type_sortie === 'STO' && (\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">N° STO</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"N° STO\"\r\n                                            value={newItem.commande_achat || ''}\r\n                                            onChange={(e) => setNewItem({ ...newItem, commande_achat: e.target.value })}\r\n                                            className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Nature de sortie</label>\r\n                                    <select\r\n                                        value={newItem.nature_sortie}\r\n                                        onChange={(e) => setNewItem({ ...newItem, nature_sortie: e.target.value })}\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                    >\r\n                                        {NATURE_SORTIE_OPTIONS.map((option) => (\r\n                                            <option key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">N° Réservation</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"N° Réservation\"\r\n                                        value={newItem.n_reservation || ''}\r\n                                        onChange={(e) => setNewItem({ ...newItem, n_reservation: e.target.value })}\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Magasin</label>\r\n                                    <select\r\n                                        value={newItem.magasin}\r\n                                        onChange={(e) => setNewItem({ ...newItem, magasin: e.target.value, local: '', responsable_local: '' })}\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                    >\r\n                                        {MAGASIN_OPTIONS.map((option) => (\r\n                                            <option key={option.value} value={option.value}>\r\n                                                {option.label} - {RESPONSABLE_MAGASIN[option.value]}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Local</label>\r\n                                    <select\r\n                                        value={newItem.local}\r\n                                        onChange={(e) => {\r\n                                            const selectedLocal = LOCAL_OPTIONS[newItem.magasin]?.find((loc) => loc.value === e.target.value);\r\n                                            setNewItem({\r\n                                                ...newItem,\r\n                                                local: e.target.value,\r\n                                                responsable_local: selectedLocal?.responsable || '',\r\n                                            });\r\n                                        }}\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                        disabled={!newItem.magasin}\r\n                                    >\r\n                                        <option value=\"\">Sélectionner un local</option>\r\n                                        {newItem.magasin &&\r\n                                            LOCAL_OPTIONS[newItem.magasin]?.map((option) => (\r\n                                                <option key={option.value} value={option.value}>\r\n                                                    {option.label}\r\n                                                </option>\r\n                                            ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Demandeur</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Demandeur\"\r\n                                        value={newItem.demandeur || ''}\r\n                                        onChange={(e) => setNewItem({ ...newItem, demandeur: e.target.value })}\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Préparateur</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Préparateur\"\r\n                                        value={newItem.preparateur || ''}\r\n                                        onChange={(e) => setNewItem({ ...newItem, preparateur: e.target.value })}\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Responsable local</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Responsable local\"\r\n                                        value={newItem.responsable_local || ''}\r\n                                        readOnly\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm bg-gray-100 text-sm w-full\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-span-1 sm:col-span-2\">\r\n                                    <h4 className=\"text-md font-semibold text-gray-800 mb-2\">Ajouter des articles</h4>\r\n                                    <select\r\n                                        onChange={(e) => {\r\n                                            const [article, designation_article] = e.target.value.split(' - ');\r\n                                            if (article && designation_article) {\r\n                                                addArticle(article, designation_article);\r\n                                            }\r\n                                            e.target.value = '';\r\n                                        }}\r\n                                        className=\"p-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-full mb-2\"\r\n                                        disabled={mb51Articles.length === 0}\r\n                                    >\r\n                                        <option value=\"\">Sélectionner un article</option>\r\n                                        {mb51Articles.length > 0 ? (\r\n                                            [...new Set(mb51Articles.map((a) => a.article))].map((article) => {\r\n                                                const mb51Article = mb51Articles.find((a) => a.article === article);\r\n                                                return (\r\n                                                    <option key={article} value={`${article} - ${mb51Article.designation_article}`}>\r\n                                                        {article} - {mb51Article.designation_article} (Quantité Contrôle: {mb51Article.stock_quantite_controle || 0})\r\n                                                    </option>\r\n                                                );\r\n                                            })\r\n                                        ) : (\r\n                                            <option disabled>Aucun article disponible</option>\r\n                                        )}\r\n                                    </select>\r\n                                    {newItem.articles.length > 0 && (\r\n                                        <div className=\"mt-2 overflow-x-auto\">\r\n                                            <table className=\"w-full text-sm border-collapse bg-white shadow-lg rounded-lg\">\r\n                                                <thead>\r\n                                                    <tr className=\"bg-gray-100\">\r\n                                                        <th className=\"border border-gray-200 p-2 text-left text-gray-700\">Code</th>\r\n                                                        <th className=\"border border-gray-200 p-2 text-left text-gray-700\">Désignation</th>\r\n                                                        <th className=\"border border-gray-200 p-2 text-left text-gray-700\">Quantité Contrôle</th>\r\n                                                        <th className=\"border border-gray-200 p-2 text-left text-gray-700\">Quantité</th>\r\n                                                        <th className=\"border border-gray-200 p-2 text-left text-gray-700\">Quantité Mise à Jour</th>\r\n                                                        <th className=\"border border-gray-200 p-2 text-left text-gray-700\">Actions</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {newItem.articles.map((article, index) => {\r\n                                                        const mb51Article = mb51Articles.find((a) => a.article === article.article);\r\n                                                        return (\r\n                                                            <tr key={article.article} className=\"hover:bg-gray-50\">\r\n                                                                <td className=\"border border-gray-200 p-2\">{article.article}</td>\r\n                                                                <td className=\"border border-gray-200 p-2\">{article.designation_article}</td>\r\n                                                                <td className=\"border border-gray-200 p-2\">{mb51Article?.stock_quantite_controle || 0}</td>\r\n                                                                <td className=\"border border-gray-200 p-2\">\r\n                                                                    <input\r\n                                                                        type=\"number\"\r\n                                                                        min=\"0\"\r\n                                                                        step=\"1\"\r\n                                                                        value={article.quantity}\r\n                                                                        onChange={(e) => updateQuantity(index, e.target.value)}\r\n                                                                        className=\"p-1.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-20\"\r\n                                                                        placeholder=\"Quantité\"\r\n                                                                    />\r\n                                                                </td>\r\n                                                                <td className=\"border border-gray-200 p-2\">{article.quantite_mise_a_jour !== undefined ? article.quantite_mise_a_jour : 0}</td>\r\n                                                                <td className=\"border border-gray-200 p-2\">\r\n                                                                    <button\r\n                                                                        type=\"button\"\r\n                                                                        onClick={() => removeArticle(index)}\r\n                                                                        className=\"text-red-600 hover:text-red-700 transition-colors duration-200\"\r\n                                                                    >\r\n                                                                        <FaTrash className=\"h-4 w-4\" />\r\n                                                                    </button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        );\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    )}\r\n                                    {newItem.articles.length === 0 && <p className=\"text-gray-600 text-sm italic\">Aucun article sélectionné.</p>}\r\n                                </div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"col-span-1 sm:col-span-2 px-4 py-2 bg-blue-600 text-white rounded-lg shadow hover:bg-blue-700 transition-all duration-200 text-sm font-medium\"\r\n                                    disabled={isLoadingData || newItem.articles.length === 0}\r\n                                >\r\n                                    Ajouter la livraison\r\n                                </button>\r\n                            </form>\r\n                        </motion.div>\r\n                    )}\r\n                    <div className=\"mt-6\">\r\n                        <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">Stock Control</h3>\r\n                        <div className=\"overflow-x-auto bg-white shadow-lg rounded-lg\">\r\n                            <table className=\"w-full text-sm border-collapse\">\r\n                                <thead>\r\n                                    <tr className=\"bg-gray-100\">\r\n                                        {STOCK_COLUMNS.map((col) => (\r\n                                            <th key={col.key} className=\"border border-gray-200 p-2 text-left text-gray-700\">\r\n                                                {col.header}\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {mb51Articles.length === 0 ? (\r\n                                        <tr>\r\n                                            <td colSpan={STOCK_COLUMNS.length} className=\"border border-gray-200 p-2 text-center text-gray-600\">\r\n                                                Aucun article disponible.\r\n                                            </td>\r\n                                        </tr>\r\n                                    ) : (\r\n                                        mb51Articles.map((row, index) => (\r\n                                            <tr key={index} className=\"hover:bg-gray-50\">\r\n                                                {STOCK_COLUMNS.map((col) => (\r\n                                                    <td\r\n                                                        key={col.key}\r\n                                                        className={`border border-gray-200 p-2 ${col.key === 'validation' && row[col.key] !== 'Validé' ? 'text-red-600 font-semibold' : ''}`}\r\n                                                    >\r\n                                                        {row[col.key] !== undefined && row[col.key] !== null ? row[col.key] : ''}\r\n                                                    </td>\r\n                                                ))}\r\n                                            </tr>\r\n                                        ))\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-6\">\r\n                        <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">Livraisons</h3>\r\n                        <div className=\"overflow-x-auto bg-white shadow-lg rounded-lg\">\r\n                            <table className=\"w-full text-sm border-collapse\">\r\n                                <thead>\r\n                                    <tr className=\"bg-gray-100\">\r\n                                        <th className=\"border border-gray-200 p-2\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                onChange={(e) => setSelectedItems(e.target.checked ? new Set(filteredData.map((_, i) => i)) : new Set())}\r\n                                                disabled={isLoadingData}\r\n                                            />\r\n                                        </th>\r\n                                        {COLUMNS.map((col) => (\r\n                                            <th key={col.key} className=\"border border-gray-200 p-2 text-left text-gray-700\">\r\n                                                {col.header}\r\n                                            </th>\r\n                                        ))}\r\n                                        <th className=\"border border-gray-200 p-2 text-left text-gray-700\">Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {filteredData.length === 0 ? (\r\n                                        <tr>\r\n                                            <td colSpan={COLUMNS.length + 2} className=\"border border-gray-200 p-2 text-center text-gray-600\">\r\n                                                Aucune donnée disponible pour les filtres sélectionnés.\r\n                                            </td>\r\n                                        </tr>\r\n                                    ) : (\r\n                                        filteredData.map((row, index) => (\r\n                                            <tr key={index} className={`${selectedItems.has(index) ? 'bg-gray-50' : ''} hover:bg-gray-50`}>\r\n                                                <td className=\"border border-gray-200 p-2\">\r\n                                                    <input\r\n                                                        type=\"checkbox\"\r\n                                                        checked={selectedItems.has(index)}\r\n                                                        onChange={() => toggleItem(index)}\r\n                                                        disabled={isLoadingData}\r\n                                                    />\r\n                                                </td>\r\n                                                {COLUMNS.map((col) => (\r\n                                                    <td key={col.key} className=\"border border-gray-200 p-2\">\r\n                                                        {col.key === 'articles' && row[col.key]\r\n                                                            ? Array.isArray(row.articles)\r\n                                                                ? row.articles.map((a) => `${a.article} (${a.quantity})`).join(', ')\r\n                                                                : ''\r\n                                                            : row[col.key] !== undefined && row[col.key] !== null\r\n                                                                ? row[col.key]\r\n                                                                : ''}\r\n                                                    </td>\r\n                                                ))}\r\n                                                <td className=\"border border-gray-200 p-2\">\r\n                                                    <button\r\n                                                        onClick={() => handleDelete(index)}\r\n                                                        className=\"text-red-600 hover:text-red-700 transition-colors duration-200\"\r\n                                                        disabled={isLoadingData}\r\n                                                    >\r\n                                                        <FaTrash className=\"h-4 w-4\" />\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </TitleCard>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default Controle;"],"names":["styleClass","children","className","title","topMargin","TopSideButtons","dispatch","useDispatch","data","setData","useState","filteredData","setFilteredData","filters","setFilters","nOt","bs","typeSortie","selectedItems","setSelectedItems","Set","isLoadingData","setIsLoadingData","error","setError","showAddForm","setShowAddForm","newItem","setNewItem","type_sortie","nature_sortie","magasin","articles","mb51Articles","setMb51Articles","BASE_URL","process","COLUMNS","header","key","STOCK_COLUMNS","TYPE_SORTIE_OPTIONS","value","label","LOCAL_OPTIONS","Magasin","responsable","RESPONSABLE_MAGASIN","useEffect","setPageTitle","fetchData","async","res","fetch","method","headers","body","JSON","stringify","ok","Error","status","normalizedData","json","map","item","n_ot","trim","toLowerCase","le","commande_achat","n_reservation","local","demandeur","preparateur","responsable_local","parse","applyFilters","err","message","console","fetchMb51Articles","filtered","filter","includes","updateItems","action","length","article","quantity","mb51Article","find","a","stock_quantite_controle","selectedLocal","loc","moment","format","itemToAdd","designation_article","parseFloat","quantite_mise_a_jour","size","nOtsToRemove","Array","from","index","initial","opacity","y","animate","transition","duration","type","placeholder","onChange","e","target","option","color","onClick","disabled","livraisonsSheet","XLSX","row","isArray","join","stockSheet","wb","printWindow","window","open","printContent","col","undefined","document","write","close","print","height","onSubmit","preventDefault","required","readOnly","split","some","prev","addArticle","min","step","updatedArticles","updateQuantity","splice","removeArticle","colSpan","checked","_","i","has","newSelected","delete","add","toggleItem","nOtToRemove","handleDelete"],"sourceRoot":""}