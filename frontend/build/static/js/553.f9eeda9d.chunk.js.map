{"version":3,"file":"static/js/553.f9eeda9d.chunk.js","mappings":"qLAMA,QANC,SAAkB,GAAwB,IAAxB,WAACA,EAAU,SAAEC,GAAS,EACrC,OACI,gBAAKC,UAAS,gCAA2BF,GAAa,SAAEC,GAEhE,ECyBE,QA1BA,SAAmB,GAA8C,IAA9C,MAACE,EAAK,SAAEF,EAAQ,UAAEG,EAAS,eAAEC,GAAe,EAC3D,OACI,iBAAKH,UAAW,0CAA4CE,GAAa,QAAQ,WAG7E,UAAC,EAAQ,CAACJ,WAAYK,EAAiB,eAAiB,GAAG,UACxDF,EAIGE,IAAkB,gBAAKH,UAAU,2BAA0B,SAAEG,QAInE,gBAAKH,UAAU,kBAGf,gBAAKA,UAAU,iCAAgC,SAC1CD,MAKjB,C,2ICnBF,MAirBA,EAjrBiB,MACIK,EAAAA,EAAAA,MAAjB,MACOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,KAC1CG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,CACnCK,IAAK,GACLC,GAAI,GACJC,WAAY,MAETC,EAAeC,IAAoBT,EAAAA,EAAAA,UAAS,IAAIU,MAChDC,EAAeC,IAAoBZ,EAAAA,EAAAA,WAAS,IAC5Ca,EAAOC,IAAYd,EAAAA,EAAAA,UAAS,OAC5Be,EAAaC,IAAkBhB,EAAAA,EAAAA,WAAS,IACxCiB,EAASC,IAAclB,EAAAA,EAAAA,UAAS,CACnCmB,YAAa,KACbC,cAAe,SACfC,QAAS,UACTC,SAAU,MAEPC,EAAcC,IAAmBxB,EAAAA,EAAAA,UAAS,IAE3CyB,EAAWC,wBAEXC,EAAU,CACZ,CAAEC,OAAQ,WAASC,IAAK,QACxB,CAAED,OAAQ,WAASC,IAAK,MACxB,CAAED,OAAQ,WAASC,IAAK,MACxB,CAAED,OAAQ,YAAUC,IAAK,kBACzB,CAAED,OAAQ,mBAAoBC,IAAK,iBACnC,CAAED,OAAQ,iBAAkBC,IAAK,eACjC,CAAED,OAAQ,uBAAkBC,IAAK,iBACjC,CAAED,OAAQ,UAAWC,IAAK,WAC1B,CAAED,OAAQ,QAASC,IAAK,SACxB,CAAED,OAAQ,YAAaC,IAAK,aAC5B,CAAED,OAAQ,iBAAeC,IAAK,eAC9B,CAAED,OAAQ,oBAAqBC,IAAK,qBACpC,CAAED,OAAQ,WAAYC,IAAK,aAGzBC,EAAsB,CACxB,CAAEC,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,MAAOC,MAAO,QAerBC,EAAgB,CAClB,QAAW,CACP,CAAEF,MAAO,OAAQC,MAAO,6BAA8BE,YAAa,kBACnE,CAAEH,MAAO,OAAQC,MAAO,mDAAoDE,YAAa,qBAE7F,cAAe,CACX,CAAEH,MAAO,OAAQC,MAAO,2BAA4BE,YAAa,sBAErE,iBAAkB,CACd,CAAEH,MAAO,OAAQC,MAAO,6BAA8BE,YAAa,2BAIrEC,EAAsB,CACxB,QAAW,kBACX,cAAe,eACf,iBAAkB,oBAgBtBC,EAAAA,EAAAA,YAAU,KACNC,IAdsBC,WACtB,IACI,MAAMC,QAAYC,MAAM,GAAD,OAAIf,EAAQ,4BAEnC,GADAgB,QAAQC,IAAI,kBAAmBH,EAAII,OAAQJ,EAAIK,aAC1CL,EAAIM,GAAI,MAAM,IAAIC,MAAM,uBAAD,OAAwBP,EAAII,SACxD,MAAMrB,QAAiBiB,EAAIQ,OAC3BN,QAAQC,IAAI,oBAAqBpB,GACjCE,EAAgBF,EAGpB,CAFE,MAAO0B,GACLlC,EAAS,yCAAD,OAAuCkC,EAAIC,SACvD,GAKAC,EAAmB,GACpB,CAAC/C,IAEJ,MAAMkC,EAAYC,UACd1B,GAAiB,GACjBE,EAAS,MACT,MAAMqC,EAAG,UAAM1B,EAAQ,kBACjB2B,EAAU,CACZ/C,IAAKF,EAAQE,KAAO,GACpBC,GAAIH,EAAQG,IAAM,GAClBC,WAAYJ,EAAQI,YAAc,IAEtC,IACI,MAAMgC,QAAYC,MAAMW,EAAK,CACzBE,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUL,KAEzB,IAAKb,EAAIM,GAAI,MAAM,IAAIC,MAAM,0BAAD,OAA2BP,EAAII,SAC3D,MACMe,SADanB,EAAIQ,QACKY,KAAIC,IAAI,kBAC7BA,GAAI,IACPC,KAAMD,EAAKC,KAAOD,EAAKC,KAAKC,OAAOC,cAAgB,GACnDzD,GAAIsD,EAAKtD,GAAKsD,EAAKtD,GAAGwD,OAAOC,cAAgB,GAC7CC,GAAIJ,EAAKI,GAAKJ,EAAKI,GAAGF,OAAOC,cAAgB,GAC7CE,eAAgBL,EAAKK,eAAiBL,EAAKK,eAAeH,OAAS,GACnE1C,cAAewC,EAAKxC,cAAgBwC,EAAKxC,cAAc0C,OAAS,GAChE3C,YAAayC,EAAKzC,YAAcyC,EAAKzC,YAAY2C,OAAOC,cAAgB,GACxEG,cAAeN,EAAKM,cAAgBN,EAAKM,cAAcJ,OAAS,GAChEzC,QAASuC,EAAKvC,QAAUuC,EAAKvC,QAAQyC,OAAS,GAC9CK,MAAOP,EAAKO,MAAQP,EAAKO,MAAML,OAAS,GACxCM,UAAWR,EAAKQ,UAAYR,EAAKQ,UAAUN,OAAS,GACpDO,YAAaT,EAAKS,YAAcT,EAAKS,YAAYP,OAAS,GAC1DQ,kBAAmBV,EAAKU,kBAAoBV,EAAKU,kBAAkBR,OAAS,GAC5ExC,SAAmC,kBAAlBsC,EAAKtC,SAAwBkC,KAAKe,MAAMX,EAAKtC,UAAY,MAAQsC,EAAKtC,UAAY,OAEvGvB,EAAQ2D,GACRc,EAAad,EAKjB,CAJE,MAAOV,GACLlC,EAAS,2CAAD,OAAsCkC,EAAIC,SACtD,CAAC,QACGrC,GAAiB,EACrB,GAGE4D,EAAgB1E,IAClB,IAAI2E,EAAW,IAAI3E,GACfK,EAAQE,MACRoE,EAAWA,EAASC,QAAQd,IAAI,aACnB,QADmB,EAC5BA,EAAKC,YAAI,aAAT,EAAWE,cAAcY,SAASxE,EAAQE,IAAI0D,cAAc,KAGhE5D,EAAQG,KACRmE,EAAWA,EAASC,QAAQd,IAAI,aACrB,QADqB,EAC5BA,EAAKtD,UAAE,aAAP,EAASyD,cAAcY,SAASxE,EAAQG,GAAGyD,cAAc,KAG7D5D,EAAQI,aACRkE,EAAWA,EAASC,QAAQd,IAAI,aACZ,QAAhB,EAAAA,EAAKzC,mBAAW,aAAhB,EAAkB4C,iBAAkB5D,EAAQI,WAAWwD,aAAa,KAG5E7D,EAAgBuE,EAAS,EAwCvBG,EAActC,UAChB,IACI,GAAe,QAAXuC,GAAoB5D,EAAS,CAAC,IAAD,EAC7B,MAAM6D,EAA8C,QAAjC,EAAG7C,EAAchB,EAAQI,gBAAQ,aAA9B,EAAgC0D,MAAKC,GAAOA,EAAIjD,QAAUd,EAAQkD,QACxF1B,QAAQC,IAAI,8BAA+BzB,GAE3C,IAAI4C,EAAO5C,EAAQ4C,MAAQ,GACvBvD,EAAKW,EAAQX,IAAM,GACnB0D,EAAK/C,EAAQ+C,IAAM,GACnBC,EAAiBhD,EAAQgD,gBAAkB,GAgB/C,GAd4B,OAAxBhD,EAAQE,aAA0B0C,GAAwB,KAAhBA,EAAKC,SAC/CD,EAAI,YAAQoB,MAASC,OAAO,mBAC5BzC,QAAQC,IAAI,kBAAmBmB,IAEP,OAAxB5C,EAAQE,aAA0Bb,GAAoB,KAAdA,EAAGwD,SAC3CxD,EAAE,YAAQ2E,MAASC,OAAO,oBAEF,OAAxBjE,EAAQE,aAA0B6C,GAAoB,KAAdA,EAAGF,SAC3CE,EAAE,YAAQiB,MAASC,OAAO,oBAEF,QAAxBjE,EAAQE,aAA2B8C,GAA4C,KAA1BA,EAAeH,SACpEG,EAAc,aAASgB,MAASC,OAAO,oBAGf,OAAxBjE,EAAQE,cAAyB0C,EACjC,MAAM,IAAIf,MAAM,qDAEpB,GAA4B,OAAxB7B,EAAQE,cAAyBb,EACjC,MAAM,IAAIwC,MAAM,+CAEpB,GAA4B,OAAxB7B,EAAQE,cAAyB6C,EACjC,MAAM,IAAIlB,MAAM,+CAEpB,GAA4B,QAAxB7B,EAAQE,cAA0B8C,EAClC,MAAM,IAAInB,MAAM,+DAGpB,MAAMqC,GAAS,kBACRlE,GAAO,IACV4C,OACAvD,KACA0D,KACAC,iBACAK,mBAAgC,OAAbQ,QAAa,IAAbA,OAAa,EAAbA,EAAe5C,cAAejB,EAAQqD,mBAAqB,GAC9EjD,QAASJ,EAAQI,SAAW,UAC5BC,SAAUL,EAAQK,SAASqC,KAAIyB,IAAC,CAC5BC,QAASD,EAAEC,QACXC,oBAAqBF,EAAEE,oBACvBC,SAAUH,EAAEG,UAAY,QAGhC9C,QAAQC,IAAI,gBAAiByC,GAC7B,MAAM5C,QAAYC,MAAM,GAAD,OAAIf,EAAQ,oBAAoB,CACnD4B,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEoB,OAAQ,MAAO/E,KAAMqF,MAEhD,IAAK5C,EAAIM,GAAI,MAAM,IAAIC,aAAaP,EAAIQ,QAAQlC,OAAS,0BACzDG,GAAe,GACfE,EAAW,CAAEC,YAAa,KAAMC,cAAe,SAAUC,QAAS,UAAWC,SAAU,WACjFe,GACV,MAAO,GAAe,WAAXwC,GAAuBrE,EAAcgF,KAAO,EAAG,CACtD,MAAMC,EAAeC,MAAMC,KAAKnF,GAAemD,KAAIiC,GAAS3F,EAAa2F,GAAO/B,OAC1EtB,QAAYC,MAAM,GAAD,OAAIf,EAAQ,oBAAoB,CACnD4B,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEoB,OAAQ,SAAU/E,KAAM2F,MAEnD,IAAKlD,EAAIM,GAAI,MAAM,IAAIC,aAAaP,EAAIQ,QAAQlC,OAAS,iCACzDJ,EAAiB,IAAIC,WACf2B,GACV,CAGJ,CAFE,MAAOW,GACLlC,EAAS,mCAAD,OAA8BkC,EAAIC,SAC9C,GAyEJ,OACI,SAAC,IAAS,CAACvD,MAAM,wBAAoB,UACjC,iBAAKD,UAAU,yBAAwB,WACnC,iBAAKA,UAAU,sBAAqB,WAChC,kBACIoG,KAAK,OACLC,YAAY,WACZ/D,MAAO5B,EAAQE,IACf0F,SAAWC,GAAM5F,GAAW,kBAAKD,GAAO,IAAEE,IAAK2F,EAAEC,OAAOlE,SACxDtC,UAAU,wBAEd,kBACIoG,KAAK,OACLC,YAAY,KACZ/D,MAAO5B,EAAQG,GACfyF,SAAWC,GAAM5F,GAAW,kBAAKD,GAAO,IAAEG,GAAI0F,EAAEC,OAAOlE,SACvDtC,UAAU,wBAEd,oBACIsC,MAAO5B,EAAQI,WACfwF,SAAWC,GAAM5F,GAAW,kBAAKD,GAAO,IAAEI,WAAYyF,EAAEC,OAAOlE,SAC/DtC,UAAU,qBAAoB,WAE9B,mBAAQsC,MAAM,GAAE,4BACfD,EAAoB6B,KAAKuC,IACtB,mBAA2BnE,MAAOmE,EAAOnE,MAAM,SAC1CmE,EAAOlE,OADCkE,EAAOnE,gBAM9BlB,GAASF,KACP,iBAAKlB,UAAU,OAAM,UAChBkB,IAAiB,gBAAKlB,UAAU,gBAAe,0CAC/CoB,IAAS,gBAAKpB,UAAU,eAAc,SAAEoB,QAGjD,iBAAKpB,UAAU,sBAAqB,WAChC,mBACI0G,QAAS,IAAMnF,GAAgBD,GAC/BtB,UAAU,uDACV2G,SAAUzF,EAAc,SAEvBI,EAAc,UAAY,aAE/B,mBACIoF,QAAS,IAAMvB,EAAY,UAC3BnF,UAAU,qDACV2G,SAAiC,IAAvB5F,EAAcgF,MAAc7E,EAAc,sBAIxD,mBACIwF,QA3GE,KAClB,MAAME,EAAKC,EAAAA,GAAAA,cAAyBrG,GAC9BsG,EAAKD,EAAAA,GAAAA,WACXA,EAAAA,GAAAA,kBAA6BC,EAAIF,EAAI,uBACrCC,EAAAA,GAAeC,EAAG,sBAAD,OAAwBtB,MAASC,OAAO,mBAAkB,SAAQ,EAwGnEzF,UAAU,yDACV2G,SAAUzF,EAAc,6BAI5B,mBACIwF,QA3GA,KAChB,MAAMK,EAAcC,OAAOC,KAAK,GAAI,UAC9BC,EAAY,2GAGwB1B,MAASC,OAAO,oBAAmB,g8BAcjDD,MAASC,OAAO,oBAAmB,iJAIrCvD,EAAQgC,KAAIiD,GAAG,cAAWA,EAAIhF,OAAM,WAASiF,KAAK,IAAG,+IAIjC,IAAxB5G,EAAa6G,OACzB,oBAAsBnF,EAAQmF,OAAS,+FACvC7G,EAAa0D,KAAIoD,GAAG,sGAEQpF,EAAQgC,KAAIiD,GAAG,gEACK,aAAZA,EAAI/E,KAAsBkF,EAAIH,EAAI/E,KAAQ6D,MAAMsB,QAAQD,EAAIH,EAAI/E,MAAQkF,EAAIH,EAAI/E,KAAK8B,KAAIyB,GAAC,UAAOA,EAAEC,QAAO,aAAKD,EAAEG,SAAQ,OAAKsB,KAAK,MAAQE,EAAIH,EAAI/E,UAA0BoF,IAAjBF,EAAIH,EAAI/E,MAAuC,OAAjBkF,EAAIH,EAAI/E,KAAgBkF,EAAIH,EAAI/E,KAAO,GAAG,yDAC3OgF,KAAK,IAAG,2FAEhBA,KAAK,IAAG,4HAOvCL,EAAYU,SAASC,MAAMR,GAC3BH,EAAYU,SAASE,QACrBZ,EAAYa,OAAO,EAgEH5H,UAAU,2DACV2G,SAAUzF,EAAc,yBAK/BI,IACG,iBAAKtB,UAAU,qCAAoC,WAC/C,eAAIA,UAAU,6BAA4B,6CAC1C,kBACI6H,SAAWtB,IACPA,EAAEuB,iBACF3C,EAAY,MAAM,EAEtBnF,UAAU,yBAAwB,WAElC,mBACIsC,MAAOd,EAAQE,YACf4E,SAAWC,GAAM9E,GAAW,kBAAKD,GAAO,IAAEE,YAAa6E,EAAEC,OAAOlE,MAAO8B,KAAM,GAAIvD,GAAI,GAAI0D,GAAI,GAAIC,eAAgB,MACjHxE,UAAU,qBAAoB,SAE7BqC,EAAoB6B,KAAKuC,IACtB,mBAA2BnE,MAAOmE,EAAOnE,MAAM,SAC1CmE,EAAOlE,OADCkE,EAAOnE,WAKH,OAAxBd,EAAQE,cACL,kBACI0E,KAAK,OACLC,YAAY,WACZ/D,MAAOd,EAAQ4C,MAAQ,GACvBkC,SAAWC,GAAM9E,GAAW,kBAAKD,GAAO,IAAE4C,KAAMmC,EAAEC,OAAOlE,SACzDtC,UAAU,qBACV+H,UAAQ,IAGS,OAAxBvG,EAAQE,cACL,kBACI0E,KAAK,OACLC,YAAY,KACZ/D,MAAOd,EAAQX,IAAM,GACrByF,SAAWC,GAAM9E,GAAW,kBAAKD,GAAO,IAAEX,GAAI0F,EAAEC,OAAOlE,SACvDtC,UAAU,qBACV+H,UAAQ,IAGS,OAAxBvG,EAAQE,cACL,kBACI0E,KAAK,OACLC,YAAY,KACZ/D,MAAOd,EAAQ+C,IAAM,GACrB+B,SAAWC,GAAM9E,GAAW,kBAAKD,GAAO,IAAE+C,GAAIgC,EAAEC,OAAOlE,SACvDtC,UAAU,qBACV+H,UAAQ,IAGS,QAAxBvG,EAAQE,cACL,kBACI0E,KAAK,OACLC,YAAY,MACZ/D,MAAOd,EAAQgD,gBAAkB,GACjC8B,SAAWC,GAAM9E,GAAW,kBAAKD,GAAO,IAAEgD,eAAgB+B,EAAEC,OAAOlE,SACnEtC,UAAU,qBACV+H,UAAQ,KAGhB,mBACIzF,MAAOd,EAAQG,cACf2E,SAAWC,GAAM9E,GAAW,kBAAKD,GAAO,IAAEG,cAAe4E,EAAEC,OAAOlE,SAClEtC,UAAU,qBAAoB,SA3a5B,CAC1B,CAAEsC,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,UAAWC,MAAO,YA0aoB2B,KAAKuC,IACxB,mBAA2BnE,MAAOmE,EAAOnE,MAAM,SAC1CmE,EAAOlE,OADCkE,EAAOnE,YAK5B,kBACI8D,KAAK,OACLC,YAAY,uBACZ/D,MAAOd,EAAQiD,eAAiB,GAChC6B,SAAWC,GAAM9E,GAAW,kBAAKD,GAAO,IAAEiD,cAAe8B,EAAEC,OAAOlE,SAClEtC,UAAU,wBAEd,mBACIsC,MAAOd,EAAQI,QACf0E,SAAWC,GAAM9E,GAAW,kBAAKD,GAAO,IAAEI,QAAS2E,EAAEC,OAAOlE,MAAOoC,MAAO,GAAIG,kBAAmB,MACjG7E,UAAU,qBAAoB,SAvblC,CACpB,CAAEsC,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,cAAeC,MAAO,eAC/B,CAAED,MAAO,iBAAkBC,MAAO,mBAsbO2B,KAAKuC,IAClB,oBAA2BnE,MAAOmE,EAAOnE,MAAM,UAC1CmE,EAAOlE,MAAK,MAAKG,EAAoB+D,EAAOnE,SADpCmE,EAAOnE,YAK5B,oBACIA,MAAOd,EAAQkD,MACf4B,SAAWC,IACP,MAAMlB,EAAgB7C,EAAchB,EAAQI,SAAS0D,MAAKC,GAAOA,EAAIjD,QAAUiE,EAAEC,OAAOlE,QACxFb,GAAW,kBACJD,GAAO,IACVkD,MAAO6B,EAAEC,OAAOlE,MAChBuC,mBAAgC,OAAbQ,QAAa,IAAbA,OAAa,EAAbA,EAAe5C,cAAe,KACnD,EAENzC,UAAU,qBAAoB,WAE9B,mBAAQsC,MAAM,GAAE,sCACfd,EAAQI,SAAWY,EAAchB,EAAQI,SAASsC,KAAKuC,IACpD,mBAA2BnE,MAAOmE,EAAOnE,MAAM,SAC1CmE,EAAOlE,OADCkE,EAAOnE,aAK5B,kBACI8D,KAAK,OACLC,YAAY,YACZ/D,MAAOd,EAAQmD,WAAa,GAC5B2B,SAAWC,GAAM9E,GAAW,kBAAKD,GAAO,IAAEmD,UAAW4B,EAAEC,OAAOlE,SAC9DtC,UAAU,wBAEd,kBACIoG,KAAK,OACLC,YAAY,iBACZ/D,MAAOd,EAAQoD,aAAe,GAC9B0B,SAAWC,GAAM9E,GAAW,kBAAKD,GAAO,IAAEoD,YAAa2B,EAAEC,OAAOlE,SAChEtC,UAAU,wBAEd,kBACIoG,KAAK,OACLC,YAAY,oBACZ/D,MAAOd,EAAQqD,mBAAqB,GACpCmD,UAAQ,EACRhI,UAAU,oCAEd,iBAAKA,UAAU,aAAY,WACvB,eAAIA,UAAU,6BAA4B,mCAC1C,oBACIsG,SAAWC,IACP,MAAOX,EAASC,GAAuBU,EAAEC,OAAOlE,MAAM2F,MAAM,OACxDrC,GAAWC,IAAwBrE,EAAQK,SAASqG,MAAKvC,GAAKA,EAAEC,UAAYA,KAzXjG,EAACA,EAASC,KACpBrE,EAAQK,SAASqG,MAAKvC,GAAKA,EAAEC,UAAYA,KAC1CnE,GAAW0G,IAAI,kBACRA,GAAI,IACPtG,SAAU,IAAIsG,EAAKtG,SAAU,CAAE+D,UAASC,sBAAqBC,SAAU,OAE/E,EAoXoCsC,CAAWxC,EAASC,GAExBU,EAAEC,OAAOlE,MAAQ,EAAE,EAEvBtC,UAAU,iCAAgC,WAE1C,mBAAQsC,MAAM,GAAE,wCACfR,GAAgBA,EAAauF,OAAS,EACnC,IAAI,IAAIpG,IAAIa,EAAaoC,KAAIyB,GAAKA,EAAEC,YAAW1B,KAAI0B,IAAY,IAAD,EAC1D,MAAMyC,EAA2D,QAAhD,EAAGvG,EAAawD,MAAKK,GAAKA,EAAEC,UAAYA,WAAQ,aAA7C,EAA+CC,oBACnE,OACI,oBAAsBvD,MAAK,UAAKsD,EAAO,cAAMyC,GAAc,UACtDzC,EAAO,MAAKyC,IADJzC,EAEJ,KAIjB,mBAAQe,UAAQ,2CAGvBnF,EAAQK,SAASwF,OAAS,IACvB,gBAAKrH,UAAU,uBAAsB,UACjC,mBAAOA,UAAU,iCAAgC,WAC7C,4BACI,gBAAIA,UAAU,cAAa,WACvB,eAAIA,UAAU,uBAAsB,mBACpC,eAAIA,UAAU,uBAAsB,6BACpC,eAAIA,UAAU,uBAAsB,0BACpC,eAAIA,UAAU,uBAAsB,2BAG5C,2BACKwB,EAAQK,SAASqC,KAAI,CAAC0B,EAASO,KAC5B,gBAA0BnG,UAAU,mBAAkB,WAClD,eAAIA,UAAU,aAAY,SAAE4F,EAAQA,WACpC,eAAI5F,UAAU,aAAY,SAAE4F,EAAQC,uBACpC,eAAI7F,UAAU,aAAY,UACtB,kBACIoG,KAAK,SACLkC,IAAI,IACJhG,MAAOsD,EAAQE,SACfQ,SAAWC,GA1ZhD,EAACJ,EAAO7D,KAC3B,MAAMiG,EAAkB,IAAI/G,EAAQK,UACpC0G,EAAgBpC,GAAOL,SAAWxD,GAAS,EAC3Cb,GAAW0G,IAAI,kBACRA,GAAI,IACPtG,SAAU0G,KACX,EAoZsEC,CAAerC,EAAOI,EAAEC,OAAOlE,OAChDtC,UAAU,0BACVqG,YAAY,mBAGpB,eAAIrG,UAAU,aAAY,UACtB,mBACIoG,KAAK,SACLM,QAAS,IAzZ9CP,KACnB,MAAMoC,EAAkB,IAAI/G,EAAQK,UACpC0G,EAAgBE,OAAOtC,EAAO,GAC9B1E,GAAW0G,IAAI,kBACRA,GAAI,IACPtG,SAAU0G,KACX,EAmZoEG,CAAcvC,GAC7BnG,UAAU,kCAAiC,UAE3C,SAAC,IAAS,CAACA,UAAU,kBAnBxB4F,EAAQA,kBA4BR,IAA5BpE,EAAQK,SAASwF,SAAgB,cAAGrH,UAAU,uBAAsB,kDAEzE,mBACIoG,KAAK,SACLpG,UAAU,kEACV2G,SAAUzF,EAAc,yCAOxC,gBAAKlB,UAAU,kBAAiB,UAC5B,mBAAO2I,GAAG,iBAAiB3I,UAAU,yCAAwC,WACzE,kBAAOA,UAAU,6CAA4C,UACzD,2BACI,eAAIA,UAAU,YAAW,UACrB,kBACIoG,KAAK,WACLE,SAAWC,GACPvF,EACIuF,EAAEC,OAAOoC,QACH,IAAI3H,IAAIT,EAAa0D,KAAI,CAAC2E,EAAGC,IAAMA,KACnC,IAAI7H,KAGlB0F,SAAUzF,MAGjBgB,EAAQgC,KAAKiD,IACV,eAAkBnH,UAAU,YAAW,SAClCmH,EAAIhF,QADAgF,EAAI/E,QAIjB,eAAIpC,UAAU,YAAW,2BAGjC,2BAC6B,IAAxBQ,EAAa6G,QACV,yBACI,eAAI0B,QAAS7G,EAAQmF,OAAS,EAAGrH,UAAU,sCAAqC,gFAKpFQ,EAAa0D,KAAI,CAACoD,EAAKnB,KACnB,gBAEInG,UAAS,UAAKe,EAAciI,IAAI7C,GAAS,cAAgB,GAAE,8BAA6B,WAExF,eAAInG,UAAU,YAAW,UACrB,kBACIoG,KAAK,WACLwC,QAAS7H,EAAciI,IAAI7C,GAC3BG,SAAU,IAvflCH,KAChB,MAAM8C,EAAc,IAAIhI,IAAIF,GACxBkI,EAAYD,IAAI7C,GAChB8C,EAAYC,OAAO/C,GAEnB8C,EAAYE,IAAIhD,GAEpBnF,EAAiBiI,EAAY,EAgf2BG,CAAWjD,GAC3BQ,SAAUzF,MAGjBgB,EAAQgC,KAAKiD,IACV,eAAkBnH,UAAU,YAAW,SACtB,aAAZmH,EAAI/E,KAAsBkF,EAAIH,EAAI/E,KAAQ6D,MAAMsB,QAAQD,EAAIH,EAAI/E,MAAQkF,EAAIH,EAAI/E,KAAK8B,KAAIyB,GAAC,UAAOA,EAAEC,QAAO,aAAKD,EAAEG,SAAQ,OAAKsB,KAAK,MAAQrD,KAAKe,MAAMwC,EAAIH,EAAI/E,MAAM8B,KAAIyB,GAAC,UAAOA,EAAEC,QAAO,aAAKD,EAAEG,SAAQ,OAAKsB,KAAK,WAA2BI,IAAjBF,EAAIH,EAAI/E,MAAuC,OAAjBkF,EAAIH,EAAI/E,KAAgBkF,EAAIH,EAAI/E,KAAO,IAD7R+E,EAAI/E,QAIjB,eAAIpC,UAAU,YAAW,UACrB,mBACI0G,QAAS,IA/YhC7D,WACjB,IACI,MAAMwG,EAAc7I,EAAa2F,GAAO/B,KAClCtB,QAAYC,MAAM,GAAD,OAAIf,EAAQ,oBAAoB,CACnD4B,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEoB,OAAQ,SAAU/E,KAAM,CAACgJ,OAEpD,IAAKvG,EAAIM,GAAI,MAAM,IAAIC,aAAaP,EAAIQ,QAAQlC,OAAS,iCACzDJ,EAAiB,IAAIC,WACf2B,GAGV,CAFE,MAAOW,GACLlC,EAAS,gCAAD,OAA8BkC,EAAIC,SAC9C,GAkYuD8F,CAAanD,GAC5BnG,UAAU,kCACV2G,SAAUzF,EAAc,UAExB,SAAC,IAAS,CAAClB,UAAU,kBAtBxBmG,gBAgCzB,C","sources":["components/Typography/Subtitle.js","components/Cards/TitleCard.js","pages/protected/Controle.js"],"sourcesContent":[" function Subtitle({styleClass, children}){\r\n    return(\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","import Subtitle from \"../Typography/Subtitle\"\r\n\r\n  \r\n  function TitleCard({title, children, topMargin, TopSideButtons}){\r\n      return(\r\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\r\n\r\n            {/* Title for Card */}\r\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n                {title}\r\n\r\n                {/* Top side button, show only if present */}\r\n                {\r\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n                }\r\n              </Subtitle>\r\n              \r\n              <div className=\"divider mt-2\"></div>\r\n          \r\n              {/** Card Body */}\r\n              <div className='h-full w-full pb-6 bg-base-100'>\r\n                  {children}\r\n              </div>\r\n          </div>\r\n          \r\n      )\r\n  }\r\n  \r\n  \r\n  export default TitleCard","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TitleCard from \"../../components/Cards/TitleCard\";\r\nimport TrashIcon from \"@heroicons/react/24/outline/TrashIcon\";\r\nimport moment from \"moment\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst Controle = () => {\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        nOt: \"\",\r\n        bs: \"\",\r\n        typeSortie: \"\",\r\n    });\r\n    const [selectedItems, setSelectedItems] = useState(new Set());\r\n    const [isLoadingData, setIsLoadingData] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [showAddForm, setShowAddForm] = useState(false);\r\n    const [newItem, setNewItem] = useState({\r\n        type_sortie: \"OT\",\r\n        nature_sortie: \"normal\",\r\n        magasin: \"Magasin\",\r\n        articles: [], // Array of { article, designation_article, quantity }\r\n    });\r\n    const [mb51Articles, setMb51Articles] = useState([]); // Store articles from mb51\r\n\r\n    const BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\n    const COLUMNS = [\r\n        { header: \"N° OT\", key: \"n_ot\" },\r\n        { header: \"N° BS\", key: \"bs\" },\r\n        { header: \"N° LE\", key: \"le\" },\r\n        { header: \"N° STO\", key: \"commande_achat\" },\r\n        { header: \"Nature de sortie\", key: \"nature_sortie\" },\r\n        { header: \"Type de sortie\", key: \"type_sortie\" },\r\n        { header: \"N° Réservation\", key: \"n_reservation\" },\r\n        { header: \"Magasin\", key: \"magasin\" },\r\n        { header: \"Local\", key: \"local\" },\r\n        { header: \"Demandeur\", key: \"demandeur\" },\r\n        { header: \"Préparateur\", key: \"preparateur\" },\r\n        { header: \"Responsable local\", key: \"responsable_local\" },\r\n        { header: \"Articles\", key: \"articles\" },\r\n    ];\r\n\r\n    const TYPE_SORTIE_OPTIONS = [\r\n        { value: \"OT\", label: \"OT\" },\r\n        { value: \"BS\", label: \"BS\" },\r\n        { value: \"LE\", label: \"LE\" },\r\n        { value: \"STO\", label: \"STO\" },\r\n    ];\r\n\r\n    const NATURE_SORTIE_OPTIONS = [\r\n        { value: \"urgent\", label: \"Urgent\" },\r\n        { value: \"normal\", label: \"Normal\" },\r\n        { value: \"session\", label: \"Session\" },\r\n    ];\r\n\r\n    const MAGASIN_OPTIONS = [\r\n        { value: \"Magasin\", label: \"Magasin\" },\r\n        { value: \"Magasin EPI\", label: \"Magasin EPI\" },\r\n        { value: \"Parc Exterieur\", label: \"Parc Exterieur\" },\r\n    ];\r\n\r\n    const LOCAL_OPTIONS = {\r\n        \"Magasin\": [\r\n            { value: \"MSLE\", label: \"MSLE/MSLT - BOUZIT LAHSSAN\", responsable: \"BOUZIT LAHSSAN\" },\r\n            { value: \"MSLV\", label: \"MSLV/MSRL/MSGP/MSLL/MSPC/DSED - BENDADA MOHAMMED\", responsable: \"BENDADA MOHAMMED\" },\r\n        ],\r\n        \"Magasin EPI\": [\r\n            { value: \"MSFE\", label: \"MSFE - BOUALLAK NOURDINE\", responsable: \"BOUALLAK NOURDINE\" },\r\n        ],\r\n        \"Parc Exterieur\": [\r\n            { value: \"PEXT\", label: \"PEXT/el kouhail abdelmajid\", responsable: \"el kouhail abdelmajid\" },\r\n        ],\r\n    };\r\n\r\n    const RESPONSABLE_MAGASIN = {\r\n        \"Magasin\": \"JAMAL RHENNAOUI\",\r\n        \"Magasin EPI\": \"ELBAHI AMINE\",\r\n        \"Parc Exterieur\": \"SARGALI YOUSSEF\",\r\n    };\r\n\r\n    const fetchMb51Articles = async () => {\r\n        try {\r\n            const res = await fetch(`${BASE_URL}/controle/mb51/articles`);\r\n            console.log('Fetch response:', res.status, res.statusText);\r\n            if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`);\r\n            const articles = await res.json();\r\n            console.log('Fetched articles:', articles);\r\n            setMb51Articles(articles);\r\n        } catch (err) {\r\n            setError(`Échec du chargement des articles : ${err.message}`);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        fetchMb51Articles();\r\n    }, [filters]);\r\n\r\n    const fetchData = async () => {\r\n        setIsLoadingData(true);\r\n        setError(null);\r\n        const url = `${BASE_URL}/controle/data`;\r\n        const payload = {\r\n            nOt: filters.nOt || \"\",\r\n            bs: filters.bs || \"\",\r\n            typeSortie: filters.typeSortie || \"\",\r\n        };\r\n        try {\r\n            const res = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(payload),\r\n            });\r\n            if (!res.ok) throw new Error(`Erreur HTTP ! statut : ${res.status}`);\r\n            const data = await res.json();\r\n            const normalizedData = data.map(item => ({\r\n                ...item,\r\n                n_ot: item.n_ot ? item.n_ot.trim().toLowerCase() : \"\",\r\n                bs: item.bs ? item.bs.trim().toLowerCase() : \"\",\r\n                le: item.le ? item.le.trim().toLowerCase() : \"\",\r\n                commande_achat: item.commande_achat ? item.commande_achat.trim() : \"\",\r\n                nature_sortie: item.nature_sortie ? item.nature_sortie.trim() : \"\",\r\n                type_sortie: item.type_sortie ? item.type_sortie.trim().toLowerCase() : \"\",\r\n                n_reservation: item.n_reservation ? item.n_reservation.trim() : \"\",\r\n                magasin: item.magasin ? item.magasin.trim() : \"\",\r\n                local: item.local ? item.local.trim() : \"\",\r\n                demandeur: item.demandeur ? item.demandeur.trim() : \"\",\r\n                preparateur: item.preparateur ? item.preparateur.trim() : \"\",\r\n                responsable_local: item.responsable_local ? item.responsable_local.trim() : \"\",\r\n                articles: typeof item.articles === 'string' ? JSON.parse(item.articles || '[]') : item.articles || [],\r\n            }));\r\n            setData(normalizedData);\r\n            applyFilters(normalizedData);\r\n        } catch (err) {\r\n            setError(`Échec du chargement des données : ${err.message}`);\r\n        } finally {\r\n            setIsLoadingData(false);\r\n        }\r\n    };\r\n\r\n    const applyFilters = (data) => {\r\n        let filtered = [...data];\r\n        if (filters.nOt) {\r\n            filtered = filtered.filter((item) =>\r\n                item.n_ot?.toLowerCase().includes(filters.nOt.toLowerCase())\r\n            );\r\n        }\r\n        if (filters.bs) {\r\n            filtered = filtered.filter((item) =>\r\n                item.bs?.toLowerCase().includes(filters.bs.toLowerCase())\r\n            );\r\n        }\r\n        if (filters.typeSortie) {\r\n            filtered = filtered.filter((item) =>\r\n                item.type_sortie?.toLowerCase() === filters.typeSortie.toLowerCase()\r\n            );\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const toggleItem = (index) => {\r\n        const newSelected = new Set(selectedItems);\r\n        if (newSelected.has(index)) {\r\n            newSelected.delete(index);\r\n        } else {\r\n            newSelected.add(index);\r\n        }\r\n        setSelectedItems(newSelected);\r\n    };\r\n\r\n    const addArticle = (article, designation_article) => {\r\n        if (!newItem.articles.some(a => a.article === article)) {\r\n            setNewItem(prev => ({\r\n                ...prev,\r\n                articles: [...prev.articles, { article, designation_article, quantity: 0 }],\r\n            }));\r\n        }\r\n    };\r\n\r\n    const updateQuantity = (index, value) => {\r\n        const updatedArticles = [...newItem.articles];\r\n        updatedArticles[index].quantity = value || 0;\r\n        setNewItem(prev => ({\r\n            ...prev,\r\n            articles: updatedArticles,\r\n        }));\r\n    };\r\n\r\n    const removeArticle = (index) => {\r\n        const updatedArticles = [...newItem.articles];\r\n        updatedArticles.splice(index, 1);\r\n        setNewItem(prev => ({\r\n            ...prev,\r\n            articles: updatedArticles,\r\n        }));\r\n    };\r\n\r\n    const updateItems = async (action) => {\r\n        try {\r\n            if (action === \"add\" && newItem) {\r\n                const selectedLocal = LOCAL_OPTIONS[newItem.magasin]?.find(loc => loc.value === newItem.local);\r\n                console.log('New Item before validation:', newItem); // Debug log\r\n                // Validate and set default values\r\n                let n_ot = newItem.n_ot || '';\r\n                let bs = newItem.bs || '';\r\n                let le = newItem.le || '';\r\n                let commande_achat = newItem.commande_achat || '';\r\n\r\n                if (newItem.type_sortie === \"OT\" && (!n_ot || n_ot.trim() === '')) {\r\n                    n_ot = `OT${moment().format(\"YYYYMMDDHHmmss\")}`;\r\n                    console.log('Generated n_ot:', n_ot); // Debug log\r\n                }\r\n                if (newItem.type_sortie === \"BS\" && (!bs || bs.trim() === '')) {\r\n                    bs = `BS${moment().format(\"YYYYMMDDHHmmss\")}`;\r\n                }\r\n                if (newItem.type_sortie === \"LE\" && (!le || le.trim() === '')) {\r\n                    le = `LE${moment().format(\"YYYYMMDDHHmmss\")}`;\r\n                }\r\n                if (newItem.type_sortie === \"STO\" && (!commande_achat || commande_achat.trim() === '')) {\r\n                    commande_achat = `STO${moment().format(\"YYYYMMDDHHmmss\")}`;\r\n                }\r\n\r\n                if (newItem.type_sortie === \"OT\" && !n_ot) {\r\n                    throw new Error(\"Le N° OT est requis pour un type de sortie OT.\");\r\n                }\r\n                if (newItem.type_sortie === \"BS\" && !bs) {\r\n                    throw new Error(\"Le BS est requis pour un type de sortie BS.\");\r\n                }\r\n                if (newItem.type_sortie === \"LE\" && !le) {\r\n                    throw new Error(\"Le LE est requis pour un type de sortie LE.\");\r\n                }\r\n                if (newItem.type_sortie === \"STO\" && !commande_achat) {\r\n                    throw new Error(\"La commande d'achat est requise pour un type de sortie STO.\");\r\n                }\r\n\r\n                const itemToAdd = {\r\n                    ...newItem,\r\n                    n_ot,\r\n                    bs,\r\n                    le,\r\n                    commande_achat,\r\n                    responsable_local: selectedLocal?.responsable || newItem.responsable_local || \"\",\r\n                    magasin: newItem.magasin || \"Magasin\",\r\n                    articles: newItem.articles.map(a => ({\r\n                        article: a.article,\r\n                        designation_article: a.designation_article,\r\n                        quantity: a.quantity || 0,\r\n                    })),\r\n                };\r\n                console.log('Item to send:', itemToAdd); // Debug log\r\n                const res = await fetch(`${BASE_URL}/controle/update`, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ action: \"add\", data: itemToAdd }),\r\n                });\r\n                if (!res.ok) throw new Error((await res.json()).error || \"Erreur lors de l'ajout\");\r\n                setShowAddForm(false);\r\n                setNewItem({ type_sortie: \"OT\", nature_sortie: \"normal\", magasin: \"Magasin\", articles: [] });\r\n                await fetchData();\r\n            } else if (action === \"remove\" && selectedItems.size > 0) {\r\n                const nOtsToRemove = Array.from(selectedItems).map(index => filteredData[index].n_ot);\r\n                const res = await fetch(`${BASE_URL}/controle/update`, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ action: \"remove\", data: nOtsToRemove }),\r\n                });\r\n                if (!res.ok) throw new Error((await res.json()).error || \"Erreur lors de la suppression\");\r\n                setSelectedItems(new Set());\r\n                await fetchData();\r\n            }\r\n        } catch (err) {\r\n            setError(`Échec de la mise à jour : ${err.message}`);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (index) => {\r\n        try {\r\n            const nOtToRemove = filteredData[index].n_ot;\r\n            const res = await fetch(`${BASE_URL}/controle/update`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ action: \"remove\", data: [nOtToRemove] }),\r\n            });\r\n            if (!res.ok) throw new Error((await res.json()).error || \"Erreur lors de la suppression\");\r\n            setSelectedItems(new Set());\r\n            await fetchData();\r\n        } catch (err) {\r\n            setError(`Échec de la suppression : ${err.message}`);\r\n        }\r\n    };\r\n\r\n    const exportToExcel = () => {\r\n        const ws = XLSX.utils.json_to_sheet(filteredData);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"Controle Livraisons\");\r\n        XLSX.writeFile(wb, `controle_livraison_${moment().format(\"YYYYMMDD_HHmmss\")}.xlsx`);\r\n    };\r\n\r\n    const handlePrint = () => {\r\n        const printWindow = window.open('', '_blank');\r\n        const printContent = `\r\n            <html>\r\n                <head>\r\n                    <title>Contrôle Livraison - ${moment().format(\"DD/MM/YYYY HH:mm\")}</title>\r\n                    <style>\r\n                        body { font-family: Arial, sans-serif; margin: 20px; color: #000; }\r\n                        h1 { text-align: center; font-size: 24px; margin-bottom: 10px; }\r\n                        p { text-align: center; font-size: 14px; color: #555; margin-bottom: 20px; }\r\n                        table { width: 100%; border-collapse: collapse; font-size: 12px; }\r\n                        th, td { border: 1px solid #000; padding: 8px; text-align: left; }\r\n                        th { background-color: #f0f0f0; font-weight: bold; text-transform: uppercase; }\r\n                        tr:nth-child(even) { background-color: #f9f9f9; }\r\n                        .no-data { text-align: center; padding: 20px; font-style: italic; }\r\n                    </style>\r\n                </head>\r\n                <body>\r\n                    <h1>Contrôle Livraison</h1>\r\n                    <p>Imprimé le ${moment().format(\"DD/MM/YYYY HH:mm\")}</p>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                ${COLUMNS.map(col => `<th>${col.header}</th>`).join('')}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            ${filteredData.length === 0\r\n                ? '<tr><td colspan=\"' + COLUMNS.length + '\" class=\"no-data\">Aucune donnée disponible pour les filtres sélectionnés.</td></tr>'\r\n                : filteredData.map(row => `\r\n                                        <tr>\r\n                                            ${COLUMNS.map(col => `\r\n                                                <td>${col.key === 'articles' && row[col.key] ? (Array.isArray(row[col.key]) ? row[col.key].map(a => `${a.article} (${a.quantity})`).join(', ') : row[col.key]) : (row[col.key] !== undefined && row[col.key] !== null ? row[col.key] : '')}</td>\r\n                                            `).join('')}\r\n                                        </tr>\r\n                                    `).join('')\r\n            }\r\n                        </tbody>\r\n                    </table>\r\n                </body>\r\n            </html>\r\n        `;\r\n        printWindow.document.write(printContent);\r\n        printWindow.document.close();\r\n        printWindow.print();\r\n    };\r\n\r\n    return (\r\n        <TitleCard title=\"Contrôle Livraison\">\r\n            <div className=\"grid grid-cols-1 gap-4\">\r\n                <div className=\"flex space-x-2 mb-4\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"N° OT\"\r\n                        value={filters.nOt}\r\n                        onChange={(e) => setFilters({ ...filters, nOt: e.target.value })}\r\n                        className=\"p-2 border rounded\"\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"BS\"\r\n                        value={filters.bs}\r\n                        onChange={(e) => setFilters({ ...filters, bs: e.target.value })}\r\n                        className=\"p-2 border rounded\"\r\n                    />\r\n                    <select\r\n                        value={filters.typeSortie}\r\n                        onChange={(e) => setFilters({ ...filters, typeSortie: e.target.value })}\r\n                        className=\"p-2 border rounded\"\r\n                    >\r\n                        <option value=\"\">Tous les types</option>\r\n                        {TYPE_SORTIE_OPTIONS.map((option) => (\r\n                            <option key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                {(error || isLoadingData) && (\r\n                    <div className=\"mb-4\">\r\n                        {isLoadingData && <div className=\"text-blue-500\">Chargement des données...</div>}\r\n                        {error && <div className=\"text-red-500\">{error}</div>}\r\n                    </div>\r\n                )}\r\n                <div className=\"flex space-x-2 mb-4\">\r\n                    <button\r\n                        onClick={() => setShowAddForm(!showAddForm)}\r\n                        className=\"bg-blue-500 text-white p-2 rounded hover:bg-blue-600\"\r\n                        disabled={isLoadingData}\r\n                    >\r\n                        {showAddForm ? \"Annuler\" : \"Ajouter\"}\r\n                    </button>\r\n                    <button\r\n                        onClick={() => updateItems(\"remove\")}\r\n                        className=\"bg-red-500 text-white p-2 rounded hover:bg-red-600\"\r\n                        disabled={selectedItems.size === 0 || isLoadingData}\r\n                    >\r\n                        Retirer\r\n                    </button>\r\n                    <button\r\n                        onClick={exportToExcel}\r\n                        className=\"bg-green-500 text-white p-2 rounded hover:bg-green-600\"\r\n                        disabled={isLoadingData}\r\n                    >\r\n                        Exporter Excel\r\n                    </button>\r\n                    <button\r\n                        onClick={handlePrint}\r\n                        className=\"bg-yellow-500 text-white p-2 rounded hover:bg-yellow-600\"\r\n                        disabled={isLoadingData}\r\n                    >\r\n                        Imprimer\r\n                    </button>\r\n                </div>\r\n                {showAddForm && (\r\n                    <div className=\"mb-4 p-4 border rounded bg-gray-50\">\r\n                        <h3 className=\"text-lg font-semibold mb-2\">Ajouter une nouvelle livraison</h3>\r\n                        <form\r\n                            onSubmit={(e) => {\r\n                                e.preventDefault();\r\n                                updateItems(\"add\");\r\n                            }}\r\n                            className=\"grid grid-cols-2 gap-4\"\r\n                        >\r\n                            <select\r\n                                value={newItem.type_sortie}\r\n                                onChange={(e) => setNewItem({ ...newItem, type_sortie: e.target.value, n_ot: \"\", bs: \"\", le: \"\", commande_achat: \"\" })}\r\n                                className=\"p-2 border rounded\"\r\n                            >\r\n                                {TYPE_SORTIE_OPTIONS.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            {newItem.type_sortie === \"OT\" && (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"N° OT\"\r\n                                    value={newItem.n_ot || \"\"}\r\n                                    onChange={(e) => setNewItem({ ...newItem, n_ot: e.target.value })}\r\n                                    className=\"p-2 border rounded\"\r\n                                    required\r\n                                />\r\n                            )}\r\n                            {newItem.type_sortie === \"BS\" && (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"BS\"\r\n                                    value={newItem.bs || \"\"}\r\n                                    onChange={(e) => setNewItem({ ...newItem, bs: e.target.value })}\r\n                                    className=\"p-2 border rounded\"\r\n                                    required\r\n                                />\r\n                            )}\r\n                            {newItem.type_sortie === \"LE\" && (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"LE\"\r\n                                    value={newItem.le || \"\"}\r\n                                    onChange={(e) => setNewItem({ ...newItem, le: e.target.value })}\r\n                                    className=\"p-2 border rounded\"\r\n                                    required\r\n                                />\r\n                            )}\r\n                            {newItem.type_sortie === \"STO\" && (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"STO\"\r\n                                    value={newItem.commande_achat || \"\"}\r\n                                    onChange={(e) => setNewItem({ ...newItem, commande_achat: e.target.value })}\r\n                                    className=\"p-2 border rounded\"\r\n                                    required\r\n                                />\r\n                            )}\r\n                            <select\r\n                                value={newItem.nature_sortie}\r\n                                onChange={(e) => setNewItem({ ...newItem, nature_sortie: e.target.value })}\r\n                                className=\"p-2 border rounded\"\r\n                            >\r\n                                {NATURE_SORTIE_OPTIONS.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"N° Réservation\"\r\n                                value={newItem.n_reservation || \"\"}\r\n                                onChange={(e) => setNewItem({ ...newItem, n_reservation: e.target.value })}\r\n                                className=\"p-2 border rounded\"\r\n                            />\r\n                            <select\r\n                                value={newItem.magasin}\r\n                                onChange={(e) => setNewItem({ ...newItem, magasin: e.target.value, local: \"\", responsable_local: \"\" })}\r\n                                className=\"p-2 border rounded\"\r\n                            >\r\n                                {MAGASIN_OPTIONS.map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label} - {RESPONSABLE_MAGASIN[option.value]}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            <select\r\n                                value={newItem.local}\r\n                                onChange={(e) => {\r\n                                    const selectedLocal = LOCAL_OPTIONS[newItem.magasin].find(loc => loc.value === e.target.value);\r\n                                    setNewItem({\r\n                                        ...newItem,\r\n                                        local: e.target.value,\r\n                                        responsable_local: selectedLocal?.responsable || \"\"\r\n                                    });\r\n                                }}\r\n                                className=\"p-2 border rounded\"\r\n                            >\r\n                                <option value=\"\">Sélectionner un local</option>\r\n                                {newItem.magasin && LOCAL_OPTIONS[newItem.magasin].map((option) => (\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Demandeur\"\r\n                                value={newItem.demandeur || \"\"}\r\n                                onChange={(e) => setNewItem({ ...newItem, demandeur: e.target.value })}\r\n                                className=\"p-2 border rounded\"\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Préparateur\"\r\n                                value={newItem.preparateur || \"\"}\r\n                                onChange={(e) => setNewItem({ ...newItem, preparateur: e.target.value })}\r\n                                className=\"p-2 border rounded\"\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Responsable local\"\r\n                                value={newItem.responsable_local || \"\"}\r\n                                readOnly\r\n                                className=\"p-2 border rounded bg-gray-100\"\r\n                            />\r\n                            <div className=\"col-span-2\">\r\n                                <h4 className=\"text-md font-semibold mb-2\">Ajouter des articles</h4>\r\n                                <select\r\n                                    onChange={(e) => {\r\n                                        const [article, designation_article] = e.target.value.split(\" - \");\r\n                                        if (article && designation_article && !newItem.articles.some(a => a.article === article)) {\r\n                                            addArticle(article, designation_article);\r\n                                        }\r\n                                        e.target.value = \"\"; // Reset dropdown\r\n                                    }}\r\n                                    className=\"p-2 border rounded w-full mb-2\"\r\n                                >\r\n                                    <option value=\"\">Sélectionner un article</option>\r\n                                    {mb51Articles && mb51Articles.length > 0 ? (\r\n                                        [...new Set(mb51Articles.map(a => a.article))].map(article => {\r\n                                            const designation = mb51Articles.find(a => a.article === article)?.designation_article;\r\n                                            return (\r\n                                                <option key={article} value={`${article} - ${designation}`}>\r\n                                                    {article} - {designation}\r\n                                                </option>\r\n                                            );\r\n                                        })\r\n                                    ) : (\r\n                                        <option disabled>Aucun article disponible</option>\r\n                                    )}\r\n                                </select>\r\n                                {newItem.articles.length > 0 && (\r\n                                    <div className=\"mt-2 overflow-x-auto\">\r\n                                        <table className=\"w-full text-sm border-collapse\">\r\n                                            <thead>\r\n                                                <tr className=\"bg-gray-100\">\r\n                                                    <th className=\"border p-2 text-left\">Code</th>\r\n                                                    <th className=\"border p-2 text-left\">Désignation</th>\r\n                                                    <th className=\"border p-2 text-left\">Quantité</th>\r\n                                                    <th className=\"border p-2 text-left\">Actions</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {newItem.articles.map((article, index) => (\r\n                                                    <tr key={article.article} className=\"hover:bg-gray-50\">\r\n                                                        <td className=\"border p-2\">{article.article}</td>\r\n                                                        <td className=\"border p-2\">{article.designation_article}</td>\r\n                                                        <td className=\"border p-2\">\r\n                                                            <input\r\n                                                                type=\"number\"\r\n                                                                min=\"0\"\r\n                                                                value={article.quantity}\r\n                                                                onChange={(e) => updateQuantity(index, e.target.value)}\r\n                                                                className=\"p-1 border rounded w-20\"\r\n                                                                placeholder=\"Quantité\"\r\n                                                            />\r\n                                                        </td>\r\n                                                        <td className=\"border p-2\">\r\n                                                            <button\r\n                                                                type=\"button\"\r\n                                                                onClick={() => removeArticle(index)}\r\n                                                                className=\"text-red-500 hover:text-red-700\"\r\n                                                            >\r\n                                                                <TrashIcon className=\"h-5 w-5\" />\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                )}\r\n                                {newItem.articles.length === 0 && <p className=\"text-gray-500 italic\">Aucun article sélectionné.</p>}\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"col-span-2 bg-blue-500 text-white p-2 rounded hover:bg-blue-600\"\r\n                                disabled={isLoadingData}\r\n                            >\r\n                                Ajouter la livraison\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n                <div className=\"overflow-x-auto\">\r\n                    <table id=\"controle-table\" className=\"w-full text-sm text-left text-gray-500\">\r\n                        <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\r\n                            <tr>\r\n                                <th className=\"px-4 py-2\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) =>\r\n                                            setSelectedItems(\r\n                                                e.target.checked\r\n                                                    ? new Set(filteredData.map((_, i) => i))\r\n                                                    : new Set()\r\n                                            )\r\n                                        }\r\n                                        disabled={isLoadingData}\r\n                                    />\r\n                                </th>\r\n                                {COLUMNS.map((col) => (\r\n                                    <th key={col.key} className=\"px-4 py-2\">\r\n                                        {col.header}\r\n                                    </th>\r\n                                ))}\r\n                                <th className=\"px-4 py-2\">Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {filteredData.length === 0 ? (\r\n                                <tr>\r\n                                    <td colSpan={COLUMNS.length + 2} className=\"px-4 py-2 text-center text-gray-500\">\r\n                                        Aucune donnée disponible pour les filtres sélectionnés.\r\n                                    </td>\r\n                                </tr>\r\n                            ) : (\r\n                                filteredData.map((row, index) => (\r\n                                    <tr\r\n                                        key={index}\r\n                                        className={`${selectedItems.has(index) ? \"bg-gray-100\" : \"\"} border-b hover:bg-gray-50`}\r\n                                    >\r\n                                        <td className=\"px-4 py-2\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={selectedItems.has(index)}\r\n                                                onChange={() => toggleItem(index)}\r\n                                                disabled={isLoadingData}\r\n                                            />\r\n                                        </td>\r\n                                        {COLUMNS.map((col) => (\r\n                                            <td key={col.key} className=\"px-4 py-2\">\r\n                                                {col.key === 'articles' && row[col.key] ? (Array.isArray(row[col.key]) ? row[col.key].map(a => `${a.article} (${a.quantity})`).join(', ') : JSON.parse(row[col.key]).map(a => `${a.article} (${a.quantity})`).join(', ')) : (row[col.key] !== undefined && row[col.key] !== null ? row[col.key] : '')}\r\n                                            </td>\r\n                                        ))}\r\n                                        <td className=\"px-4 py-2\">\r\n                                            <button\r\n                                                onClick={() => handleDelete(index)}\r\n                                                className=\"text-red-500 hover:text-red-700\"\r\n                                                disabled={isLoadingData}\r\n                                            >\r\n                                                <TrashIcon className=\"h-5 w-5\" />\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </TitleCard>\r\n    );\r\n};\r\n\r\nexport default Controle;"],"names":["styleClass","children","className","title","topMargin","TopSideButtons","useDispatch","data","setData","useState","filteredData","setFilteredData","filters","setFilters","nOt","bs","typeSortie","selectedItems","setSelectedItems","Set","isLoadingData","setIsLoadingData","error","setError","showAddForm","setShowAddForm","newItem","setNewItem","type_sortie","nature_sortie","magasin","articles","mb51Articles","setMb51Articles","BASE_URL","process","COLUMNS","header","key","TYPE_SORTIE_OPTIONS","value","label","LOCAL_OPTIONS","responsable","RESPONSABLE_MAGASIN","useEffect","fetchData","async","res","fetch","console","log","status","statusText","ok","Error","json","err","message","fetchMb51Articles","url","payload","method","headers","body","JSON","stringify","normalizedData","map","item","n_ot","trim","toLowerCase","le","commande_achat","n_reservation","local","demandeur","preparateur","responsable_local","parse","applyFilters","filtered","filter","includes","updateItems","action","selectedLocal","find","loc","moment","format","itemToAdd","a","article","designation_article","quantity","size","nOtsToRemove","Array","from","index","type","placeholder","onChange","e","target","option","onClick","disabled","ws","XLSX","wb","printWindow","window","open","printContent","col","join","length","row","isArray","undefined","document","write","close","print","onSubmit","preventDefault","required","readOnly","split","some","prev","addArticle","designation","min","updatedArticles","updateQuantity","splice","removeArticle","id","checked","_","i","colSpan","has","newSelected","delete","add","toggleItem","nOtToRemove","handleDelete"],"sourceRoot":""}