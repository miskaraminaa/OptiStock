{"version":3,"file":"static/js/694.19e3dfcf.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","get","_target","key","has","set","isAnimationControls","v","start","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","getValueTransition","transition","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","frameloop","push","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","Math","max","min","wake","keepAlive","immediate","i","length","frame","cancelFrame","frameSteps","requestAnimationFrame","transformPropOrder","transformProps","positionalKeys","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","constructor","this","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","clearTime","time","newTime","queueMicrotask","collectMotionValues","MotionValue","init","options","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","addDependent","removeDependent","getPrevious","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isKeyframesTarget","Array","isArray","setMotionValue","hasValue","getValue","addValue","setTarget","transitionEnd","target","isMotionValue","Boolean","addValueToWillChange","willChange","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","combineFunctions","pipe","transformers","clamp","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","layout","mainThread","waapi","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","split","trim","number","parse","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","transformer","map","hueToRgb","p","q","t","mixImmediate","mixNumber","from","to","progress","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","getSpringOptions","springOptions","isResolvedFromDuration","root","PI","derived","spring","optionsOrVisualDuration","keyframes","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","createMixers","customMixer","mixers","mixerFactory","numMixers","easingFunction","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","input","isClamp","inputLength","isZeroDeltaRange","reverse","interpolator","progressInRange","interpolate","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","speed","resolvedKeyframes","filter","useFirstKeyframe","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","holdTime","playbackSpeed","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","top","_bbox","left","bottom","right","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","window","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","isGenerator","NativeAnimation","finishedTime","pseudoElement","isPseudoElement","applyGeneratorOptions","valueName","keyframeOptions","fill","iterations","direction","finally","startWaapiAnimation","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","isObject","isHTMLElement","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","transformTemplate","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","animateMotionValue","valueTransition","assign","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","animateVariant","variant","resolved","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","SCALE_MIN","SCALE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","ref","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","isSVGElement","compareByDepth","depth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isElementKeyboardAccessible","tabIndex","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","enableKeyboardPress","focusEvent","eventOptions","currentTarget","handleKeydown","handleKeyup","isValidPressEvent","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","targetOrSelector","onPressStart","targets","cancelEvents","startPress","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","hasAttribute","press","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","int","transformValueTypes","scaleZ","perspective","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","filterProps","isDom","forwardMotionProps","filteredProps","lowercaseSVGElements","isSVGComponent","createUseRender","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","svgMotionConfig","createMotionComponentFactory","baseConfig","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","parseCSSVariable","exec","token1","token2","fallback","getVariableValue","getPropertyValue","trimmed","isZeroValueString","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","createDomVisualElement","motion"],"sourceRoot":""}