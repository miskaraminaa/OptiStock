{"version":3,"file":"static/js/791.2f016b6b.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Input/InputText.js","components/Typography/ErrorText.js","components/Typography/Subtitle.js","containers/Header.js","routes/index.js","containers/PageContent.js","containers/SidebarSubmenu.js","config/routes.js","containers/LeftSidebar.js","containers/RightSidebar.js","features/leads/components/AddLeadModalBody.js","features/common/components/ConfirmationModalBody.js","containers/ModalLayout.js","containers/Layout.js","pages/protected/Explorer.js","pages/protected/Rotations.jsx","utils/globalConstantUtil.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\r\n\r\n  \r\n  function TitleCard({title, children, topMargin, TopSideButtons}){\r\n      return(\r\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\r\n\r\n            {/* Title for Card */}\r\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n                {title}\r\n\r\n                {/* Top side button, show only if present */}\r\n                {\r\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n                }\r\n              </Subtitle>\r\n              \r\n              <div className=\"divider mt-2\"></div>\r\n          \r\n              {/** Card Body */}\r\n              <div className='h-full w-full pb-6 bg-base-100'>\r\n                  {children}\r\n              </div>\r\n          </div>\r\n          \r\n      )\r\n  }\r\n  \r\n  \r\n  export default TitleCard","import { useState } from \"react\"\r\n\r\n\r\nfunction InputText({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\r\n\r\n    const [value, setValue] = useState(defaultValue)\r\n\r\n    const updateInputValue = (val) => {\r\n        setValue(val)\r\n        updateFormValue({updateType, value : val})\r\n    }\r\n\r\n    return(\r\n        <div className={`form-control w-full ${containerStyle}`}>\r\n            <label className=\"label\">\r\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\r\n            </label>\r\n            <input type={type || \"text\"} value={value} placeholder={placeholder || \"\"} onChange={(e) => updateInputValue(e.target.value)}className=\"input  input-bordered w-full \" />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default InputText","function ErrorText({styleClass, children}){\r\n    return(\r\n        <p className={`text-center  text-error ${styleClass}`}>{children}</p>\r\n    )\r\n}\r\n\r\nexport default ErrorText"," function Subtitle({styleClass, children}){\r\n    return(\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","import { themeChange } from 'theme-change'\r\nimport React, {  useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Bars3Icon  from '@heroicons/react/24/outline/Bars3Icon'\r\nimport MoonIcon from '@heroicons/react/24/outline/MoonIcon'\r\nimport SunIcon from '@heroicons/react/24/outline/SunIcon'\r\nimport { openRightDrawer } from '../features/common/rightDrawerSlice';\r\nimport { RIGHT_DRAWER_TYPES } from '../utils/globalConstantUtil'\r\n\r\nimport { NavLink,  Routes, Link , useLocation} from 'react-router-dom'\r\n\r\n\r\nfunction Header(){\r\n\r\n    const dispatch = useDispatch()\r\n    const {noOfNotifications, pageTitle} = useSelector(state => state.header)\r\n    const [currentTheme, setCurrentTheme] = useState(localStorage.getItem(\"theme\"))\r\n\r\n    useEffect(() => {\r\n        themeChange(false)\r\n        if(currentTheme === null){\r\n            if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ) {\r\n                setCurrentTheme(\"dark\")\r\n            }else{\r\n                setCurrentTheme(\"light\")\r\n            }\r\n        }\r\n        // 👆 false parameter is required for react project\r\n      }, [])\r\n\r\n\r\n\r\n\r\n    function logoutUser(){\r\n        localStorage.clear();\r\n        window.location.href = '/'\r\n    }\r\n\r\n    return(\r\n        // navbar fixed  flex-none justify-between bg-base-300  z-10 shadow-md\r\n        \r\n        <>\r\n            <div className=\"navbar sticky top-0 bg-base-100  z-10 shadow-md \">\r\n\r\n\r\n                {/* Menu toogle for mobile view or small screen */}\r\n                <div className=\"flex-1\">\r\n                    <label htmlFor=\"left-sidebar-drawer\" className=\"btn btn-primary drawer-button lg:hidden\">\r\n                    <Bars3Icon className=\"h-5 inline-block w-5\"/></label>\r\n                    <h1 className=\"text-2xl font-semibold ml-2\">{pageTitle}</h1>\r\n                </div>\r\n\r\n                \r\n\r\n            <div className=\"flex-none \">\r\n\r\n                {/* Multiple theme selection, uncomment this if you want to enable multiple themes selection, \r\n                also includes corporate and retro themes in tailwind.config file */}\r\n                \r\n                {/* <select className=\"select select-sm mr-4\" data-choose-theme>\r\n                    <option disabled selected>Theme</option>\r\n                    <option value=\"light\">Default</option>\r\n                    <option value=\"dark\">Dark</option>\r\n                    <option value=\"corporate\">Corporate</option>\r\n                    <option value=\"retro\">Retro</option>\r\n                </select> */}\r\n\r\n\r\n            {/* Light and dark theme selection toogle **/}\r\n            <label className=\"swap \">\r\n                <input type=\"checkbox\"/>\r\n                <SunIcon data-set-theme=\"light\" data-act-class=\"ACTIVECLASS\" className={\"fill-current w-6 h-6 \"+(currentTheme === \"dark\" ? \"swap-on\" : \"swap-off\")}/>\r\n                <MoonIcon data-set-theme=\"dark\" data-act-class=\"ACTIVECLASS\" className={\"fill-current w-6 h-6 \"+(currentTheme === \"light\" ? \"swap-on\" : \"swap-off\")} />\r\n            </label>\r\n\r\n\r\n\r\n                {/* Profile icon, opening menu on click */}\r\n                <div className=\"dropdown dropdown-end ml-4\">\r\n                        <label tabIndex={0} className=\"btn btn-ghost btn-circle avatar\">\r\n                            <div className=\"w-10 rounded-full\">\r\n                                <img src=\"/ocp.png\" alt=\"profile\" />\r\n                            </div>\r\n                        </label>\r\n\r\n                    <ul tabIndex={0} className=\"menu menu-compact dropdown-content mt-3 p-2 shadow bg-base-100 rounded-box w-52\">\r\n                    \r\n                        <div className=\"divider mt-0 mb-0\"></div>\r\n                        <li><a onClick={logoutUser}>Logout</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","import { lazy } from 'react';\r\nimport Rotations from '../pages/protected/Rotations';\r\nimport Explorer from '../pages/protected/Explorer';\r\n\r\nconst Dashboard = lazy(() => import('../pages/protected/Dashboard'));\r\nconst Welcome = lazy(() => import('../pages/protected/Welcome'));\r\nconst Charts = lazy(() => import('../pages/protected/Charts'));\r\nconst Leads = lazy(() => import('../pages/protected/Leads'));\r\nconst Dimensions = lazy(() => import('../pages/protected/Dimensions'));\r\n\r\nconst routes = [\r\n  {\r\n    path: '/dashboard', \r\n    component: Dashboard, // view rendered\r\n  },\r\n  {\r\n    path: '/welcome', // the url\r\n    component: Welcome, // view rendered\r\n  },\r\n  {\r\n    path: '/leads',\r\n    component: Leads,\r\n  },\r\n  {\r\n    path: '/charts',\r\n    component: Charts,\r\n  },\r\n  {\r\n    path: '/dimensions',\r\n    component: Dimensions,\r\n  },\r\n  {\r\n    path: '/rotations',\r\n    component: Rotations,\r\n  },\r\n  {\r\n    path: '/explorer', \r\n    component: Explorer, \r\n  },\r\n];\r\n\r\nexport default routes;","import Header from \"./Header\"\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\r\nimport routes from '../routes'\r\nimport { Suspense, lazy } from 'react'\r\nimport SuspenseContent from \"./SuspenseContent\"\r\nimport { useSelector } from 'react-redux'\r\nimport { useEffect, useRef } from \"react\"\r\n\r\nconst Page404 = lazy(() => import('../pages/protected/404'))\r\n\r\n\r\nfunction PageContent(){\r\n    const mainContentRef = useRef(null);\r\n    const {pageTitle} = useSelector(state => state.header)\r\n\r\n\r\n    // Scroll back to top on new page load\r\n    useEffect(() => {\r\n        mainContentRef.current.scroll({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n          });\r\n      }, [pageTitle])\r\n\r\n    return(\r\n        <div className=\"drawer-content flex flex-col \">\r\n            <Header/>\r\n            <main className=\"flex-1 overflow-y-auto md:pt-4 pt-4 px-6  bg-base-200\" ref={mainContentRef}>\r\n                <Suspense fallback={<SuspenseContent />}>\r\n                        <Routes>\r\n                            {\r\n                                routes.map((route, key) => {\r\n                                    return(\r\n                                        <Route\r\n                                            key={key}\r\n                                            exact={true}\r\n                                            path={`${route.path}`}\r\n                                            element={<route.component />}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                            {/* Redirecting unknown url to 404 page */}\r\n                            <Route path=\"*\" element={<Page404 />} />\r\n                        </Routes>\r\n                </Suspense>\r\n                <div className=\"h-16\"></div>\r\n            </main>\r\n        </div> \r\n    )\r\n}\r\n\r\n\r\nexport default PageContent\r\n","import ChevronDownIcon from  '@heroicons/react/24/outline/ChevronDownIcon'\r\nimport {useEffect, useState} from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n\r\nfunction SidebarSubmenu({submenu, name, icon}){\r\n    const location = useLocation()\r\n    const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n\r\n    /** Open Submenu list if path found in routes, this is for directly loading submenu routes  first time */\r\n    useEffect(() => {\r\n        if(submenu.filter(m => {return m.path === location.pathname})[0])setIsExpanded(true)\r\n    }, [])\r\n\r\n    return (\r\n        <div className='flex flex-col'>\r\n\r\n            {/** Route header */}\r\n            <div className='w-full block' onClick={() => setIsExpanded(!isExpanded)}>\r\n                {icon} {name} \r\n                <ChevronDownIcon className={'w-5 h-5 mt-1 float-right delay-400 duration-500 transition-all  ' + (isExpanded ? 'rotate-180' : '')}/>\r\n            </div>\r\n\r\n            {/** Submenu list */}\r\n            <div className={` w-full `+ (isExpanded ? \"\" : \"hidden\")}>\r\n                <ul className={`menu menu-compact`}>\r\n                {\r\n                    submenu.map((m, k) => {\r\n                        return(\r\n                            <li key={k}>\r\n                                <Link to={m.path}>\r\n                                    {m.icon} {m.name}\r\n                                    {\r\n                                            location.pathname == m.path ? (<span className=\"absolute mt-1 mb-1 inset-y-0 left-0 w-1 rounded-tr-md rounded-br-md bg-primary \"\r\n                                                aria-hidden=\"true\"></span>) : null\r\n                                    }\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarSubmenu","import { lazy } from 'react';\r\nimport Squares2X2Icon from '@heroicons/react/24/outline/Squares2X2Icon';\r\nimport DocumentIcon from '@heroicons/react/24/outline/DocumentIcon';\r\nimport ArrowLeftOnRectangleIcon from '@heroicons/react/24/outline/ArrowLeftOnRectangleIcon';\r\nimport Cog6ToothIcon from '@heroicons/react/24/outline/Cog6ToothIcon';\r\nimport ChartBarIcon from '@heroicons/react/24/outline/ChartBarIcon';\r\nimport InboxArrowDownIcon from '@heroicons/react/24/outline/InboxArrowDownIcon';\r\nimport KeyIcon from '@heroicons/react/24/outline/KeyIcon';\r\nimport CubeIcon from '@heroicons/react/24/outline/CubeIcon';\r\nimport ArrowPathIcon from '@heroicons/react/24/outline/ArrowPathIcon';\r\nimport ClipboardDocumentListIcon from '@heroicons/react/24/outline/ClipboardDocumentListIcon';\r\n\r\n// Lazy-loaded components\r\nconst Dashboard = lazy(() => import('../pages/protected/Dashboard'));\r\nconst Welcome = lazy(() => import('../pages/protected/Welcome'));\r\nconst Charts = lazy(() => import('../pages/protected/Charts'));\r\nconst Leads = lazy(() => import('../pages/protected/Leads'));\r\nconst Dimensions = lazy(() => import('../pages/protected/Dimensions'));\r\nconst Rotations = lazy(() => import('../pages/protected/Rotations'));\r\nconst Explorer = lazy(() => import('../pages/protected/Explorer'));\r\n\r\nconst ForgotPassword = lazy(() => import('../pages/ForgotPassword'));\r\n\r\nconst iconClasses = `h-6 w-6`;\r\nconst submenuIconClasses = `h-5 w-5`;\r\n\r\nconst logoutUser = () => {\r\n    console.log(`[${new Date().toISOString()}] Déconnexion déclenchée`);\r\n    localStorage.clear();\r\n    console.log(`[${new Date().toISOString()}] Stockage local vidé :`, localStorage);\r\n    window.location.href = '/login';\r\n};\r\n\r\nconst routes = [\r\n    {\r\n        path: '/app/dashboard',\r\n        component: Dashboard,\r\n        icon: <Squares2X2Icon className={iconClasses} />,\r\n        name: 'Téléchargement des fichiers',\r\n    },\r\n    {\r\n        path: '/app/leads',\r\n        component: Leads,\r\n        icon: <InboxArrowDownIcon className={iconClasses} />,\r\n        name: 'Livraison',\r\n    },\r\n    {\r\n        path: '/app/charts',\r\n        component: Charts,\r\n        icon: <ChartBarIcon className={iconClasses} />,\r\n        name: 'Analytique',\r\n    },\r\n    {\r\n        path: '/app/dimensions',\r\n        component: Dimensions,\r\n        icon: <CubeIcon className={iconClasses} />,\r\n        name: 'Dimensions',\r\n    },\r\n    {\r\n        path: '/app/rotations',\r\n        component: Rotations,\r\n        icon: <ArrowPathIcon className={iconClasses} />,\r\n        name: 'Calcul des rotations',\r\n    },\r\n    {\r\n        path: '/app/explorer',\r\n        component: Explorer,\r\n        icon: <ClipboardDocumentListIcon className={iconClasses} />,\r\n        name: 'Explorer Articles',\r\n    },\r\n    {\r\n        path: '',\r\n        icon: <Cog6ToothIcon className={`${iconClasses} inline`} />,\r\n        name: 'Paramètres',\r\n        submenu: [\r\n            {\r\n                path: '/forgot-password',\r\n                component: ForgotPassword,\r\n                icon: <KeyIcon className={submenuIconClasses} />,\r\n                name: 'Mot de passe oublié',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: '/app/welcome',\r\n        component: Welcome,\r\n        icon: <DocumentIcon className={iconClasses} />,\r\n        name: 'Bienvenue',\r\n    },\r\n    {\r\n        path: null,\r\n        component: () => logoutUser(),\r\n        icon: <ArrowLeftOnRectangleIcon className={iconClasses} />,\r\n        name: 'Déconnexion',\r\n        onClick: logoutUser,\r\n    },\r\n];\r\n\r\nexport default routes;","import React from 'react';\r\nimport { NavLink, Link, useLocation } from 'react-router-dom';\r\nimport SidebarSubmenu from './SidebarSubmenu';\r\nimport XMarkIcon from '@heroicons/react/24/outline/XMarkIcon';\r\nimport routes from '../config/routes'; // Updated to use unified routes\r\n\r\nfunction LeftSidebar() {\r\n    const location = useLocation();\r\n\r\n    const close = () => {\r\n        document.getElementById('left-sidebar-drawer').click();\r\n    };\r\n\r\n    return (\r\n        <div className=\"drawer-side z-30\">\r\n            <label htmlFor=\"left-sidebar-drawer\" className=\"drawer-overlay\"></label>\r\n            <ul className=\"menu pt-2 w-80 bg-base-100 min-h-full text-base-content\">\r\n                <button\r\n                    className=\"btn btn-ghost bg-base-300 btn-circle z-50 top-0 right-0 mt-4 mr-2 absolute lg:hidden\"\r\n                    onClick={close}\r\n                >\r\n                    <XMarkIcon className=\"h-5 inline-block w-5\" />\r\n                </button>\r\n\r\n                <li className=\"mb-2 font-semibold text-xl\">\r\n                    <Link to=\"/app/welcome\">\r\n                        <img className=\"mask mask-squircle w-10\" src=\"/stock-management.png\" alt=\"OptiStock Logo\" />\r\n                        OptiStock\r\n                    </Link>\r\n                </li>\r\n\r\n                {routes.map((route, k) => (\r\n                    <li key={k}>\r\n                        {route.submenu ? (\r\n                            <SidebarSubmenu {...route} />\r\n                        ) : route.onClick ? (\r\n                            <button\r\n                                onClick={route.onClick}\r\n                                className=\"font-normal flex items-center w-full p-2 rounded hover:bg-base-200\"\r\n                            >\r\n                                {route.icon} {route.name}\r\n                            </button>\r\n                        ) : (\r\n                            <NavLink\r\n                                end\r\n                                to={route.path}\r\n                                className={({ isActive }) => `${isActive ? 'font-semibold bg-base-200' : 'font-normal'}`}\r\n                            >\r\n                                {route.icon} {route.name}\r\n                                {location.pathname === route.path ? (\r\n                                    <span\r\n                                        className=\"absolute inset-y-0 left-0 w-1 rounded-tr-md rounded-br-md bg-primary\"\r\n                                        aria-hidden=\"true\"\r\n                                    ></span>\r\n                                ) : null}\r\n                            </NavLink>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftSidebar;","import XMarkIcon from '@heroicons/react/24/solid/XMarkIcon'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport NotificationBodyRightDrawer from '../features/common/components/NotificationBodyRightDrawer'\r\nimport { closeRightDrawer } from '../features/common/rightDrawerSlice'\r\nimport { RIGHT_DRAWER_TYPES } from '../utils/globalConstantUtil'\r\n\r\n\r\nfunction RightSidebar() {\r\n\r\n    const { isOpen, bodyType, extraObject, header } = useSelector(state => state.rightDrawer)\r\n    const dispatch = useDispatch()\r\n\r\n    const close = (e) => {\r\n        dispatch(closeRightDrawer(e))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={\" fixed overflow-hidden z-20 bg-gray-900 bg-opacity-25 inset-0 transform ease-in-out \" + (isOpen ? \" transition-opacity opacity-100 duration-500 translate-x-0  \" : \" transition-all delay-500 opacity-0 translate-x-full  \")}>\r\n\r\n            <section className={\"w-80 md:w-96  right-0 absolute bg-base-100 h-full shadow-xl delay-400 duration-500 ease-in-out transition-all transform  \" + (isOpen ? \" translate-x-0 \" : \" translate-x-full \")}>\r\n\r\n                <div className=\"relative  pb-5 flex flex-col  h-full\">\r\n\r\n                    {/* Header */}\r\n                    <div className=\"navbar   flex pl-4 pr-4   shadow-md \">\r\n                        <button className=\"float-left btn btn-circle btn-outline btn-sm\" onClick={() => close()}>\r\n                            <XMarkIcon className=\"h-5 w-5\" />\r\n                        </button>\r\n                        <span className=\"ml-2 font-bold text-xl\">{header}</span>\r\n                    </div>\r\n\r\n\r\n  \r\n                    {/* ------------------ Content End ------------------ */}\r\n                </div>\r\n\r\n            </section>\r\n\r\n            <section className=\" w-screen h-full cursor-pointer \" onClick={() => close()} ></section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RightSidebar","import { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport InputText from '../../../components/Input/InputText'\r\nimport ErrorText from '../../../components/Typography/ErrorText'\r\nimport { showNotification } from \"../../common/headerSlice\"\r\nimport { addNewLead } from \"../leadSlice\"\r\n\r\nconst INITIAL_LEAD_OBJ = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\"\r\n}\r\n\r\nfunction AddLeadModalBody({ closeModal }) {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n    const [leadObj, setLeadObj] = useState(INITIAL_LEAD_OBJ)\r\n\r\n\r\n    const saveNewLead = () => {\r\n        if (leadObj.first_name.trim() === \"\") return setErrorMessage(\"First Name is required!\")\r\n        else if (leadObj.email.trim() === \"\") return setErrorMessage(\"Email id is required!\")\r\n        else {\r\n            let newLeadObj = {\r\n                \"id\": 7,\r\n                \"email\": leadObj.email,\r\n                \"first_name\": leadObj.first_name,\r\n                \"last_name\": leadObj.last_name,\r\n                \"avatar\": \"https://reqres.in/img/faces/1-image.jpg\"\r\n            }\r\n            dispatch(addNewLead({ newLeadObj }))\r\n            dispatch(showNotification({ message: \"New Lead Added!\", status: 1 }))\r\n            closeModal()\r\n        }\r\n    }\r\n\r\n    const updateFormValue = ({ updateType, value }) => {\r\n        setErrorMessage(\"\")\r\n        setLeadObj({ ...leadObj, [updateType]: value })\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <InputText type=\"text\" defaultValue={leadObj.first_name} updateType=\"first_name\" containerStyle=\"mt-4\" labelTitle=\"First Name\" updateFormValue={updateFormValue} />\r\n\r\n            <InputText type=\"text\" defaultValue={leadObj.last_name} updateType=\"last_name\" containerStyle=\"mt-4\" labelTitle=\"Last Name\" updateFormValue={updateFormValue} />\r\n\r\n            <InputText type=\"email\" defaultValue={leadObj.email} updateType=\"email\" containerStyle=\"mt-4\" labelTitle=\"Email Id\" updateFormValue={updateFormValue} />\r\n\r\n\r\n            <ErrorText styleClass=\"mt-16\">{errorMessage}</ErrorText>\r\n            <div className=\"modal-action\">\r\n                <button className=\"btn btn-ghost\" onClick={() => closeModal()}>Cancel</button>\r\n                <button className=\"btn btn-primary px-6\" onClick={() => saveNewLead()}>Save</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddLeadModalBody","import {useDispatch, useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\nimport { CONFIRMATION_MODAL_CLOSE_TYPES, MODAL_CLOSE_TYPES } from '../../../utils/globalConstantUtil'\r\nimport { deleteLead } from '../../leads/leadSlice'\r\nimport { showNotification } from '../headerSlice'\r\n\r\nfunction ConfirmationModalBody({ extraObject, closeModal}){\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { message, type, _id, index} = extraObject\r\n\r\n\r\n    const proceedWithYes = async() => {\r\n        if(type === CONFIRMATION_MODAL_CLOSE_TYPES.LEAD_DELETE){\r\n            // positive response, call api or dispatch redux function\r\n            dispatch(deleteLead({index}))\r\n            dispatch(showNotification({message : \"Lead Deleted!\", status : 1}))\r\n        }\r\n        closeModal()\r\n    }\r\n\r\n    return(\r\n        <> \r\n        <p className=' text-xl mt-8 text-center'>\r\n            {message}\r\n        </p>\r\n\r\n        <div className=\"modal-action mt-12\">\r\n                \r\n                <button className=\"btn btn-outline   \" onClick={() => closeModal()}>Cancel</button>\r\n\r\n                <button className=\"btn btn-primary w-36\" onClick={() => proceedWithYes()}>Yes</button> \r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConfirmationModalBody","import { useEffect } from 'react'\r\nimport { MODAL_BODY_TYPES } from '../utils/globalConstantUtil'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { closeModal } from '../features/common/modalSlice'\r\nimport AddLeadModalBody from '../features/leads/components/AddLeadModalBody'\r\nimport ConfirmationModalBody from '../features/common/components/ConfirmationModalBody'\r\n\r\n\r\nfunction ModalLayout(){\r\n\r\n\r\n    const {isOpen, bodyType, size, extraObject, title} = useSelector(state => state.modal)\r\n    const dispatch = useDispatch()\r\n\r\n    const close = (e) => {\r\n        dispatch(closeModal(e))\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        {/* The button to open modal */}\r\n\r\n            {/* Put this part before </body> tag */}\r\n            <div className={`modal ${isOpen ? \"modal-open\" : \"\"}`}>\r\n            <div className={`modal-box  ${size === 'lg' ? 'max-w-5xl' : ''}`}>\r\n                <button className=\"btn btn-sm btn-circle absolute right-2 top-2\" onClick={() => close()}>✕</button>\r\n                <h3 className=\"font-semibold text-2xl pb-6 text-center\">{title}</h3>\r\n\r\n\r\n                {/* Loading modal body according to different modal type */}\r\n                {\r\n                    {\r\n                             [MODAL_BODY_TYPES.LEAD_ADD_NEW] : <AddLeadModalBody closeModal={close} extraObject={extraObject}/>,\r\n                             [MODAL_BODY_TYPES.CONFIRMATION] : <ConfirmationModalBody extraObject={extraObject} closeModal={close}/>,\r\n                             [MODAL_BODY_TYPES.DEFAULT] : <div></div>\r\n                    }[bodyType]\r\n                }\r\n            </div>\r\n            </div>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default ModalLayout","import PageContent from \"./PageContent\"\r\nimport LeftSidebar from \"./LeftSidebar\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport RightSidebar from './RightSidebar'\r\nimport { useEffect } from \"react\"\r\nimport  {  removeNotificationMessage } from \"../features/common/headerSlice\"\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport ModalLayout from \"./ModalLayout\"\r\n\r\nfunction Layout(){\r\n  const dispatch = useDispatch()\r\n  const {newNotificationMessage, newNotificationStatus} = useSelector(state => state.header)\r\n\r\n\r\n  useEffect(() => {\r\n      if(newNotificationMessage !== \"\"){\r\n          if(newNotificationStatus === 1)NotificationManager.success(newNotificationMessage, 'Success')\r\n          if(newNotificationStatus === 0)NotificationManager.error( newNotificationMessage, 'Error')\r\n          dispatch(removeNotificationMessage())\r\n      }\r\n  }, [newNotificationMessage])\r\n\r\n    return(\r\n      <>\r\n        { /* Left drawer - containing page content and side bar (always open) */ }\r\n        <div className=\"drawer  lg:drawer-open\">\r\n            <input id=\"left-sidebar-drawer\" type=\"checkbox\" className=\"drawer-toggle\" />\r\n            <PageContent/>\r\n            <LeftSidebar />\r\n        </div>\r\n\r\n        { /* Right drawer - containing secondary content like notifications list etc.. */ }\r\n        <RightSidebar />\r\n\r\n\r\n        {/** Notification layout container */}\r\n        <NotificationContainer />\r\n\r\n      {/* Modal layout container */}\r\n        <ModalLayout />\r\n\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Layout","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Explorer = () => {\r\n    const [articles, setArticles] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(() => {\r\n        const fetchArticles = async () => {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                setError('No session found. Please log in.');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await axios.get(`${API_URL}/explore`, {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                    timeout: 10000,\r\n                });\r\n                if (!response.data || !response.data.data) {\r\n                    throw new Error('Invalid response data');\r\n                }\r\n                setArticles(response.data.data);\r\n            } catch (err) {\r\n                const errorMessage = err.response?.data?.message || err.message || 'Failed to fetch articles';\r\n                setError(errorMessage.includes('404') ? 'Resource not found' : errorMessage);\r\n                console.error(`[${new Date().toISOString()}] API Error:`, err.response?.data || err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchArticles();\r\n    }, []);\r\n\r\n    if (loading) return <div className=\"flex items-center justify-center h-screen bg-gray-100\"><p className=\"text-xl text-gray-600\">Loading...</p></div>;\r\n    if (error) return (\r\n        <div className=\"flex items-center justify-center h-screen bg-gray-100\">\r\n            <div>\r\n                <p className=\"text-xl text-red-600\">{error}</p>\r\n                <button className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\" onClick={() => window.location.reload()}>Retry</button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"max-w-6xl mx-auto p-6 bg-gray-100 min-h-screen\">\r\n            <h1 className=\"text-3xl font-bold mb-6 text-center\">Article Exploration</h1>\r\n            {articles.length === 0 ? (\r\n                <p className=\"text-center text-gray-500\">No articles to display.</p>\r\n            ) : (\r\n                <div className=\"overflow-x-auto\">\r\n                    <table className=\"w-full border-collapse bg-white shadow-md rounded-lg\">\r\n                        <thead>\r\n                            <tr className=\"bg-gray-200\">\r\n                                <th className=\"border p-2\">Article</th>\r\n                                <th className=\"border p-2\">Quantité</th>\r\n                                <th className=\"border p-2\">Type de Stock</th>\r\n                                <th className=\"border p-2\">Désignation Type Stock</th>\r\n                                <th className=\"border p-2\">Valeur Stock</th>\r\n                                <th className=\"border p-2\">LE Produit</th>\r\n                                <th className=\"border p-2\">LE Document</th>\r\n                                <th className=\"border p-2\">LE Statut Tâche</th>\r\n                                <th className=\"border p-2\">LE Statut Activité</th>\r\n                                <th className=\"border p-2\">LE Statut Prélèvement</th>\r\n                                <th className=\"border p-2\">LS Produit</th>\r\n                                <th className=\"border p-2\">LS Document</th>\r\n                                <th className=\"border p-2\">LS Statut Tache</th>\r\n                                <th className=\"border p-2\">LS Statut Activité</th>\r\n                                <th className=\"border p-2\">LS Statut Prélèvement</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {articles.map((article, index) => (\r\n                                <tr key={index} className=\"hover:bg-gray-100\">\r\n                                    <td className=\"border p-2\">{article.article || 'N/A'}</td>\r\n                                    <td className=\"border p-2\">{article.quantite || 'N/A'}</td>\r\n                                    <td className=\"border p-2\">{article.type_stock || 'N/A'}</td>\r\n                                    <td className=\"border p-2\">{article.designation_type_stock || 'N/A'}</td>\r\n                                    <td className=\"border p-2\">{article.valeur_stock || 'N/A'}</td>\r\n                                    <td className=\"border p-2\">{article.Produit || 'N/A'}</td>\r\n                                    <td className=\"border p-2\">{article.Document || 'N/A'}</td>\r\n                                    <td className=\"border p-2\">{article.Statut_tache_magasin || 'N/A'}</td>\r\n                                    <td className=\"border p-2\">{article.le_statut_activite || 'N/A'}</td>\r\n                                    <td className=\"border p-2\">{article.le_statut_prelevement || 'N/A'}</td>\r\n                                    <td className=\"border p-2\">{article.ls_produit || 'N/A'}</td>\r\n                                    <td className=\"border p-2\">{article.ls_document || 'N/A'}</td>\r\n                                    <td className=\"border p-2\">{article.ls_statut_tache || 'N/A'}</td>\r\n                                    <td className=\"border p-2\">{article.ls_statut_activite || 'N/A'}</td>\r\n                                    <td className=\"border p-2\">{article.ls_statut_prelevement || 'N/A'}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Explorer;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport TitleCard from \"../../components/Cards/TitleCard\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst Rotations = () => {\r\n    const [movementFile, setMovementFile] = useState(null);\r\n    const [stockFile, setStockFile] = useState(null);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [rotations, setRotations] = useState({\r\n        plant: [],\r\n        slc: [],\r\n        wj01: [],\r\n    });\r\n    const tableRef = useRef(null);\r\n\r\n    // Handle file selection\r\n    const handleFileChange = (e, fileType) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            if (fileType === \"movement\") setMovementFile(file);\r\n            else if (fileType === \"stock\") setStockFile(file);\r\n            setMessage(`${file.name} uploaded successfully.`);\r\n        }\r\n    };\r\n\r\n    // Placeholder for rotation calculation\r\n    const calculateRotations = () => {\r\n        if (!movementFile || !stockFile) {\r\n            setMessage(\"Please upload both movement and stock files.\");\r\n            return;\r\n        }\r\n\r\n        // Simulate reading and processing files (replace with actual logic)\r\n        const reader1 = new FileReader();\r\n        const reader2 = new FileReader();\r\n\r\n        reader1.onload = (e) => {\r\n            const movementData = new Uint8Array(e.target.result);\r\n            const workbook1 = XLSX.read(movementData, { type: \"array\" });\r\n            const sheet1 = workbook1.Sheets[workbook1.SheetNames[0]];\r\n            const movementJson = XLSX.utils.sheet_to_json(sheet1);\r\n\r\n            reader2.onload = (e) => {\r\n                const stockData = new Uint8Array(e.target.result);\r\n                const workbook2 = XLSX.read(stockData, { type: \"array\" });\r\n                const sheet2 = workbook2.Sheets[workbook2.SheetNames[0]];\r\n                const stockJson = XLSX.utils.sheet_to_json(sheet2);\r\n\r\n                // Placeholder rotation logic (customize based on your data structure)\r\n                const plantRotations = movementJson\r\n                    .filter((m) => m.Plant)\r\n                    .map((m) => ({\r\n                        id: m.ID || \"N/A\",\r\n                        plant: m.Plant,\r\n                        rotation: Math.random() * 100, // Replace with actual calculation\r\n                    }));\r\n                const slcRotations = movementJson\r\n                    .filter((m) => m.SLC)\r\n                    .map((m) => ({\r\n                        id: m.ID || \"N/A\",\r\n                        slc: m.SLC,\r\n                        rotation: Math.random() * 100, // Replace with actual calculation\r\n                    }));\r\n                const wj01Rotations = movementJson\r\n                    .filter((m) => m.WJ01)\r\n                    .map((m) => ({\r\n                        id: m.ID || \"N/A\",\r\n                        wj01: m.WJ01,\r\n                        rotation: Math.random() * 100, // Replace with actual calculation\r\n                    }));\r\n\r\n                setRotations({ plant: plantRotations, slc: slcRotations, wj01: wj01Rotations });\r\n                setMessage(\"Rotations calculated successfully.\");\r\n            };\r\n            reader2.readAsArrayBuffer(stockFile);\r\n        };\r\n        reader1.readAsArrayBuffer(movementFile);\r\n    };\r\n\r\n    // Handle Excel export\r\n    const handleExportExcel = (type) => {\r\n        const data =\r\n            type === \"plant\"\r\n                ? rotations.plant\r\n                : type === \"slc\"\r\n                    ? rotations.slc\r\n                    : rotations.wj01;\r\n        if (data.length === 0) {\r\n            setMessage(\"No data to export.\");\r\n            return;\r\n        }\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(data);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, `Rotation_${type}`);\r\n        const excelBuffer = XLSX.write(workbook, { bookType: \"xlsx\", type: \"array\" });\r\n        const blob = new Blob([excelBuffer], {\r\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\r\n        });\r\n        const url = URL.createObjectURL(blob);\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.download = `rotation_${type}_export_${new Date().toISOString().split(\"T\")[0]}.xlsx`;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        URL.revokeObjectURL(url);\r\n    };\r\n\r\n    // Handle print\r\n    const handlePrint = (type) => {\r\n        const printContent = tableRef.current;\r\n        if (!printContent) {\r\n            console.error(\"Table reference is null. Ensure the table is rendered.\");\r\n            return;\r\n        }\r\n\r\n        const printWindow = window.open(\"\", \"\", \"height=600,width=800\");\r\n        if (printWindow) {\r\n            printWindow.document.write(\"<html><head><title>Print</title>\");\r\n            printWindow.document.write(\r\n                \"<style>body { margin: 0; } table { width: 100%; border-collapse: collapse; } th, td { border: 1px solid #ddd; padding: 8px; text-align: left; } th { background-color: #f2f2f2; }</style>\"\r\n            );\r\n            printWindow.document.write(\"</head><body>\");\r\n            printWindow.document.write(printContent.outerHTML);\r\n            printWindow.document.write(\"</body></html>\");\r\n            printWindow.document.close();\r\n            printWindow.focus();\r\n            printWindow.print();\r\n            printWindow.close();\r\n        } else {\r\n            console.error(\"Failed to open print window. Check browser popup settings.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <TitleCard title=\"Calcul des Rotations\">\r\n            <div className=\"p-6 bg-white rounded-lg shadow-lg\">\r\n                {/* File Upload Section */}\r\n                <div className=\"mb-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-4\">Sélection des Fichiers</h2>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                Fichier Mouvement\r\n                            </label>\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\".xlsx, .xls\"\r\n                                onChange={(e) => handleFileChange(e, \"movement\")}\r\n                                className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                Fichier État de Stock\r\n                            </label>\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\".xlsx, .xls\"\r\n                                onChange={(e) => handleFileChange(e, \"stock\")}\r\n                                className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <button\r\n                        onClick={calculateRotations}\r\n                        className=\"mt-4 px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n                    >\r\n                        Calculer les Rotations\r\n                    </button>\r\n                </div>\r\n\r\n                {message && <p className=\"mt-4 text-sm text-center text-red-600\">{message}</p>}\r\n\r\n                {/* Display and Filter Results */}\r\n                <div className=\"mt-8\">\r\n                    {[\"plant\", \"slc\", \"wj01\"].map((type) => (\r\n                        <div key={type} className=\"mb-8\">\r\n                            <h2 className=\"text-xl font-semibold mb-4\">\r\n                                Rotation par {type === \"plant\" ? \"Plant\" : type === \"slc\" ? \"SLC\" : \"WJ01\"}\r\n                            </h2>\r\n                            <div className=\"mb-4 flex space-x-4\">\r\n                                <button\r\n                                    onClick={() => handleExportExcel(type)}\r\n                                    className=\"px-6 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\r\n                                >\r\n                                    Exporter en Excel\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => handlePrint(type)}\r\n                                    className=\"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n                                >\r\n                                    Imprimer\r\n                                </button>\r\n                            </div>\r\n                            {rotations[type].length > 0 ? (\r\n                                <div className=\"overflow-x-auto\">\r\n                                    <table ref={tableRef} className=\"min-w-full bg-white border border-gray-300\">\r\n                                        <thead>\r\n                                            <tr className=\"bg-gray-100\">\r\n                                                <th className=\"py-2 px-4 border-b text-left text-sm font-medium text-gray-700\">\r\n                                                    ID\r\n                                                </th>\r\n                                                <th className=\"py-2 px-4 border-b text-left text-sm font-medium text-gray-700\">\r\n                                                    {type === \"plant\" ? \"Plant\" : type === \"slc\" ? \"SLC\" : \"WJ01\"}\r\n                                                </th>\r\n                                                <th className=\"py-2 px-4 border-b text-left text-sm font-medium text-gray-700\">\r\n                                                    Rotation\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {rotations[type].map((item, index) => (\r\n                                                <tr key={index} className=\"hover:bg-gray-50\">\r\n                                                    <td className=\"py-2 px-4 border-b text-sm text-gray-900\">\r\n                                                        {item.id}\r\n                                                    </td>\r\n                                                    <td className=\"py-2 px-4 border-b text-sm text-gray-900\">\r\n                                                        {item[type]}\r\n                                                    </td>\r\n                                                    <td className=\"py-2 px-4 border-b text-sm text-gray-900\">\r\n                                                        {item.rotation.toFixed(2)}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            ) : (\r\n                                <p className=\"text-sm text-gray-600\">Aucune rotation calculée.</p>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </TitleCard>\r\n    );\r\n};\r\n\r\nexport default Rotations;","\r\nmodule.exports = Object.freeze({\r\n    MODAL_BODY_TYPES: {\r\n        USER_DETAIL: \"USER_DETAIL\",\r\n        LEAD_ADD_NEW: \"LEAD_ADD_NEW\",\r\n        CONFIRMATION: \"CONFIRMATION\",\r\n        DEFAULT: \"\",\r\n    },\r\n\r\n    RIGHT_DRAWER_TYPES: {\r\n        NOTIFICATION: \"NOTIFICATION\",\r\n        CALENDAR_EVENTS: \"CALENDAR_EVENTS\",\r\n    },\r\n\r\n    CONFIRMATION_MODAL_CLOSE_TYPES: {\r\n        LEAD_DELETE: \"LEAD_DELETE\",\r\n    },\r\n});"],"names":["title","children","topMargin","TopSideButtons","className","styleClass","labelTitle","labelStyle","type","containerStyle","defaultValue","placeholder","updateFormValue","updateType","value","setValue","useState","onChange","e","updateInputValue","val","target","useDispatch","noOfNotifications","pageTitle","useSelector","state","header","currentTheme","setCurrentTheme","localStorage","getItem","useEffect","themeChange","window","matchMedia","matches","htmlFor","Bars3Icon","SunIcon","MoonIcon","tabIndex","src","alt","onClick","clear","location","href","Dashboard","lazy","Welcome","Charts","path","component","Rotations","Explorer","Page404","mainContentRef","useRef","current","scroll","top","behavior","ref","Suspense","fallback","SuspenseContent","routes","route","key","exact","element","submenu","name","icon","useLocation","isExpanded","setIsExpanded","filter","m","pathname","ChevronDownIcon","map","k","to","Leads","Dimensions","ForgotPassword","iconClasses","logoutUser","console","log","Date","toISOString","Squares2X2Icon","InboxArrowDownIcon","ChartBarIcon","CubeIcon","ArrowPathIcon","ClipboardDocumentListIcon","Cog6ToothIcon","KeyIcon","DocumentIcon","ArrowLeftOnRectangleIcon","document","getElementById","click","XMarkIcon","end","isActive","isOpen","bodyType","extraObject","rightDrawer","dispatch","close","closeRightDrawer","INITIAL_LEAD_OBJ","first_name","last_name","email","closeModal","loading","setLoading","errorMessage","setErrorMessage","leadObj","setLeadObj","InputText","ErrorText","trim","newLeadObj","addNewLead","showNotification","message","status","saveNewLead","_id","index","async","CONFIRMATION_MODAL_CLOSE_TYPES","deleteLead","proceedWithYes","size","modal","MODAL_BODY_TYPES","newNotificationMessage","newNotificationStatus","NotificationManager","removeNotificationMessage","id","articles","setArticles","error","setError","token","response","axios","process","headers","Authorization","timeout","data","Error","err","includes","fetchArticles","reload","length","article","quantite","type_stock","designation_type_stock","valeur_stock","Produit","Document","Statut_tache_magasin","le_statut_activite","le_statut_prelevement","ls_produit","ls_document","ls_statut_tache","ls_statut_activite","ls_statut_prelevement","movementFile","setMovementFile","stockFile","setStockFile","setMessage","rotations","setRotations","plant","slc","wj01","tableRef","handleFileChange","fileType","file","files","accept","reader1","FileReader","reader2","onload","movementData","Uint8Array","result","workbook1","XLSX","sheet1","Sheets","SheetNames","movementJson","stockData","workbook2","sheet2","plantRotations","Plant","ID","rotation","Math","random","slcRotations","SLC","wj01Rotations","WJ01","readAsArrayBuffer","worksheet","workbook","excelBuffer","bookType","blob","Blob","url","URL","createObjectURL","link","createElement","download","split","body","appendChild","removeChild","revokeObjectURL","handleExportExcel","printContent","printWindow","open","write","outerHTML","focus","print","handlePrint","item","toFixed","module","exports","Object","freeze","USER_DETAIL","LEAD_ADD_NEW","CONFIRMATION","DEFAULT","RIGHT_DRAWER_TYPES","NOTIFICATION","CALENDAR_EVENTS","LEAD_DELETE"],"sourceRoot":""}