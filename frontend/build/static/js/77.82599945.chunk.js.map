{"version":3,"file":"static/js/77.82599945.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Typography/Subtitle.js","features/leads/index.js","pages/protected/Leads.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\"\r\n\r\n  \r\n  function TitleCard({title, children, topMargin, TopSideButtons}){\r\n      return(\r\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\r\n\r\n            {/* Title for Card */}\r\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n                {title}\r\n\r\n                {/* Top side button, show only if present */}\r\n                {\r\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n                }\r\n              </Subtitle>\r\n              \r\n              <div className=\"divider mt-2\"></div>\r\n          \r\n              {/** Card Body */}\r\n              <div className='h-full w-full pb-6 bg-base-100'>\r\n                  {children}\r\n              </div>\r\n          </div>\r\n          \r\n      )\r\n  }\r\n  \r\n  \r\n  export default TitleCard"," function Subtitle({styleClass, children}){\r\n    return(\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TitleCard from \"../../components/Cards/TitleCard\";\r\nimport { openModal } from \"../../features/common/modalSlice\";\r\nimport { CONFIRMATION_MODAL_CLOSE_TYPES, MODAL_BODY_TYPES } from \"../../utils/globalConstantUtil\";\r\nimport TrashIcon from \"@heroicons/react/24/outline/TrashIcon\";\r\nimport moment from \"moment\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst Livraison = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [fileNames, setFileNames] = useState([]);\r\n    const [selectedFile, setSelectedFile] = useState(\"\");\r\n    const [selectedType, setSelectedType] = useState(\"LE\");\r\n    const [data, setData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        status: \"\",\r\n        deliveryCode: \"\",\r\n        articleCode: \"\",\r\n    });\r\n    const [selectedItems, setSelectedItems] = useState(new Set());\r\n    const [isLoadingFiles, setIsLoadingFiles] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\n    // Column definitions\r\n    const LE_COLUMNS = [\r\n        { header: \"N° LE\", key: \"Document\" },\r\n        { header: \"Statut_tache_magasin\", key: \"Statut_tache_magasin\" },\r\n        { header: \"Produit\", key: \"Produit\" },\r\n        { header: \"designation_article\", key: \"designation_article\" },\r\n        { header: \"Famille\", key: \"famille\" },\r\n        { header: \"libelle_produit\", key: \"libelle_produit\" },\r\n        { header: \"Longueur\", key: \"longueur\" },\r\n        { header: \"Largeur\", key: \"largeur\" },\r\n        { header: \"Hauteur\", key: \"hauteur\" },\r\n        { header: \"Volume\", key: \"volume\" },\r\n        { header: \"Poids\", key: \"poids\" },\r\n        { header: \"Quantité\", key: \"Quantite\" },\r\n        { header: \"Poids Global\", key: \"poids_global\" },\r\n        { header: \"Volume/Quantité\", key: \"volume_quantite\" },\r\n        { header: \"Manutention\", key: \"manutention\" },\r\n        { header: \"Type Rayon\", key: \"Type_Rayon\" },\r\n        { header: \"Plant-SLC\", key: \"Plant_Storage\" },\r\n        { header: \"emplacement_cédant\", key: \"emplacement_cedant\" },\r\n        { header: \"Emplacement_prenant\", key: \"Emplacement_prenant\" },\r\n        { header: \"Emplacement_Final_EWM/Qte\", key: \"Emplacement_EWM_Qte\", style: { width: '200px' } },\r\n        { header: \"Qte_Théo_céd_UQA\", key: \"Qte_theo_ced_UQA\" },\r\n        { header: \"Quantité Entrante\", key: \"quantit\" },\r\n        { header: \"Qté écart\", key: \"quantite_ecart\" },\r\n        { header: \"statut_entree_stock\", key: \"statut_entree_stock\" },\r\n    ];\r\n\r\n    const LS_COLUMNS = [\r\n        { header: \"N° LS\", key: \"Document\" },\r\n        { header: \"Statut\", key: \"Statut_tache_magasin\" },\r\n        { header: \"Produit\", key: \"Produit\" },\r\n        { header: \"Designation\", key: \"designation_article\" },\r\n        { header: \"Famille\", key: \"famille\" },\r\n        { header: \"libelle_produit\", key: \"libelle_produit\" },\r\n        { header: \"Plant-SLC\", key: \"Plant_Storage\" },\r\n        { header: \"emplacement_cédant\", key: \"Emplacement_cedant\" },\r\n        { header: \"Emplacement_prenant\", key: \"Emplacement_prenant\" },\r\n        { header: \"Emplacement_EWM/Qte\", key: \"Emplacement_EWM_Qte\" },\r\n        { header: \"Qte_Théo_céd_UQA\", key: \"Qte_theo_ced_UQA\" },\r\n        { header: \"quantité\", key: \"quantit\" },\r\n        { header: \"qté écart\", key: \"quantite_ecart\" },\r\n        { header: \"statut_entree_stock\", key: \"statut_entree_stock\" },\r\n    ];\r\n\r\n    // Fetch available file names\r\n    useEffect(() => {\r\n        const fetchFiles = async () => {\r\n            setIsLoadingFiles(true);\r\n            setError(null);\r\n            setFileNames([]);\r\n            setSelectedFile(\"\");\r\n            const url = `${BASE_URL}/livraison/files`;\r\n            console.log(`Fetching files from: ${url} with type: ${selectedType}`);\r\n            try {\r\n                const res = await fetch(url, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ type: selectedType }),\r\n                });\r\n                console.log(`Response status: ${res.status}, URL: ${url}`);\r\n                if (!res.ok) {\r\n                    const errorText = await res.text();\r\n                    throw new Error(`HTTP error! status: ${res.status}, message: ${errorText}`);\r\n                }\r\n                const data = await res.json();\r\n                console.log(`Received files:`, data.files);\r\n                setFileNames(data.files || []);\r\n                setIsLoadingFiles(false);\r\n                if (data.files.length === 0) {\r\n                    setError(`No files available for type ${selectedType}.`);\r\n                }\r\n            } catch (err) {\r\n                console.error(\"Error fetching files:\", err);\r\n                setError(`Failed to load file names: ${err.message}`);\r\n                setIsLoadingFiles(false);\r\n            }\r\n        };\r\n        if (selectedType) {\r\n            fetchFiles();\r\n        }\r\n    }, [BASE_URL, selectedType]);\r\n\r\n    // Fetch data based on selected file and filters\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setError(null);\r\n            const url = `${BASE_URL}/livraison/process`;\r\n            const payload = {\r\n                type: selectedType,\r\n                fileName: selectedFile,\r\n                value: filters.articleCode || \"\",\r\n                stock: filters.status || \"Tous les statuts\",\r\n            };\r\n            console.log(`Fetching data from: ${url} with payload:`, payload);\r\n            try {\r\n                const res = await fetch(url, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(payload),\r\n                });\r\n                console.log(`Response status: ${res.status}, URL: ${url}`);\r\n                if (!res.ok) {\r\n                    const errorText = await res.text();\r\n                    throw new Error(`HTTP error! status: ${res.status}, message: ${errorText}`);\r\n                }\r\n                const data = await res.json();\r\n                console.log(`Received data:`, data);\r\n                setData(data);\r\n                setFilteredData(data);\r\n            } catch (err) {\r\n                console.error(\"Error fetching data:\", err);\r\n                setError(`Failed to load data for selected file: ${err.message}`);\r\n            }\r\n        };\r\n        if (selectedFile && selectedType) {\r\n            fetchData();\r\n        } else {\r\n            setData([]);\r\n            setFilteredData([]);\r\n            if (!selectedFile && selectedType) {\r\n                setError(\"Please select a file to load data.\");\r\n            }\r\n        }\r\n    }, [selectedFile, filters, BASE_URL, selectedType]);\r\n\r\n    // Toggle item selection\r\n    const toggleItem = (index) => {\r\n        const newSelected = new Set(selectedItems);\r\n        if (newSelected.has(index)) {\r\n            newSelected.delete(index);\r\n        } else {\r\n            newSelected.add(index);\r\n        }\r\n        setSelectedItems(newSelected);\r\n    };\r\n\r\n    // Add or remove items\r\n    const updateItems = (action) => {\r\n        if (action === \"add\") {\r\n            dispatch(\r\n                openModal({\r\n                    title: \"Ajouter un nouvel article\",\r\n                    bodyType: MODAL_BODY_TYPES.FORM,\r\n                    extraObject: {\r\n                        fields: selectedType === 'LE' ? [\r\n                            { name: 'Document', type: 'text', defaultValue: `LIV${moment().format(\"YYYYMMDDHHmmss\")}`, required: true },\r\n                            { name: 'Produit', type: 'text', defaultValue: 'ART001', required: true },\r\n                            { name: 'designation_article', type: 'text', defaultValue: 'New Item' },\r\n                            { name: 'famille', type: 'text', defaultValue: 'Default' },\r\n                            { name: 'libelle_produit', type: 'text', defaultValue: 'Default Product' },\r\n                            { name: 'Plant_Storage', type: 'text', defaultValue: 'Plant 1-Loc 1' },\r\n                            { name: 'emplacement_cedant', type: 'text', defaultValue: 'Loc 2' },\r\n                            { name: 'Emplacement_prenant', type: 'text', defaultValue: 'Loc 1' },\r\n                            { name: 'Emplacement_EWM_Qte', type: 'text', defaultValue: 'Loc 1/100' },\r\n                            { name: 'Qte_theo_ced_UQA', type: 'number', defaultValue: '100', required: true },\r\n                            { name: 'quantit', type: 'number', defaultValue: '95', required: true },\r\n                            { name: 'quantite_ecart', type: 'number', defaultValue: '5' },\r\n                            { name: 'Statut_tache_magasin', type: 'select', options: ['Non terminée', 'Terminée'], defaultValue: 'Non terminée' },\r\n                            { name: 'statut_entree_stock', type: 'select', options: ['Non terminée', 'Terminée'], defaultValue: 'Non terminée' },\r\n                            { name: 'longueur', type: 'number', defaultValue: '100' },\r\n                            { name: 'largeur', type: 'number', defaultValue: '50' },\r\n                            { name: 'hauteur', type: 'number', defaultValue: '20' },\r\n                            { name: 'volume', type: 'number', defaultValue: '100000' },\r\n                            { name: 'poids', type: 'number', defaultValue: '10' },\r\n                            { name: 'Quantite', type: 'number', defaultValue: '100' },\r\n                            { name: 'poids_global', type: 'number', defaultValue: '1000' },\r\n                            { name: 'volume_quantite', type: 'number', defaultValue: '1000' },\r\n                            { name: 'manutention', type: 'text', defaultValue: 'Manual' },\r\n                            { name: 'Type_Rayon', type: 'text', defaultValue: 'Standard' },\r\n                        ] : [\r\n                            { name: 'Document', type: 'text', defaultValue: `LIV${moment().format(\"YYYYMMDDHHmmss\")}`, required: true },\r\n                            { name: 'Produit', type: 'text', defaultValue: 'ART001', required: true },\r\n                            { name: 'designation_article', type: 'text', defaultValue: 'New Item' },\r\n                            { name: 'famille', type: 'text', defaultValue: 'Default' },\r\n                            { name: 'libelle_produit', type: 'text', defaultValue: 'Default Product' },\r\n                            { name: 'Plant_Storage', type: 'text', defaultValue: 'Plant 1-Loc 1' },\r\n                            { name: 'Emplacement_cedant', type: 'text', defaultValue: 'Loc 2' },\r\n                            { name: 'Emplacement_prenant', type: 'text', defaultValue: 'Loc 1' },\r\n                            { name: 'Emplacement_EWM_Qte', type: 'text', defaultValue: 'Loc 1/100' },\r\n                            { name: 'Qte_theo_ced_UQA', type: 'number', defaultValue: '100', required: true },\r\n                            { name: 'quantit', type: 'number', defaultValue: '95', required: true },\r\n                            { name: 'quantite_ecart', type: 'number', defaultValue: '5' },\r\n                            { name: 'Statut_tache_magasin', type: 'select', options: ['Non terminée', 'Terminée'], defaultValue: 'Non terminée' },\r\n                            { name: 'statut_entree_stock', type: 'select', options: ['Non terminée', 'Terminée'], defaultValue: 'Non terminée' },\r\n                        ],\r\n                        onSubmit: (formData) => {\r\n                            const newData = [...filteredData];\r\n                            // Validate quantite_ecart\r\n                            if (formData.Qte_theo_ced_UQA && formData.quantit) {\r\n                                formData.quantite_ecart = (parseFloat(formData.Qte_theo_ced_UQA) - parseFloat(formData.quantit)).toString();\r\n                            }\r\n                            newData.push(formData);\r\n                            setFilteredData(newData);\r\n                        },\r\n                    },\r\n                })\r\n            );\r\n        } else if (action === \"remove\" && selectedItems.size > 0) {\r\n            const newData = [...filteredData];\r\n            const indicesToRemove = Array.from(selectedItems).sort((a, b) => b - a);\r\n            indicesToRemove.forEach((index) => newData.splice(index, 1));\r\n            setSelectedItems(new Set());\r\n            setFilteredData(newData);\r\n        }\r\n    };\r\n\r\n    // Export to Excel\r\n    const exportToExcel = () => {\r\n        const ws = XLSX.utils.json_to_sheet(filteredData);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"Livraisons\");\r\n        XLSX.writeFile(wb, `livraison_${moment().format(\"YYYYMMDD_HHmmss\")}.xlsx`);\r\n    };\r\n\r\n    // Print data\r\n    const handlePrint = () => {\r\n        const printContent = document.getElementById(\"livraison-table\").outerHTML;\r\n        const printWindow = window.open('', '_blank');\r\n        printWindow.document.write(`\r\n            <html>\r\n                <head><title>Print Livraison</title></head>\r\n                <body>${printContent}</body>\r\n            </html>\r\n        `);\r\n        printWindow.document.close();\r\n        printWindow.print();\r\n    };\r\n\r\n    // Handle delete\r\n    const handleDelete = (index) => {\r\n        dispatch(\r\n            openModal({\r\n                title: \"Confirm Deletion\",\r\n                bodyType: MODAL_BODY_TYPES.CONFIRMATION,\r\n                extraObject: { index },\r\n                onClose: ({ closeType }) => {\r\n                    if (closeType === CONFIRMATION_MODAL_CLOSE_TYPES.PRIMARY) {\r\n                        const newData = [...filteredData];\r\n                        newData.splice(index, 1);\r\n                        setFilteredData(newData);\r\n                        setSelectedItems(new Set());\r\n                    }\r\n                },\r\n            })\r\n        );\r\n    };\r\n\r\n    const columns = selectedType === 'LE' ? LE_COLUMNS : LS_COLUMNS;\r\n\r\n    return (\r\n        <TitleCard title=\"Livraison\">\r\n            <div className=\"grid grid-cols-1 gap-4\">\r\n                <div className=\"flex space-x-2 mb-4\">\r\n                    <select\r\n                        value={selectedType}\r\n                        onChange={(e) => {\r\n                            setSelectedType(e.target.value);\r\n                            setSelectedFile(\"\");\r\n                            setFileNames([]);\r\n                            setError(null);\r\n                        }}\r\n                        className=\"p-2 border rounded\"\r\n                    >\r\n                        <option value=\"LE\">Livraison Entrante (LE)</option>\r\n                        <option value=\"LS\">Livraison Sortante (LS)</option>\r\n                    </select>\r\n                    <select\r\n                        value={selectedFile}\r\n                        onChange={(e) => {\r\n                            setSelectedFile(e.target.value);\r\n                            setError(null);\r\n                        }}\r\n                        className=\"p-2 border rounded\"\r\n                        disabled={isLoadingFiles}\r\n                    >\r\n                        <option value=\"\">{isLoadingFiles ? \"Loading files...\" : \"Select a file\"}</option>\r\n                        {fileNames.map((name) => (\r\n                            <option key={name} value={name}>\r\n                                {name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <select\r\n                        value={filters.status}\r\n                        onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n                        className=\"p-2 border rounded\"\r\n                    >\r\n                        <option value=\"Tous les statuts\">Tous les statuts</option>\r\n                        <option value=\"Terminée\">Terminée</option>\r\n                        <option value=\"Non terminée\">Non terminée</option>\r\n                    </select>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Code article\"\r\n                        value={filters.articleCode}\r\n                        onChange={(e) => setFilters({ ...filters, articleCode: e.target.value })}\r\n                        className=\"p-2 border rounded\"\r\n                    />\r\n                </div>\r\n                {error && <div className=\"text-red-500 mb-4\">{error}</div>}\r\n                <div className=\"flex space-x-2 mb-4\">\r\n                    <button\r\n                        onClick={() => updateItems(\"add\")}\r\n                        className=\"bg-blue-500 text-white p-2 rounded hover:bg-blue-600\"\r\n                        disabled={!selectedFile}\r\n                    >\r\n                        Ajouter\r\n                    </button>\r\n                    <button\r\n                        onClick={() => updateItems(\"remove\")}\r\n                        className=\"bg-red-500 text-white p-2 rounded hover:bg-red-600\"\r\n                        disabled={selectedItems.size === 0}\r\n                    >\r\n                        Retirer\r\n                    </button>\r\n                    <button\r\n                        onClick={exportToExcel}\r\n                        className=\"bg-green-500 text-white p-2 rounded hover:bg-green-600\"\r\n                    >\r\n                        Exporter Excel\r\n                    </button>\r\n                    <button\r\n                        onClick={handlePrint}\r\n                        className=\"bg-yellow-500 text-white p-2 rounded hover:bg-yellow-600\"\r\n                    >\r\n                        Imprimer\r\n                    </button>\r\n                </div>\r\n                <div className=\"overflow-x-auto\">\r\n                    <table id=\"livraison-table\" className=\"w-full text-sm text-left text-gray-500\">\r\n                        <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\r\n                            <tr>\r\n                                <th className=\"px-4 py-2\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) =>\r\n                                            setSelectedItems(\r\n                                                e.target.checked\r\n                                                    ? new Set(filteredData.map((_, i) => i))\r\n                                                    : new Set()\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                </th>\r\n                                {columns.map((col) => (\r\n                                    <th key={col.key} className=\"px-4 py-2\" style={col.style || {}}>\r\n                                        {col.header}\r\n                                    </th>\r\n                                ))}\r\n                                <th className=\"px-4 py-2\">Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {filteredData.map((row, index) => (\r\n                                <tr\r\n                                    key={index}\r\n                                    className={`${selectedItems.has(index) ? \"bg-gray-100\" : \"\"} border-b hover:bg-gray-50`}\r\n                                >\r\n                                    <td className=\"px-4 py-2\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={selectedItems.has(index)}\r\n                                            onChange={() => toggleItem(index)}\r\n                                        />\r\n                                    </td>\r\n                                    {columns.map((col) => (\r\n                                        <td key={col.key} className=\"px-4 py-2\" style={col.style || {}}>\r\n                                            {row[col.key] || \"\"}\r\n                                        </td>\r\n                                    ))}\r\n                                    <td className=\"px-4 py-2\">\r\n                                        <button\r\n                                            onClick={() => handleDelete(index)}\r\n                                            className=\"text-red-500 hover:text-red-700\"\r\n                                        >\r\n                                            <TrashIcon className=\"h-5 w-5\" />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </TitleCard>\r\n    );\r\n};\r\n\r\nexport default Livraison;","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPageTitle } from '../../features/common/headerSlice';\r\nimport Leads from '../../features/leads';\r\n\r\nfunction InternalPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title: \"Leads\" }));\r\n    }, []);\r\n\r\n    return (\r\n        <Leads />\r\n    );\r\n}\r\n\r\nexport default InternalPage;"],"names":["title","children","topMargin","TopSideButtons","className","styleClass","dispatch","useDispatch","fileNames","setFileNames","useState","selectedFile","setSelectedFile","selectedType","setSelectedType","data","setData","filteredData","setFilteredData","filters","setFilters","status","deliveryCode","articleCode","selectedItems","setSelectedItems","Set","isLoadingFiles","setIsLoadingFiles","error","setError","BASE_URL","process","useEffect","async","url","console","log","res","fetch","method","headers","body","JSON","stringify","type","ok","errorText","text","Error","json","files","length","err","message","fetchFiles","payload","fileName","value","stock","fetchData","updateItems","action","openModal","bodyType","MODAL_BODY_TYPES","extraObject","fields","name","defaultValue","moment","format","required","options","onSubmit","formData","newData","Qte_theo_ced_UQA","quantit","quantite_ecart","parseFloat","toString","push","size","Array","from","sort","a","b","forEach","index","splice","columns","header","key","style","width","TitleCard","onChange","e","target","disabled","map","placeholder","onClick","ws","XLSX","wb","printContent","document","getElementById","outerHTML","printWindow","window","open","write","close","print","id","checked","_","i","col","row","has","newSelected","delete","add","toggleItem","onClose","closeType","CONFIRMATION_MODAL_CLOSE_TYPES","handleDelete","TrashIcon","setPageTitle"],"sourceRoot":""}